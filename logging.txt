request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551253450.274375
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["src"]\n                        document.getElementById("randomNumber").textContent = res["number"]\n                        document.getElementById("scanId").textContent = res["scan_id"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function checkHistory(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify(scanId.innerText))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkHistory)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551253450.27936
latency: 0.00498509407043457

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551253450.5301867
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551253450.543152
latency: 0.01296544075012207

request: b'GET /getImage? HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nReferer: http://localhost:8888/getImage?\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551253529.0057132
request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551253697.1198246
request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551253816.126081
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["src"]\n                        document.getElementById("randomNumber").textContent = res["number"]\n                        document.getElementById("scanId").textContent = res["scan_id"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function checkHistory(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify(scanId.innerText))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkHistory)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551253816.1391206
latency: 0.013039588928222656

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/getImage\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551253816.385191
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551253816.4051437
latency: 0.019952774047851562

request: b'GET /getImage??? HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551253842.3505554
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["src"]\n                        document.getElementById("randomNumber").textContent = res["number"]\n                        document.getElementById("scanId").textContent = res["scan_id"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function checkHistory(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify(scanId.innerText))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkHistory)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551253842.368605
latency: 0.01804947853088379

request: b'GET /getImage??? HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551253929.315524
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["src"]\n                        document.getElementById("randomNumber").textContent = res["number"]\n                        document.getElementById("scanId").textContent = res["scan_id"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function checkHistory(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify(scanId.innerText))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkHistory)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551253929.3404605
latency: 0.024936437606811523

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551253936.7271218
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["src"]\n                        document.getElementById("randomNumber").textContent = res["number"]\n                        document.getElementById("scanId").textContent = res["scan_id"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function checkHistory(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify(scanId.innerText))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkHistory)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551253936.7550535
latency: 0.027931690216064453

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551253936.9836318
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551253937.0175314
latency: 0.033899545669555664

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551255142.5364249
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["src"]\n                        document.getElementById("randomNumber").textContent = res["number"]\n                        document.getElementById("scanId").textContent = res["scan_id"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function checkHistory(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify(scanId.innerText))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkHistory)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551255142.5723288
latency: 0.0359039306640625

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551255142.794513
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551255142.8394566
latency: 0.04494357109069824

request: b'GET /useService HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551255154.227185
response: b'HTTP/1.1 200\r\n\r\n{"number": 7, "src": "https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mnh1uhYnog1st5lhmo1_1280.jpg", "scan_id": "4b1b20f16ecc0b38acd6e93518d3f3bf899a60a1f539b04372a7e872e3806e07-1551219198"}'
endTime: 1551255199.4865198
latency: 45.25933480262756

request: b'GET /useService HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551255261.1020002
response: b'HTTP/1.1 200\r\n\r\n{"number": 5, "src": "https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mnh1d7s3UD1st5lhmo1_1280.jpg", "scan_id": "8bdc44490116714393b8c53634f46048c4f4adb8e4e949f5c7f947c82067d5b1-1551219305"}'
endTime: 1551255306.3071675
latency: 45.205167293548584

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551255634.6426866
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["src"]\n                        document.getElementById("randomNumber").textContent = res["number"]\n                        document.getElementById("scanId").textContent = res["scan_id"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function checkHistory(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText); debugger;\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify(scanId.innerText))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkHistory)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551255634.6975617
latency: 0.05487513542175293

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551255708.3359962
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551255771.63142
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["src"]\n                        document.getElementById("randomNumber").textContent = res["number"]\n                        document.getElementById("scanId").textContent = res["scan_id"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function checkHistory(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText); debugger;\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify(scanId.innerText))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkHistory)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551255771.6802917
latency: 0.048871755599975586

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551255771.8902838
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551255771.9524112
latency: 0.06212735176086426

request: b'GET /useService HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551255776.4717267
response: b'HTTP/1.1 200\r\n\r\n{"number": 4, "src": "https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mnh17lfd9R1st5lhmo1_1280.jpg", "scan_id": "fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551219820"}'
endTime: 1551255821.5063627
latency: 45.0346360206604

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551255829.4812043
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["src"]\n                        document.getElementById("randomNumber").textContent = res["number"]\n                        document.getElementById("scanId").textContent = res["scan_id"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function checkHistory(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText); debugger;\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify(scanId.innerText))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkHistory)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551255829.5370111
latency: 0.055806875228881836

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551255957.153291
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["src"]\n                        document.getElementById("randomNumber").textContent = res["number"]\n                        document.getElementById("scanId").textContent = res["scan_id"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function checkHistory(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText); debugger;\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify(scanId.innerText))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkHistory)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551255957.210154
latency: 0.05686306953430176

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551255957.4104676
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551255957.4774876
latency: 0.06701993942260742

request: b'GET /useService HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551255961.910899
response: b'HTTP/1.1 200\r\n\r\n{"number": 1, "src": "https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mnh0n9pHJW1st5lhmo1_1280.jpg", "scan_id": "65d770f9d05ea6ff6f795914e8497cb2fd8057013e2d04d65edbad713d57fd17-1551220010"}'
endTime: 1551256011.6830013
latency: 49.77210235595703

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256251.8040297
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkHistory(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText); debugger;\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify(scanId.innerText))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkHistory)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551256251.876515
latency: 0.07248520851135254

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256252.254276
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551256252.335135
latency: 0.08085894584655762

request: b'GET /metrics HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256264.3402946
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551256264.3927884
latency: 0.05249381065368652

request: b'GET /metrics HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256283.7304575
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551256283.8053396
latency: 0.07488203048706055

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256373.8667445
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n        \n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText); debugger;\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify(scanId.innerText))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551256373.9518523
latency: 0.08510780334472656

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256398.7320852
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n        \n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText); debugger;\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify(scanId.innerText))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551256398.8069272
latency: 0.07484197616577148

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256414.1120458
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n        \n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText); debugger;\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify(scanId.innerText))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551256414.1898363
latency: 0.07779049873352051

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256414.3673368
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551256414.455101
latency: 0.08776426315307617

request: b'GET /metrics HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256418.4873047
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551256418.5530322
latency: 0.06572747230529785

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256537.539398
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n        \n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText); debugger;\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify(scanId.innerText))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551256537.625201
latency: 0.08580303192138672

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256537.7948189
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551256537.8819082
latency: 0.08708930015563965

request: b'GET /metrics HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256539.6236098
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256597.3535857
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n        \n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText); debugger;\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify(scanId.innerText))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551256597.4484842
latency: 0.09489846229553223

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256597.6087527
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551256597.7164652
latency: 0.1077125072479248

request: b'GET /metrics HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256598.6052818
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256608.6150353
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n        \n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText); debugger;\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify(scanId.innerText))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551256608.7187607
latency: 0.10372543334960938

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256608.8723497
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551256608.9745903
latency: 0.10224056243896484

request: b'GET /metrics HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256610.199649
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256648.5973358
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n        \n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText); debugger;\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify(scanId.innerText))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551256648.7119153
latency: 0.11457943916320801

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256648.8555312
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551256648.955389
latency: 0.09985780715942383

request: b'GET /metrics HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256649.9222138
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256783.6723406
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n        \n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText); debugger;\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify(scanId.innerText))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551256783.7870376
latency: 0.11469697952270508

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256783.9318726
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551256784.0655158
latency: 0.13364315032958984

request: b'GET /metrics HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256787.4549258
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256916.214664
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n        \n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText); debugger;\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify(scanId.innerText))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551256916.3343427
latency: 0.11967873573303223

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256916.4949138
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551256916.6348994
latency: 0.1399855613708496

request: b'GET /useService HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551256918.911704
response: b'HTTP/1.1 200\r\n\r\n{"number": 6, "src": "https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mnh1jdFvHR1st5lhmo1_1280.jpg", "scan_id": "d1b2ae271687fcd80742024b8106baa04e36e085259c3774faa03a975e86fe70-1551220962"}'
endTime: 1551256963.7792525
latency: 44.86754846572876

request: b'GET /useService HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551257003.4290824
response: b'HTTP/1.1 200\r\n\r\n{"number": 1, "src": "https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mnh0n9pHJW1st5lhmo1_1280.jpg", "scan_id": "65d770f9d05ea6ff6f795914e8497cb2fd8057013e2d04d65edbad713d57fd17-1551221047"}'
endTime: 1551257048.5817611
latency: 45.15267872810364

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 77\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"d1b2ae271687fcd80742024b8106baa04e36e085259c3774faa03a975e86fe70-1551220962"'
startTime: 1551257220.5511093
response: b"HTTP/1.1 200\r\n\r\n('/checkScanResult', '')"
endTime: 1551257220.676888
latency: 0.1257786750793457

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551257321.6818907
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText); debugger;\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj.response)\n                        let res = JSON.parse(responseObj.response)\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify({\'scan_id\': scanId.innerText}))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551257321.8204806
latency: 0.13858985900878906

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 77\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"65d770f9d05ea6ff6f795914e8497cb2fd8057013e2d04d65edbad713d57fd17-1551221047"'
startTime: 1551257321.9611814
response: b"HTTP/1.1 200\r\n\r\n('/checkScanResult', '')"
endTime: 1551257322.113772
latency: 0.15259051322937012

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551257322.293163
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551257322.429933
latency: 0.13677000999450684

request: b'GET /useService HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551257327.0718577
response: b'HTTP/1.1 200\r\n\r\n{"number": 2, "src": "https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mnh0uemhCk1st5lhmo1_1280.jpg", "scan_id": "21eabf59f1c0f7ce25a0fbaafb301f80573ca9fc612e49d41df2a8d324a93552-1551221372"}'
endTime: 1551257373.5665145
latency: 46.494656801223755

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 14\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":""}'
startTime: 1551257373.675884
response: b"HTTP/1.1 200\r\n\r\n('/checkScanResult', '')"
endTime: 1551257373.8084626
latency: 0.13257861137390137

request: b'GET /useService HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551257373.9881942
response: b'HTTP/1.1 200\r\n\r\n{"number": 2, "src": "https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mnh0uemhCk1st5lhmo1_1280.jpg", "scan_id": "21eabf59f1c0f7ce25a0fbaafb301f80573ca9fc612e49d41df2a8d324a93552-1551221372"}'
endTime: 1551257419.0649188
latency: 45.07672452926636

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551257435.2972684
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText); debugger;\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj)\n                        let res = JSON.parse(responseObj.response[1])\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify({\'scan_id\': scanId.innerText}))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551257435.4488616
latency: 0.15159320831298828

request: b'GET /metrics HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551257441.2176216
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 14\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":""}'
startTime: 1551257490.0957017
response: b"HTTP/1.1 200\r\n\r\n('/checkScanResult', '')"
endTime: 1551257490.2443027
latency: 0.14860105514526367

request: b''
startTime: 1551257662.742587
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551257799.644634
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText); debugger;\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj)\n                        let res = JSON.parse(responseObj.response[1])\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify({\'scan_id\': scanId.innerText}))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551257799.7802968
latency: 0.13566279411315918

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551257799.948812
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551257800.088739
latency: 0.13992691040039062

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 14\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":""}'
startTime: 1551257803.3858893
response: b"HTTP/1.1 200\r\n\r\n('/checkScanResult', '')"
endTime: 1551257803.5265894
latency: 0.140700101852417

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551257838.685976
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText); debugger;\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj)\n                        let res = JSON.parse(responseObj.response[1])\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify({\'scan_id\': scanId.innerText}))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551257838.834372
latency: 0.14839601516723633

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551257839.0080922
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551257839.1617677
latency: 0.15367555618286133

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 14\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":""}'
startTime: 1551257849.05173
response: b"HTTP/1.1 200\r\n\r\n('/checkScanResult', '')"
endTime: 1551257849.1761837
latency: 0.12445378303527832

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 14\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":""}'
startTime: 1551258216.2217145
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551258256.8229978
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText); debugger;\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj)\n                        let res = JSON.parse(responseObj.response[1])\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify({\'scan_id\': scanId.innerText}))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551258256.9786122
latency: 0.15561437606811523

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551258257.1531146
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551258257.3186789
latency: 0.16556429862976074

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 14\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":""}'
startTime: 1551258260.6425886
response: b'HTTP/1.1 200\r\n\r\nNone'
endTime: 1551258260.7951787
latency: 0.15259003639221191

request: b'GET /useService HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551258270.7610967
response: b'HTTP/1.1 200\r\n\r\n{"number": 3, "src": "https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mnh121HEWa1st5lhmo1_1280.jpg", "scan_id": "86832203c3d5a1fe46da31c990a6dc74ca9cd77478df9e9eeac5e271e5883e21-1551222314"}'
endTime: 1551258315.683562
latency: 44.922465324401855

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 14\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":""}'
startTime: 1551258322.0924468
response: b'HTTP/1.1 200\r\n\r\nNone'
endTime: 1551258322.2430062
latency: 0.1505594253540039

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 89\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"86832203c3d5a1fe46da31c990a6dc74ca9cd77478df9e9eeac5e271e5883e21-1551222314"}'
startTime: 1551258329.2216504
response: b'HTTP/1.1 200\r\n\r\nNone'
endTime: 1551258329.3782482
latency: 0.15659785270690918

request: b'POST /checkScanResults?scan_id=86832203c3d5a1fe46da31c990a6dc74ca9cd77478df9e9eeac5e271e5883e21-1551222314 HTTP/1.1\r\ncache-control: no-cache\r\nPostman-Token: 5e96ee00-969e-4b2b-94b3-ed1f6e1f9f6f\r\nUser-Agent: PostmanRuntime/7.6.0\r\nAccept: */*\r\nHost: localhost:8888\r\naccept-encoding: gzip, deflate\r\ncontent-length: 0\r\nConnection: keep-alive\r\n\r\n'
startTime: 1551258381.3955684
request: b'POST /checkScanResults?scan_id=86832203c3d5a1fe46da31c990a6dc74ca9cd77478df9e9eeac5e271e5883e21-1551222314 HTTP/1.1\r\ncache-control: no-cache\r\nPostman-Token: 7b28dfe5-e35e-4ccc-9faa-30d031b75737\r\nUser-Agent: PostmanRuntime/7.6.0\r\nAccept: */*\r\nHost: localhost:8888\r\naccept-encoding: gzip, deflate\r\ncontent-length: 0\r\nConnection: keep-alive\r\n\r\n'
startTime: 1551258414.24689
request: b'POST /checkScanResults?scan_id=86832203c3d5a1fe46da31c990a6dc74ca9cd77478df9e9eeac5e271e5883e21-1551222314 HTTP/1.1\r\ncache-control: no-cache\r\nPostman-Token: 8580586e-98dc-4315-9b90-3d06a1ee93b0\r\nUser-Agent: PostmanRuntime/7.6.0\r\nAccept: */*\r\nHost: localhost:8888\r\naccept-encoding: gzip, deflate\r\ncontent-length: 0\r\nConnection: keep-alive\r\n\r\n'
startTime: 1551258473.989647
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 89\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"86832203c3d5a1fe46da31c990a6dc74ca9cd77478df9e9eeac5e271e5883e21-1551222314"}'
startTime: 1551258514.4262981
response: b'HTTP/1.1 200\r\n\r\nNone'
endTime: 1551258514.5798874
latency: 0.15358924865722656

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551258519.0149398
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj)\n                        let res = JSON.parse(responseObj.response[1])\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify({\'scan_id\': scanId.innerText}))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551258519.167531
latency: 0.15259122848510742

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551258527.9004688
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj)\n                        let res = JSON.parse(responseObj.response[1])\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify({\'scan_id\': scanId.innerText}))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551258528.0630288
latency: 0.16255998611450195

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551258528.2745366
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551258528.464113
latency: 0.1895763874053955

request: b'GET /useService HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551258536.7779255
response: b'HTTP/1.1 200\r\n\r\n{"number": 5, "src": "https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mnh1d7s3UD1st5lhmo1_1280.jpg", "scan_id": "8bdc44490116714393b8c53634f46048c4f4adb8e4e949f5c7f947c82067d5b1-1551222581"}'
endTime: 1551258582.0369344
latency: 45.25900888442993

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 14\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":""}'
startTime: 1551258634.0534678
response: b'HTTP/1.1 200\r\n\r\nNone'
endTime: 1551258634.231755
latency: 0.17828726768493652

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 89\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"8bdc44490116714393b8c53634f46048c4f4adb8e4e949f5c7f947c82067d5b1-1551222581"}'
startTime: 1551258898.2077527
response: b'HTTP/1.1 200\r\n\r\nNone'
endTime: 1551258898.3743393
latency: 0.16658663749694824

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 89\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"8bdc44490116714393b8c53634f46048c4f4adb8e4e949f5c7f947c82067d5b1-1551222581"}'
startTime: 1551258991.1778028
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 89\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"8bdc44490116714393b8c53634f46048c4f4adb8e4e949f5c7f947c82067d5b1-1551222581"}'
startTime: 1551259009.553638
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 89\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"8bdc44490116714393b8c53634f46048c4f4adb8e4e949f5c7f947c82067d5b1-1551222581"}'
startTime: 1551259039.0223944
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 89\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"8bdc44490116714393b8c53634f46048c4f4adb8e4e949f5c7f947c82067d5b1-1551222581"}'
startTime: 1551259119.4288013
response: b'HTTP/1.1 200\r\n\r\nNone'
endTime: 1551259120.053614
latency: 0.6248126029968262

request: b''
startTime: 1551259140.7419922
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 89\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"8bdc44490116714393b8c53634f46048c4f4adb8e4e949f5c7f947c82067d5b1-1551222581"}'
startTime: 1551259194.497635
response: b'HTTP/1.1 200\r\n\r\nNone'
endTime: 1551259195.02153
latency: 0.5238950252532959

request: b''
startTime: 1551259235.7623105
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 89\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"8bdc44490116714393b8c53634f46048c4f4adb8e4e949f5c7f947c82067d5b1-1551222581"}'
startTime: 1551259236.069179
response: b'HTTP/1.1 200\r\n\r\nNone'
endTime: 1551259236.6339266
latency: 0.5647475719451904

request: b''
startTime: 1551259338.7503262
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 89\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"8bdc44490116714393b8c53634f46048c4f4adb8e4e949f5c7f947c82067d5b1-1551222581"}'
startTime: 1551259351.4064195
response: b'HTTP/1.1 200\r\n\r\n[]'
endTime: 1551259352.244729
latency: 0.8383095264434814

request: b''
startTime: 1551259386.1187854
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 89\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"8bdc44490116714393b8c53634f46048c4f4adb8e4e949f5c7f947c82067d5b1-1551222581"}'
startTime: 1551259386.4263337
response: b'HTTP/1.1 200\r\n\r\n[]'
endTime: 1551259386.9756956
latency: 0.5493619441986084

request: b''
startTime: 1551259479.9062462
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 89\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"8bdc44490116714393b8c53634f46048c4f4adb8e4e949f5c7f947c82067d5b1-1551222581"}'
startTime: 1551259480.2092276
response: b'HTTP/1.1 200\r\n\r\n[]'
endTime: 1551259481.0926554
latency: 0.8834278583526611

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 89\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"8bdc44490116714393b8c53634f46048c4f4adb8e4e949f5c7f947c82067d5b1-1551222581"}'
startTime: 1551259602.2963274
response: b'HTTP/1.1 200\r\n\r\n[]'
endTime: 1551259602.896516
latency: 0.6001887321472168

request: b''
startTime: 1551259618.709586
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 89\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"8bdc44490116714393b8c53634f46048c4f4adb8e4e949f5c7f947c82067d5b1-1551222581"}'
startTime: 1551259672.464212
response: b'HTTP/1.1 200\r\n\r\n[]'
endTime: 1551259673.0098214
latency: 0.5456094741821289

request: b''
startTime: 1551259701.1766062
request: b'GET /useService HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551259821.1733313
response: b'HTTP/1.1 200\r\n\r\n{"number": 10, "src": "https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mnh2m1hnS81st5lhmo1_1280.jpg", "scan_id": "a12330cb694e13b258b7470369c5452f3bc84fe4417cacdb76c4337cb0d8fc59-1551223866"}'
endTime: 1551259866.8952086
latency: 45.721877336502075

request: b''
startTime: 1551259882.0862234
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 89\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"a12330cb694e13b258b7470369c5452f3bc84fe4417cacdb76c4337cb0d8fc59-1551223866"}'
startTime: 1551259882.3878255
response: b'HTTP/1.1 200\r\n\r\n[]'
endTime: 1551259882.869761
latency: 0.4819355010986328

request: b'GET /useService HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551259961.33445
request: b'GET /useService HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551260029.757615
response: b'HTTP/1.1 200\r\n\r\n{"number": 8, "src": "https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mnh25vNOvI1st5lhmo1_1280.jpg", "scan_id": "b975db927bdb8b4b627bcb7dd184aff5e624ed2179aa0eb3acd2bd60ba79e3e7-1551224075"}'
endTime: 1551260075.8100238
latency: 46.05240869522095

request: b''
startTime: 1551260075.9905677
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 89\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"b975db927bdb8b4b627bcb7dd184aff5e624ed2179aa0eb3acd2bd60ba79e3e7-1551224075"}'
startTime: 1551260140.1892078
response: b'HTTP/1.1 200\r\n\r\n[]'
endTime: 1551260140.9907162
latency: 0.8015084266662598

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 89\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"b975db927bdb8b4b627bcb7dd184aff5e624ed2179aa0eb3acd2bd60ba79e3e7-1551224075"}'
startTime: 1551260160.429918
response: b'HTTP/1.1 200\r\n\r\n[]'
endTime: 1551260160.9538753
latency: 0.5239572525024414

request: b''
startTime: 1551260268.0695884
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551260523.4590564
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        console.log("brute ", responseObj)\n                        let res = JSON.parse(responseObj.response[1])\n                        console.log("parsed", res)\n                        break;\n                    default:\n                        break;\n                }\n            }\n            \n            req.send(JSON.stringify({\'scan_id\': scanId.innerText}))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551260523.6356287
latency: 0.17657232284545898

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551260523.8317533
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551260524.016298
latency: 0.18454480171203613

request: b'GET /useService HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551260528.0859625
response: b'HTTP/1.1 200\r\n\r\n{"number": 9, "src": "https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mnh29fxz111st5lhmo1_1280.jpg", "scan_id": "8a5f7ebb1857352f2351d031f02a4f03db62b7676ef6fb5a2802632d901657b8-1551224572"}'
endTime: 1551260573.4756258
latency: 45.389663219451904

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 14\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":""}'
startTime: 1551261086.6538267
response: b'HTTP/1.1 200\r\n\r\n[]'
endTime: 1551261087.5158553
latency: 0.8620285987854004

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 89\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"8a5f7ebb1857352f2351d031f02a4f03db62b7676ef6fb5a2802632d901657b8-1551224572"}'
startTime: 1551261131.0902603
response: b'HTTP/1.1 200\r\n\r\n[]'
endTime: 1551261131.6692624
latency: 0.5790021419525146

request: b''
startTime: 1551261210.7464206
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 89\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"8a5f7ebb1857352f2351d031f02a4f03db62b7676ef6fb5a2802632d901657b8-1551224572"}'
startTime: 1551261251.7733665
response: b'HTTP/1.1 200\r\n\r\n[]'
endTime: 1551261252.3513908
latency: 0.5780243873596191

request: b''
startTime: 1551261298.7414587
request: b'GET /useService HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551261304.477085
response: b'HTTP/1.1 200\r\n\r\n{"number": 4, "src": "https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mnh17lfd9R1st5lhmo1_1280.jpg", "resource": "fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590", "scan_id": "fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348"}'
endTime: 1551261349.6026506
latency: 45.12556552886963

request: b''
startTime: 1551261349.7727587
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551261523.2963045
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({\'scan_id\': scanId.innerText}))\n            let x = {\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(x))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551261523.4800787
latency: 0.18377423286437988

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551261523.6894538
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551261523.8628974
latency: 0.17344355583190918

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551261672.0077732
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551261672.2212012
latency: 0.21342802047729492

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 79\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551261672.4186735
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551261684.5159743
response: b"HTTP/1.1 200\r\n\r\n{'scans': {'TotalDefense': {'detected': False, 'version': '37.1.62.1', 'result': None, 'update': '20190226'}, 'MicroWorld-eScan': {'detected': False, 'version': '14.0.297.0', 'result': None, 'update': '20190226'}, 'CMC': {'detected': False, 'version': '1.1.0.977', 'result': None, 'update': '20190226'}, 'CAT-QuickHeal': {'detected': False, 'version': '14.00', 'result': None, 'update': '20190225'}, 'McAfee': {'detected': False, 'version': '6.0.6.653', 'result': None, 'update': '20190226'}, 'Malwarebytes': {'detected': False, 'version': '2.1.1.1115', 'result': None, 'update': '20190226'}, 'SUPERAntiSpyware': {'detected': False, 'version': '5.6.0.1032', 'result': None, 'update': '20190220'}, 'TheHacker': {'detected': False, 'version': '6.8.0.5.4029', 'result': None, 'update': '20190225'}, 'K7GW': {'detected': False, 'version': '11.31.30116', 'result': None, 'update': '20190226'}, 'K7AntiVirus': {'detected': False, 'version': '11.31.30117', 'result': None, 'update': '20190226'}, 'Arcabit': {'detected': False, 'version': '1.0.0.837', 'result': None, 'update': '20190226'}, 'Baidu': {'detected': False, 'version': '1.0.0.2', 'result': None, 'update': '20190215'}, 'Babable': {'detected': False, 'version': '9107201', 'result': None, 'update': '20180918'}, 'Cyren': {'detected': False, 'version': '6.2.0.1', 'result': None, 'update': '20190226'}, 'Symantec': {'detected': False, 'version': '1.8.0.0', 'result': None, 'update': '20190226'}, 'ESET-NOD32': {'detected': False, 'version': '18939', 'result': None, 'update': '20190226'}, 'TrendMicro-HouseCall': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'Avast': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190226'}, 'ClamAV': {'detected': False, 'version': '0.101.1.0', 'result': None, 'update': '20190226'}, 'Kaspersky': {'detected': False, 'version': '15.0.1.13', 'result': None, 'update': '20190226'}, 'BitDefender': {'detected': False, 'version': '7.2', 'result': None, 'update': '20190226'}, 'NANO-Antivirus': {'detected': False, 'version': '1.0.134.24576', 'result': None, 'update': '20190226'}, 'ViRobot': {'detected': False, 'version': '2014.3.20.0', 'result': None, 'update': '20190226'}, 'Tencent': {'detected': False, 'version': '1.0.0.1', 'result': None, 'update': '20190226'}, 'Ad-Aware': {'detected': False, 'version': '3.0.5.370', 'result': None, 'update': '20190226'}, 'Emsisoft': {'detected': False, 'version': '2018.4.0.1029', 'result': None, 'update': '20190226'}, 'Comodo': {'detected': False, 'version': '30490', 'result': None, 'update': '20190226'}, 'F-Secure': {'detected': False, 'version': '12.0.86.52', 'result': None, 'update': '20190226'}, 'DrWeb': {'detected': False, 'version': '7.0.34.11020', 'result': None, 'update': '20190226'}, 'Zillya': {'detected': False, 'version': '2.0.0.3762', 'result': None, 'update': '20190226'}, 'TrendMicro': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'McAfee-GW-Edition': {'detected': False, 'version': 'v2017.3010', 'result': None, 'update': '20190226'}, 'Sophos': {'detected': False, 'version': '4.98.0', 'result': None, 'update': '20190226'}, 'Avast-Mobile': {'detected': False, 'version': '190226-00', 'result': None, 'update': '20190226'}, 'Jiangmin': {'detected': False, 'version': '16.0.100', 'result': None, 'update': '20190226'}, 'Avira': {'detected': False, 'version': '8.3.3.8', 'result': None, 'update': '20190226'}, 'Antiy-AVL': {'detected': False, 'version': '3.0.0.1', 'result': None, 'update': '20190226'}, 'Kingsoft': {'detected': False, 'version': '2013.8.14.323', 'result': None, 'update': '20190226'}, 'Microsoft': {'detected': False, 'version': '1.1.15700.8', 'result': None, 'update': '20190226'}, 'AegisLab': {'detected': False, 'version': '4.2', 'result': None, 'update': '20190226'}, 'ZoneAlarm': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190226'}, 'GData': {'detected': False, 'version': 'A:25.20851B:25.14478', 'result': None, 'update': '20190226'}, 'TACHYON': {'detected': False, 'version': '2019-02-26.02', 'result': None, 'update': '20190226'}, 'AhnLab-V3': {'detected': False, 'version': '3.14.1.22785', 'result': None, 'update': '20190226'}, 'VBA32': {'detected': False, 'version': '4.0.0', 'result': None, 'update': '20190226'}, 'ALYac': {'detected': False, 'version': '1.1.1.5', 'result': None, 'update': '20190226'}, 'MAX': {'detected': False, 'version': '2018.9.12.1', 'result': None, 'update': '20190226'}, 'Zoner': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190226'}, 'Rising': {'detected': False, 'version': '25.0.0.24', 'result': None, 'update': '20190226'}, 'Yandex': {'detected': False, 'version': '5.5.1.3', 'result': None, 'update': '20190226'}, 'Ikarus': {'detected': False, 'version': '0.1.5.2', 'result': None, 'update': '20190226'}, 'Fortinet': {'detected': False, 'version': '5.4.247.0', 'result': None, 'update': '20190226'}, 'AVG': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190226'}, 'Panda': {'detected': False, 'version': '4.6.4.2', 'result': None, 'update': '20190226'}, 'Qihoo-360': {'detected': False, 'version': '1.0.0.1120', 'result': None, 'update': '20190226'}}, 'scan_id': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551219820', 'sha1': 'dab0cbe1fad20596a12da14ac2fa50ddd949b965', 'resource': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590', 'response_code': 1, 'scan_date': '2019-02-26 22:23:40', 'permalink': 'https://www.virustotal.com/file/fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590/analysis/1551219820/', 'verbose_msg': 'Scan finished, information embedded', 'total': 55, 'positives': 0, 'sha256': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590', 'md5': 'bd6dcc1d6612d709a664c89bb3941c4a'}"
endTime: 1551261685.5084116
latency: 0.9924373626708984

request: b''
startTime: 1551261904.7412887
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551261907.964795
response: b"HTTP/1.1 200\r\n\r\n{'scans': {'Bkav': {'detected': False, 'version': '1.3.0.9899', 'result': None, 'update': '20190226'}, 'MicroWorld-eScan': {'detected': False, 'version': '14.0.297.0', 'result': None, 'update': '20190226'}, 'CMC': {'detected': False, 'version': '1.1.0.977', 'result': None, 'update': '20190226'}, 'CAT-QuickHeal': {'detected': False, 'version': '14.00', 'result': None, 'update': '20190225'}, 'McAfee': {'detected': False, 'version': '6.0.6.653', 'result': None, 'update': '20190226'}, 'Malwarebytes': {'detected': False, 'version': '2.1.1.1115', 'result': None, 'update': '20190226'}, 'AegisLab': {'detected': False, 'version': '4.2', 'result': None, 'update': '20190226'}, 'TheHacker': {'detected': False, 'version': '6.8.0.5.4029', 'result': None, 'update': '20190225'}, 'K7GW': {'detected': False, 'version': '11.31.30117', 'result': None, 'update': '20190227'}, 'K7AntiVirus': {'detected': False, 'version': '11.31.30117', 'result': None, 'update': '20190226'}, 'Baidu': {'detected': False, 'version': '1.0.0.2', 'result': None, 'update': '20190215'}, 'Babable': {'detected': False, 'version': '9107201', 'result': None, 'update': '20180918'}, 'F-Prot': {'detected': False, 'version': '4.7.1.166', 'result': None, 'update': '20190226'}, 'Symantec': {'detected': False, 'version': '1.8.0.0', 'result': None, 'update': '20190226'}, 'ESET-NOD32': {'detected': False, 'version': '18940', 'result': None, 'update': '20190226'}, 'TrendMicro-HouseCall': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'Avast': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190227'}, 'ClamAV': {'detected': False, 'version': '0.101.1.0', 'result': None, 'update': '20190226'}, 'Kaspersky': {'detected': False, 'version': '15.0.1.13', 'result': None, 'update': '20190226'}, 'BitDefender': {'detected': False, 'version': '7.2', 'result': None, 'update': '20190226'}, 'NANO-Antivirus': {'detected': False, 'version': '1.0.134.24576', 'result': None, 'update': '20190226'}, 'ViRobot': {'detected': False, 'version': '2014.3.20.0', 'result': None, 'update': '20190226'}, 'Ad-Aware': {'detected': False, 'version': '3.0.5.370', 'result': None, 'update': '20190226'}, 'Sophos': {'detected': False, 'version': '4.98.0', 'result': None, 'update': '20190226'}, 'Comodo': {'detected': False, 'version': '30490', 'result': None, 'update': '20190226'}, 'F-Secure': {'detected': False, 'version': '12.0.86.52', 'result': None, 'update': '20190226'}, 'DrWeb': {'detected': False, 'version': '7.0.34.11020', 'result': None, 'update': '20190227'}, 'Zillya': {'detected': False, 'version': '2.0.0.3762', 'result': None, 'update': '20190226'}, 'TrendMicro': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'McAfee-GW-Edition': {'detected': False, 'version': 'v2017.3010', 'result': None, 'update': '20190226'}, 'Emsisoft': {'detected': False, 'version': '2018.4.0.1029', 'result': None, 'update': '20190226'}, 'Cyren': {'detected': False, 'version': '6.2.0.1', 'result': None, 'update': '20190226'}, 'Jiangmin': {'detected': False, 'version': '16.0.100', 'result': None, 'update': '20190226'}, 'Avira': {'detected': False, 'version': '8.3.3.8', 'result': None, 'update': '20190226'}, 'Antiy-AVL': {'detected': False, 'version': '3.0.0.1', 'result': None, 'update': '20190226'}, 'Kingsoft': {'detected': False, 'version': '2013.8.14.323', 'result': None, 'update': '20190227'}, 'Microsoft': {'detected': False, 'version': '1.1.15700.9', 'result': None, 'update': '20190227'}, 'Arcabit': {'detected': False, 'version': '1.0.0.837', 'result': None, 'update': '20190226'}, 'SUPERAntiSpyware': {'detected': False, 'version': '5.6.0.1032', 'result': None, 'update': '20190220'}, 'AhnLab-V3': {'detected': False, 'version': '3.14.1.22785', 'result': None, 'update': '20190226'}, 'ZoneAlarm': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190226'}, 'Avast-Mobile': {'detected': False, 'version': '190226-00', 'result': None, 'update': '20190226'}, 'GData': {'detected': False, 'version': 'A:25.20851B:25.14478', 'result': None, 'update': '20190226'}, 'TACHYON': {'detected': False, 'version': '2019-02-26.02', 'result': None, 'update': '20190226'}, 'TotalDefense': {'detected': False, 'version': '37.1.62.1', 'result': None, 'update': '20190226'}, 'VBA32': {'detected': False, 'version': '4.0.0', 'result': None, 'update': '20190226'}, 'ALYac': {'detected': False, 'version': '1.1.1.5', 'result': None, 'update': '20190226'}, 'MAX': {'detected': False, 'version': '2018.9.12.1', 'result': None, 'update': '20190227'}, 'Zoner': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190227'}, 'Tencent': {'detected': False, 'version': '1.0.0.1', 'result': None, 'update': '20190227'}, 'Yandex': {'detected': False, 'version': '5.5.1.3', 'result': None, 'update': '20190226'}, 'Ikarus': {'detected': False, 'version': '0.1.5.2', 'result': None, 'update': '20190226'}, 'Fortinet': {'detected': False, 'version': '5.4.247.0', 'result': None, 'update': '20190226'}, 'AVG': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190227'}, 'Panda': {'detected': False, 'version': '4.6.4.2', 'result': None, 'update': '20190226'}, 'Qihoo-360': {'detected': False, 'version': '1.0.0.1120', 'result': None, 'update': '20190227'}}, 'scan_id': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348', 'sha1': 'dab0cbe1fad20596a12da14ac2fa50ddd949b965', 'resource': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590', 'response_code': 1, 'scan_date': '2019-02-26 23:55:48', 'permalink': 'https://www.virustotal.com/file/fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590/analysis/1551225348/', 'verbose_msg': 'Scan finished, information embedded', 'total': 56, 'positives': 0, 'sha256': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590', 'md5': 'bd6dcc1d6612d709a664c89bb3941c4a'}"
endTime: 1551261908.6640847
latency: 0.6992895603179932

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551264502.527365
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551264502.7257593
latency: 0.1983942985534668

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551264502.9810772
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551264503.1875997
latency: 0.20652246475219727

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551264522.9039218
response: b"HTTP/1.1 200\r\n\r\n{'scans': {'Bkav': {'detected': False, 'version': '1.3.0.9899', 'result': None, 'update': '20190226'}, 'MicroWorld-eScan': {'detected': False, 'version': '14.0.297.0', 'result': None, 'update': '20190226'}, 'CMC': {'detected': False, 'version': '1.1.0.977', 'result': None, 'update': '20190226'}, 'CAT-QuickHeal': {'detected': False, 'version': '14.00', 'result': None, 'update': '20190225'}, 'McAfee': {'detected': False, 'version': '6.0.6.653', 'result': None, 'update': '20190226'}, 'Malwarebytes': {'detected': False, 'version': '2.1.1.1115', 'result': None, 'update': '20190226'}, 'AegisLab': {'detected': False, 'version': '4.2', 'result': None, 'update': '20190226'}, 'TheHacker': {'detected': False, 'version': '6.8.0.5.4029', 'result': None, 'update': '20190225'}, 'K7GW': {'detected': False, 'version': '11.31.30117', 'result': None, 'update': '20190227'}, 'K7AntiVirus': {'detected': False, 'version': '11.31.30117', 'result': None, 'update': '20190226'}, 'Baidu': {'detected': False, 'version': '1.0.0.2', 'result': None, 'update': '20190215'}, 'Babable': {'detected': False, 'version': '9107201', 'result': None, 'update': '20180918'}, 'F-Prot': {'detected': False, 'version': '4.7.1.166', 'result': None, 'update': '20190226'}, 'Symantec': {'detected': False, 'version': '1.8.0.0', 'result': None, 'update': '20190226'}, 'ESET-NOD32': {'detected': False, 'version': '18940', 'result': None, 'update': '20190226'}, 'TrendMicro-HouseCall': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'Avast': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190227'}, 'ClamAV': {'detected': False, 'version': '0.101.1.0', 'result': None, 'update': '20190226'}, 'Kaspersky': {'detected': False, 'version': '15.0.1.13', 'result': None, 'update': '20190226'}, 'BitDefender': {'detected': False, 'version': '7.2', 'result': None, 'update': '20190226'}, 'NANO-Antivirus': {'detected': False, 'version': '1.0.134.24576', 'result': None, 'update': '20190226'}, 'ViRobot': {'detected': False, 'version': '2014.3.20.0', 'result': None, 'update': '20190226'}, 'Ad-Aware': {'detected': False, 'version': '3.0.5.370', 'result': None, 'update': '20190226'}, 'Sophos': {'detected': False, 'version': '4.98.0', 'result': None, 'update': '20190226'}, 'Comodo': {'detected': False, 'version': '30490', 'result': None, 'update': '20190226'}, 'F-Secure': {'detected': False, 'version': '12.0.86.52', 'result': None, 'update': '20190226'}, 'DrWeb': {'detected': False, 'version': '7.0.34.11020', 'result': None, 'update': '20190227'}, 'Zillya': {'detected': False, 'version': '2.0.0.3762', 'result': None, 'update': '20190226'}, 'TrendMicro': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'McAfee-GW-Edition': {'detected': False, 'version': 'v2017.3010', 'result': None, 'update': '20190226'}, 'Emsisoft': {'detected': False, 'version': '2018.4.0.1029', 'result': None, 'update': '20190226'}, 'Cyren': {'detected': False, 'version': '6.2.0.1', 'result': None, 'update': '20190226'}, 'Jiangmin': {'detected': False, 'version': '16.0.100', 'result': None, 'update': '20190226'}, 'Avira': {'detected': False, 'version': '8.3.3.8', 'result': None, 'update': '20190226'}, 'Antiy-AVL': {'detected': False, 'version': '3.0.0.1', 'result': None, 'update': '20190226'}, 'Kingsoft': {'detected': False, 'version': '2013.8.14.323', 'result': None, 'update': '20190227'}, 'Microsoft': {'detected': False, 'version': '1.1.15700.9', 'result': None, 'update': '20190227'}, 'Arcabit': {'detected': False, 'version': '1.0.0.837', 'result': None, 'update': '20190226'}, 'SUPERAntiSpyware': {'detected': False, 'version': '5.6.0.1032', 'result': None, 'update': '20190220'}, 'AhnLab-V3': {'detected': False, 'version': '3.14.1.22785', 'result': None, 'update': '20190226'}, 'ZoneAlarm': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190226'}, 'Avast-Mobile': {'detected': False, 'version': '190226-00', 'result': None, 'update': '20190226'}, 'GData': {'detected': False, 'version': 'A:25.20851B:25.14478', 'result': None, 'update': '20190226'}, 'TACHYON': {'detected': False, 'version': '2019-02-26.02', 'result': None, 'update': '20190226'}, 'TotalDefense': {'detected': False, 'version': '37.1.62.1', 'result': None, 'update': '20190226'}, 'VBA32': {'detected': False, 'version': '4.0.0', 'result': None, 'update': '20190226'}, 'ALYac': {'detected': False, 'version': '1.1.1.5', 'result': None, 'update': '20190226'}, 'MAX': {'detected': False, 'version': '2018.9.12.1', 'result': None, 'update': '20190227'}, 'Zoner': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190227'}, 'Tencent': {'detected': False, 'version': '1.0.0.1', 'result': None, 'update': '20190227'}, 'Yandex': {'detected': False, 'version': '5.5.1.3', 'result': None, 'update': '20190226'}, 'Ikarus': {'detected': False, 'version': '0.1.5.2', 'result': None, 'update': '20190226'}, 'Fortinet': {'detected': False, 'version': '5.4.247.0', 'result': None, 'update': '20190226'}, 'AVG': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190227'}, 'Panda': {'detected': False, 'version': '4.6.4.2', 'result': None, 'update': '20190226'}, 'Qihoo-360': {'detected': False, 'version': '1.0.0.1120', 'result': None, 'update': '20190227'}}, 'scan_id': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348', 'sha1': 'dab0cbe1fad20596a12da14ac2fa50ddd949b965', 'resource': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590', 'response_code': 1, 'scan_date': '2019-02-26 23:55:48', 'permalink': 'https://www.virustotal.com/file/fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590/analysis/1551225348/', 'verbose_msg': 'Scan finished, information embedded', 'total': 56, 'positives': 0, 'sha256': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590', 'md5': 'bd6dcc1d6612d709a664c89bb3941c4a'}"
endTime: 1551264523.8230784
latency: 0.919156551361084

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551264632.9652731
response: b"HTTP/1.1 200\r\n\r\n{'scans': {'Bkav': {'detected': False, 'version': '1.3.0.9899', 'result': None, 'update': '20190226'}, 'MicroWorld-eScan': {'detected': False, 'version': '14.0.297.0', 'result': None, 'update': '20190226'}, 'CMC': {'detected': False, 'version': '1.1.0.977', 'result': None, 'update': '20190226'}, 'CAT-QuickHeal': {'detected': False, 'version': '14.00', 'result': None, 'update': '20190225'}, 'McAfee': {'detected': False, 'version': '6.0.6.653', 'result': None, 'update': '20190226'}, 'Malwarebytes': {'detected': False, 'version': '2.1.1.1115', 'result': None, 'update': '20190226'}, 'AegisLab': {'detected': False, 'version': '4.2', 'result': None, 'update': '20190226'}, 'TheHacker': {'detected': False, 'version': '6.8.0.5.4029', 'result': None, 'update': '20190225'}, 'K7GW': {'detected': False, 'version': '11.31.30117', 'result': None, 'update': '20190227'}, 'K7AntiVirus': {'detected': False, 'version': '11.31.30117', 'result': None, 'update': '20190226'}, 'Baidu': {'detected': False, 'version': '1.0.0.2', 'result': None, 'update': '20190215'}, 'Babable': {'detected': False, 'version': '9107201', 'result': None, 'update': '20180918'}, 'F-Prot': {'detected': False, 'version': '4.7.1.166', 'result': None, 'update': '20190226'}, 'Symantec': {'detected': False, 'version': '1.8.0.0', 'result': None, 'update': '20190226'}, 'ESET-NOD32': {'detected': False, 'version': '18940', 'result': None, 'update': '20190226'}, 'TrendMicro-HouseCall': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'Avast': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190227'}, 'ClamAV': {'detected': False, 'version': '0.101.1.0', 'result': None, 'update': '20190226'}, 'Kaspersky': {'detected': False, 'version': '15.0.1.13', 'result': None, 'update': '20190226'}, 'BitDefender': {'detected': False, 'version': '7.2', 'result': None, 'update': '20190226'}, 'NANO-Antivirus': {'detected': False, 'version': '1.0.134.24576', 'result': None, 'update': '20190226'}, 'ViRobot': {'detected': False, 'version': '2014.3.20.0', 'result': None, 'update': '20190226'}, 'Ad-Aware': {'detected': False, 'version': '3.0.5.370', 'result': None, 'update': '20190226'}, 'Sophos': {'detected': False, 'version': '4.98.0', 'result': None, 'update': '20190226'}, 'Comodo': {'detected': False, 'version': '30490', 'result': None, 'update': '20190226'}, 'F-Secure': {'detected': False, 'version': '12.0.86.52', 'result': None, 'update': '20190226'}, 'DrWeb': {'detected': False, 'version': '7.0.34.11020', 'result': None, 'update': '20190227'}, 'Zillya': {'detected': False, 'version': '2.0.0.3762', 'result': None, 'update': '20190226'}, 'TrendMicro': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'McAfee-GW-Edition': {'detected': False, 'version': 'v2017.3010', 'result': None, 'update': '20190226'}, 'Emsisoft': {'detected': False, 'version': '2018.4.0.1029', 'result': None, 'update': '20190226'}, 'Cyren': {'detected': False, 'version': '6.2.0.1', 'result': None, 'update': '20190226'}, 'Jiangmin': {'detected': False, 'version': '16.0.100', 'result': None, 'update': '20190226'}, 'Avira': {'detected': False, 'version': '8.3.3.8', 'result': None, 'update': '20190226'}, 'Antiy-AVL': {'detected': False, 'version': '3.0.0.1', 'result': None, 'update': '20190226'}, 'Kingsoft': {'detected': False, 'version': '2013.8.14.323', 'result': None, 'update': '20190227'}, 'Microsoft': {'detected': False, 'version': '1.1.15700.9', 'result': None, 'update': '20190227'}, 'Arcabit': {'detected': False, 'version': '1.0.0.837', 'result': None, 'update': '20190226'}, 'SUPERAntiSpyware': {'detected': False, 'version': '5.6.0.1032', 'result': None, 'update': '20190220'}, 'AhnLab-V3': {'detected': False, 'version': '3.14.1.22785', 'result': None, 'update': '20190226'}, 'ZoneAlarm': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190226'}, 'Avast-Mobile': {'detected': False, 'version': '190226-00', 'result': None, 'update': '20190226'}, 'GData': {'detected': False, 'version': 'A:25.20851B:25.14478', 'result': None, 'update': '20190226'}, 'TACHYON': {'detected': False, 'version': '2019-02-26.02', 'result': None, 'update': '20190226'}, 'TotalDefense': {'detected': False, 'version': '37.1.62.1', 'result': None, 'update': '20190226'}, 'VBA32': {'detected': False, 'version': '4.0.0', 'result': None, 'update': '20190226'}, 'ALYac': {'detected': False, 'version': '1.1.1.5', 'result': None, 'update': '20190226'}, 'MAX': {'detected': False, 'version': '2018.9.12.1', 'result': None, 'update': '20190227'}, 'Zoner': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190227'}, 'Tencent': {'detected': False, 'version': '1.0.0.1', 'result': None, 'update': '20190227'}, 'Yandex': {'detected': False, 'version': '5.5.1.3', 'result': None, 'update': '20190226'}, 'Ikarus': {'detected': False, 'version': '0.1.5.2', 'result': None, 'update': '20190226'}, 'Fortinet': {'detected': False, 'version': '5.4.247.0', 'result': None, 'update': '20190226'}, 'AVG': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190227'}, 'Panda': {'detected': False, 'version': '4.6.4.2', 'result': None, 'update': '20190226'}, 'Qihoo-360': {'detected': False, 'version': '1.0.0.1120', 'result': None, 'update': '20190227'}}, 'scan_id': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348', 'sha1': 'dab0cbe1fad20596a12da14ac2fa50ddd949b965', 'resource': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590', 'response_code': 1, 'scan_date': '2019-02-26 23:55:48', 'permalink': 'https://www.virustotal.com/file/fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590/analysis/1551225348/', 'verbose_msg': 'Scan finished, information embedded', 'total': 56, 'positives': 0, 'sha256': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590', 'md5': 'bd6dcc1d6612d709a664c89bb3941c4a'}"
endTime: 1551264633.6274302
latency: 0.6621570587158203

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551264945.1666327
response: b"HTTP/1.1 200\r\n\r\n{'scans': {'Bkav': {'detected': False, 'version': '1.3.0.9899', 'result': None, 'update': '20190226'}, 'MicroWorld-eScan': {'detected': False, 'version': '14.0.297.0', 'result': None, 'update': '20190226'}, 'CMC': {'detected': False, 'version': '1.1.0.977', 'result': None, 'update': '20190226'}, 'CAT-QuickHeal': {'detected': False, 'version': '14.00', 'result': None, 'update': '20190225'}, 'McAfee': {'detected': False, 'version': '6.0.6.653', 'result': None, 'update': '20190226'}, 'Malwarebytes': {'detected': False, 'version': '2.1.1.1115', 'result': None, 'update': '20190226'}, 'AegisLab': {'detected': False, 'version': '4.2', 'result': None, 'update': '20190226'}, 'TheHacker': {'detected': False, 'version': '6.8.0.5.4029', 'result': None, 'update': '20190225'}, 'K7GW': {'detected': False, 'version': '11.31.30117', 'result': None, 'update': '20190227'}, 'K7AntiVirus': {'detected': False, 'version': '11.31.30117', 'result': None, 'update': '20190226'}, 'Baidu': {'detected': False, 'version': '1.0.0.2', 'result': None, 'update': '20190215'}, 'Babable': {'detected': False, 'version': '9107201', 'result': None, 'update': '20180918'}, 'F-Prot': {'detected': False, 'version': '4.7.1.166', 'result': None, 'update': '20190226'}, 'Symantec': {'detected': False, 'version': '1.8.0.0', 'result': None, 'update': '20190226'}, 'ESET-NOD32': {'detected': False, 'version': '18940', 'result': None, 'update': '20190226'}, 'TrendMicro-HouseCall': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'Avast': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190227'}, 'ClamAV': {'detected': False, 'version': '0.101.1.0', 'result': None, 'update': '20190226'}, 'Kaspersky': {'detected': False, 'version': '15.0.1.13', 'result': None, 'update': '20190226'}, 'BitDefender': {'detected': False, 'version': '7.2', 'result': None, 'update': '20190226'}, 'NANO-Antivirus': {'detected': False, 'version': '1.0.134.24576', 'result': None, 'update': '20190226'}, 'ViRobot': {'detected': False, 'version': '2014.3.20.0', 'result': None, 'update': '20190226'}, 'Ad-Aware': {'detected': False, 'version': '3.0.5.370', 'result': None, 'update': '20190226'}, 'Sophos': {'detected': False, 'version': '4.98.0', 'result': None, 'update': '20190226'}, 'Comodo': {'detected': False, 'version': '30490', 'result': None, 'update': '20190226'}, 'F-Secure': {'detected': False, 'version': '12.0.86.52', 'result': None, 'update': '20190226'}, 'DrWeb': {'detected': False, 'version': '7.0.34.11020', 'result': None, 'update': '20190227'}, 'Zillya': {'detected': False, 'version': '2.0.0.3762', 'result': None, 'update': '20190226'}, 'TrendMicro': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'McAfee-GW-Edition': {'detected': False, 'version': 'v2017.3010', 'result': None, 'update': '20190226'}, 'Emsisoft': {'detected': False, 'version': '2018.4.0.1029', 'result': None, 'update': '20190226'}, 'Cyren': {'detected': False, 'version': '6.2.0.1', 'result': None, 'update': '20190226'}, 'Jiangmin': {'detected': False, 'version': '16.0.100', 'result': None, 'update': '20190226'}, 'Avira': {'detected': False, 'version': '8.3.3.8', 'result': None, 'update': '20190226'}, 'Antiy-AVL': {'detected': False, 'version': '3.0.0.1', 'result': None, 'update': '20190226'}, 'Kingsoft': {'detected': False, 'version': '2013.8.14.323', 'result': None, 'update': '20190227'}, 'Microsoft': {'detected': False, 'version': '1.1.15700.9', 'result': None, 'update': '20190227'}, 'Arcabit': {'detected': False, 'version': '1.0.0.837', 'result': None, 'update': '20190226'}, 'SUPERAntiSpyware': {'detected': False, 'version': '5.6.0.1032', 'result': None, 'update': '20190220'}, 'AhnLab-V3': {'detected': False, 'version': '3.14.1.22785', 'result': None, 'update': '20190226'}, 'ZoneAlarm': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190226'}, 'Avast-Mobile': {'detected': False, 'version': '190226-00', 'result': None, 'update': '20190226'}, 'GData': {'detected': False, 'version': 'A:25.20851B:25.14478', 'result': None, 'update': '20190226'}, 'TACHYON': {'detected': False, 'version': '2019-02-26.02', 'result': None, 'update': '20190226'}, 'TotalDefense': {'detected': False, 'version': '37.1.62.1', 'result': None, 'update': '20190226'}, 'VBA32': {'detected': False, 'version': '4.0.0', 'result': None, 'update': '20190226'}, 'ALYac': {'detected': False, 'version': '1.1.1.5', 'result': None, 'update': '20190226'}, 'MAX': {'detected': False, 'version': '2018.9.12.1', 'result': None, 'update': '20190227'}, 'Zoner': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190227'}, 'Tencent': {'detected': False, 'version': '1.0.0.1', 'result': None, 'update': '20190227'}, 'Yandex': {'detected': False, 'version': '5.5.1.3', 'result': None, 'update': '20190226'}, 'Ikarus': {'detected': False, 'version': '0.1.5.2', 'result': None, 'update': '20190226'}, 'Fortinet': {'detected': False, 'version': '5.4.247.0', 'result': None, 'update': '20190226'}, 'AVG': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190227'}, 'Panda': {'detected': False, 'version': '4.6.4.2', 'result': None, 'update': '20190226'}, 'Qihoo-360': {'detected': False, 'version': '1.0.0.1120', 'result': None, 'update': '20190227'}}, 'scan_id': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348', 'sha1': 'dab0cbe1fad20596a12da14ac2fa50ddd949b965', 'resource': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590', 'response_code': 1, 'scan_date': '2019-02-26 23:55:48', 'permalink': 'https://www.virustotal.com/file/fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590/analysis/1551225348/', 'verbose_msg': 'Scan finished, information embedded', 'total': 56, 'positives': 0, 'sha256': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590', 'md5': 'bd6dcc1d6612d709a664c89bb3941c4a'}"
endTime: 1551264945.977068
latency: 0.8104352951049805

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551264963.6256967
response: b"HTTP/1.1 200\r\n\r\n{'scans': {'Bkav': {'detected': False, 'version': '1.3.0.9899', 'result': None, 'update': '20190226'}, 'MicroWorld-eScan': {'detected': False, 'version': '14.0.297.0', 'result': None, 'update': '20190226'}, 'CMC': {'detected': False, 'version': '1.1.0.977', 'result': None, 'update': '20190226'}, 'CAT-QuickHeal': {'detected': False, 'version': '14.00', 'result': None, 'update': '20190225'}, 'McAfee': {'detected': False, 'version': '6.0.6.653', 'result': None, 'update': '20190226'}, 'Malwarebytes': {'detected': False, 'version': '2.1.1.1115', 'result': None, 'update': '20190226'}, 'AegisLab': {'detected': False, 'version': '4.2', 'result': None, 'update': '20190226'}, 'TheHacker': {'detected': False, 'version': '6.8.0.5.4029', 'result': None, 'update': '20190225'}, 'K7GW': {'detected': False, 'version': '11.31.30117', 'result': None, 'update': '20190227'}, 'K7AntiVirus': {'detected': False, 'version': '11.31.30117', 'result': None, 'update': '20190226'}, 'Baidu': {'detected': False, 'version': '1.0.0.2', 'result': None, 'update': '20190215'}, 'Babable': {'detected': False, 'version': '9107201', 'result': None, 'update': '20180918'}, 'F-Prot': {'detected': False, 'version': '4.7.1.166', 'result': None, 'update': '20190226'}, 'Symantec': {'detected': False, 'version': '1.8.0.0', 'result': None, 'update': '20190226'}, 'ESET-NOD32': {'detected': False, 'version': '18940', 'result': None, 'update': '20190226'}, 'TrendMicro-HouseCall': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'Avast': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190227'}, 'ClamAV': {'detected': False, 'version': '0.101.1.0', 'result': None, 'update': '20190226'}, 'Kaspersky': {'detected': False, 'version': '15.0.1.13', 'result': None, 'update': '20190226'}, 'BitDefender': {'detected': False, 'version': '7.2', 'result': None, 'update': '20190226'}, 'NANO-Antivirus': {'detected': False, 'version': '1.0.134.24576', 'result': None, 'update': '20190226'}, 'ViRobot': {'detected': False, 'version': '2014.3.20.0', 'result': None, 'update': '20190226'}, 'Ad-Aware': {'detected': False, 'version': '3.0.5.370', 'result': None, 'update': '20190226'}, 'Sophos': {'detected': False, 'version': '4.98.0', 'result': None, 'update': '20190226'}, 'Comodo': {'detected': False, 'version': '30490', 'result': None, 'update': '20190226'}, 'F-Secure': {'detected': False, 'version': '12.0.86.52', 'result': None, 'update': '20190226'}, 'DrWeb': {'detected': False, 'version': '7.0.34.11020', 'result': None, 'update': '20190227'}, 'Zillya': {'detected': False, 'version': '2.0.0.3762', 'result': None, 'update': '20190226'}, 'TrendMicro': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'McAfee-GW-Edition': {'detected': False, 'version': 'v2017.3010', 'result': None, 'update': '20190226'}, 'Emsisoft': {'detected': False, 'version': '2018.4.0.1029', 'result': None, 'update': '20190226'}, 'Cyren': {'detected': False, 'version': '6.2.0.1', 'result': None, 'update': '20190226'}, 'Jiangmin': {'detected': False, 'version': '16.0.100', 'result': None, 'update': '20190226'}, 'Avira': {'detected': False, 'version': '8.3.3.8', 'result': None, 'update': '20190226'}, 'Antiy-AVL': {'detected': False, 'version': '3.0.0.1', 'result': None, 'update': '20190226'}, 'Kingsoft': {'detected': False, 'version': '2013.8.14.323', 'result': None, 'update': '20190227'}, 'Microsoft': {'detected': False, 'version': '1.1.15700.9', 'result': None, 'update': '20190227'}, 'Arcabit': {'detected': False, 'version': '1.0.0.837', 'result': None, 'update': '20190226'}, 'SUPERAntiSpyware': {'detected': False, 'version': '5.6.0.1032', 'result': None, 'update': '20190220'}, 'AhnLab-V3': {'detected': False, 'version': '3.14.1.22785', 'result': None, 'update': '20190226'}, 'ZoneAlarm': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190226'}, 'Avast-Mobile': {'detected': False, 'version': '190226-00', 'result': None, 'update': '20190226'}, 'GData': {'detected': False, 'version': 'A:25.20851B:25.14478', 'result': None, 'update': '20190226'}, 'TACHYON': {'detected': False, 'version': '2019-02-26.02', 'result': None, 'update': '20190226'}, 'TotalDefense': {'detected': False, 'version': '37.1.62.1', 'result': None, 'update': '20190226'}, 'VBA32': {'detected': False, 'version': '4.0.0', 'result': None, 'update': '20190226'}, 'ALYac': {'detected': False, 'version': '1.1.1.5', 'result': None, 'update': '20190226'}, 'MAX': {'detected': False, 'version': '2018.9.12.1', 'result': None, 'update': '20190227'}, 'Zoner': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190227'}, 'Tencent': {'detected': False, 'version': '1.0.0.1', 'result': None, 'update': '20190227'}, 'Yandex': {'detected': False, 'version': '5.5.1.3', 'result': None, 'update': '20190226'}, 'Ikarus': {'detected': False, 'version': '0.1.5.2', 'result': None, 'update': '20190226'}, 'Fortinet': {'detected': False, 'version': '5.4.247.0', 'result': None, 'update': '20190226'}, 'AVG': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190227'}, 'Panda': {'detected': False, 'version': '4.6.4.2', 'result': None, 'update': '20190226'}, 'Qihoo-360': {'detected': False, 'version': '1.0.0.1120', 'result': None, 'update': '20190227'}}, 'scan_id': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348', 'sha1': 'dab0cbe1fad20596a12da14ac2fa50ddd949b965', 'resource': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590', 'response_code': 1, 'scan_date': '2019-02-26 23:55:48', 'permalink': 'https://www.virustotal.com/file/fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590/analysis/1551225348/', 'verbose_msg': 'Scan finished, information embedded', 'total': 56, 'positives': 0, 'sha256': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590', 'md5': 'bd6dcc1d6612d709a664c89bb3941c4a'}"
endTime: 1551264964.1915216
latency: 0.5658249855041504

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551265028.2608428
response: b"HTTP/1.1 200\r\n\r\n{'scans': {'Bkav': {'detected': False, 'version': '1.3.0.9899', 'result': None, 'update': '20190226'}, 'MicroWorld-eScan': {'detected': False, 'version': '14.0.297.0', 'result': None, 'update': '20190226'}, 'CMC': {'detected': False, 'version': '1.1.0.977', 'result': None, 'update': '20190226'}, 'CAT-QuickHeal': {'detected': False, 'version': '14.00', 'result': None, 'update': '20190225'}, 'McAfee': {'detected': False, 'version': '6.0.6.653', 'result': None, 'update': '20190226'}, 'Malwarebytes': {'detected': False, 'version': '2.1.1.1115', 'result': None, 'update': '20190226'}, 'AegisLab': {'detected': False, 'version': '4.2', 'result': None, 'update': '20190226'}, 'TheHacker': {'detected': False, 'version': '6.8.0.5.4029', 'result': None, 'update': '20190225'}, 'K7GW': {'detected': False, 'version': '11.31.30117', 'result': None, 'update': '20190227'}, 'K7AntiVirus': {'detected': False, 'version': '11.31.30117', 'result': None, 'update': '20190226'}, 'Baidu': {'detected': False, 'version': '1.0.0.2', 'result': None, 'update': '20190215'}, 'Babable': {'detected': False, 'version': '9107201', 'result': None, 'update': '20180918'}, 'F-Prot': {'detected': False, 'version': '4.7.1.166', 'result': None, 'update': '20190226'}, 'Symantec': {'detected': False, 'version': '1.8.0.0', 'result': None, 'update': '20190226'}, 'ESET-NOD32': {'detected': False, 'version': '18940', 'result': None, 'update': '20190226'}, 'TrendMicro-HouseCall': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'Avast': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190227'}, 'ClamAV': {'detected': False, 'version': '0.101.1.0', 'result': None, 'update': '20190226'}, 'Kaspersky': {'detected': False, 'version': '15.0.1.13', 'result': None, 'update': '20190226'}, 'BitDefender': {'detected': False, 'version': '7.2', 'result': None, 'update': '20190226'}, 'NANO-Antivirus': {'detected': False, 'version': '1.0.134.24576', 'result': None, 'update': '20190226'}, 'ViRobot': {'detected': False, 'version': '2014.3.20.0', 'result': None, 'update': '20190226'}, 'Ad-Aware': {'detected': False, 'version': '3.0.5.370', 'result': None, 'update': '20190226'}, 'Sophos': {'detected': False, 'version': '4.98.0', 'result': None, 'update': '20190226'}, 'Comodo': {'detected': False, 'version': '30490', 'result': None, 'update': '20190226'}, 'F-Secure': {'detected': False, 'version': '12.0.86.52', 'result': None, 'update': '20190226'}, 'DrWeb': {'detected': False, 'version': '7.0.34.11020', 'result': None, 'update': '20190227'}, 'Zillya': {'detected': False, 'version': '2.0.0.3762', 'result': None, 'update': '20190226'}, 'TrendMicro': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'McAfee-GW-Edition': {'detected': False, 'version': 'v2017.3010', 'result': None, 'update': '20190226'}, 'Emsisoft': {'detected': False, 'version': '2018.4.0.1029', 'result': None, 'update': '20190226'}, 'Cyren': {'detected': False, 'version': '6.2.0.1', 'result': None, 'update': '20190226'}, 'Jiangmin': {'detected': False, 'version': '16.0.100', 'result': None, 'update': '20190226'}, 'Avira': {'detected': False, 'version': '8.3.3.8', 'result': None, 'update': '20190226'}, 'Antiy-AVL': {'detected': False, 'version': '3.0.0.1', 'result': None, 'update': '20190226'}, 'Kingsoft': {'detected': False, 'version': '2013.8.14.323', 'result': None, 'update': '20190227'}, 'Microsoft': {'detected': False, 'version': '1.1.15700.9', 'result': None, 'update': '20190227'}, 'Arcabit': {'detected': False, 'version': '1.0.0.837', 'result': None, 'update': '20190226'}, 'SUPERAntiSpyware': {'detected': False, 'version': '5.6.0.1032', 'result': None, 'update': '20190220'}, 'AhnLab-V3': {'detected': False, 'version': '3.14.1.22785', 'result': None, 'update': '20190226'}, 'ZoneAlarm': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190226'}, 'Avast-Mobile': {'detected': False, 'version': '190226-00', 'result': None, 'update': '20190226'}, 'GData': {'detected': False, 'version': 'A:25.20851B:25.14478', 'result': None, 'update': '20190226'}, 'TACHYON': {'detected': False, 'version': '2019-02-26.02', 'result': None, 'update': '20190226'}, 'TotalDefense': {'detected': False, 'version': '37.1.62.1', 'result': None, 'update': '20190226'}, 'VBA32': {'detected': False, 'version': '4.0.0', 'result': None, 'update': '20190226'}, 'ALYac': {'detected': False, 'version': '1.1.1.5', 'result': None, 'update': '20190226'}, 'MAX': {'detected': False, 'version': '2018.9.12.1', 'result': None, 'update': '20190227'}, 'Zoner': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190227'}, 'Tencent': {'detected': False, 'version': '1.0.0.1', 'result': None, 'update': '20190227'}, 'Yandex': {'detected': False, 'version': '5.5.1.3', 'result': None, 'update': '20190226'}, 'Ikarus': {'detected': False, 'version': '0.1.5.2', 'result': None, 'update': '20190226'}, 'Fortinet': {'detected': False, 'version': '5.4.247.0', 'result': None, 'update': '20190226'}, 'AVG': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190227'}, 'Panda': {'detected': False, 'version': '4.6.4.2', 'result': None, 'update': '20190226'}, 'Qihoo-360': {'detected': False, 'version': '1.0.0.1120', 'result': None, 'update': '20190227'}}, 'scan_id': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348', 'sha1': 'dab0cbe1fad20596a12da14ac2fa50ddd949b965', 'resource': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590', 'response_code': 1, 'scan_date': '2019-02-26 23:55:48', 'permalink': 'https://www.virustotal.com/file/fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590/analysis/1551225348/', 'verbose_msg': 'Scan finished, information embedded', 'total': 56, 'positives': 0, 'sha256': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590', 'md5': 'bd6dcc1d6612d709a664c89bb3941c4a'}"
endTime: 1551265028.996677
latency: 0.7358341217041016

request: b''
startTime: 1551265043.9364371
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551265079.5303285
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551265096.5888553
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551265118.7089717
response: b"HTTP/1.1 200\r\n\r\n{'scans': {'Bkav': {'detected': False, 'version': '1.3.0.9899', 'result': None, 'update': '20190226'}, 'MicroWorld-eScan': {'detected': False, 'version': '14.0.297.0', 'result': None, 'update': '20190226'}, 'CMC': {'detected': False, 'version': '1.1.0.977', 'result': None, 'update': '20190226'}, 'CAT-QuickHeal': {'detected': False, 'version': '14.00', 'result': None, 'update': '20190225'}, 'McAfee': {'detected': False, 'version': '6.0.6.653', 'result': None, 'update': '20190226'}, 'Malwarebytes': {'detected': False, 'version': '2.1.1.1115', 'result': None, 'update': '20190226'}, 'AegisLab': {'detected': False, 'version': '4.2', 'result': None, 'update': '20190226'}, 'TheHacker': {'detected': False, 'version': '6.8.0.5.4029', 'result': None, 'update': '20190225'}, 'K7GW': {'detected': False, 'version': '11.31.30117', 'result': None, 'update': '20190227'}, 'K7AntiVirus': {'detected': False, 'version': '11.31.30117', 'result': None, 'update': '20190226'}, 'Baidu': {'detected': False, 'version': '1.0.0.2', 'result': None, 'update': '20190215'}, 'Babable': {'detected': False, 'version': '9107201', 'result': None, 'update': '20180918'}, 'F-Prot': {'detected': False, 'version': '4.7.1.166', 'result': None, 'update': '20190226'}, 'Symantec': {'detected': False, 'version': '1.8.0.0', 'result': None, 'update': '20190226'}, 'ESET-NOD32': {'detected': False, 'version': '18940', 'result': None, 'update': '20190226'}, 'TrendMicro-HouseCall': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'Avast': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190227'}, 'ClamAV': {'detected': False, 'version': '0.101.1.0', 'result': None, 'update': '20190226'}, 'Kaspersky': {'detected': False, 'version': '15.0.1.13', 'result': None, 'update': '20190226'}, 'BitDefender': {'detected': False, 'version': '7.2', 'result': None, 'update': '20190226'}, 'NANO-Antivirus': {'detected': False, 'version': '1.0.134.24576', 'result': None, 'update': '20190226'}, 'ViRobot': {'detected': False, 'version': '2014.3.20.0', 'result': None, 'update': '20190226'}, 'Ad-Aware': {'detected': False, 'version': '3.0.5.370', 'result': None, 'update': '20190226'}, 'Sophos': {'detected': False, 'version': '4.98.0', 'result': None, 'update': '20190226'}, 'Comodo': {'detected': False, 'version': '30490', 'result': None, 'update': '20190226'}, 'F-Secure': {'detected': False, 'version': '12.0.86.52', 'result': None, 'update': '20190226'}, 'DrWeb': {'detected': False, 'version': '7.0.34.11020', 'result': None, 'update': '20190227'}, 'Zillya': {'detected': False, 'version': '2.0.0.3762', 'result': None, 'update': '20190226'}, 'TrendMicro': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'McAfee-GW-Edition': {'detected': False, 'version': 'v2017.3010', 'result': None, 'update': '20190226'}, 'Emsisoft': {'detected': False, 'version': '2018.4.0.1029', 'result': None, 'update': '20190226'}, 'Cyren': {'detected': False, 'version': '6.2.0.1', 'result': None, 'update': '20190226'}, 'Jiangmin': {'detected': False, 'version': '16.0.100', 'result': None, 'update': '20190226'}, 'Avira': {'detected': False, 'version': '8.3.3.8', 'result': None, 'update': '20190226'}, 'Antiy-AVL': {'detected': False, 'version': '3.0.0.1', 'result': None, 'update': '20190226'}, 'Kingsoft': {'detected': False, 'version': '2013.8.14.323', 'result': None, 'update': '20190227'}, 'Microsoft': {'detected': False, 'version': '1.1.15700.9', 'result': None, 'update': '20190227'}, 'Arcabit': {'detected': False, 'version': '1.0.0.837', 'result': None, 'update': '20190226'}, 'SUPERAntiSpyware': {'detected': False, 'version': '5.6.0.1032', 'result': None, 'update': '20190220'}, 'AhnLab-V3': {'detected': False, 'version': '3.14.1.22785', 'result': None, 'update': '20190226'}, 'ZoneAlarm': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190226'}, 'Avast-Mobile': {'detected': False, 'version': '190226-00', 'result': None, 'update': '20190226'}, 'GData': {'detected': False, 'version': 'A:25.20851B:25.14478', 'result': None, 'update': '20190226'}, 'TACHYON': {'detected': False, 'version': '2019-02-26.02', 'result': None, 'update': '20190226'}, 'TotalDefense': {'detected': False, 'version': '37.1.62.1', 'result': None, 'update': '20190226'}, 'VBA32': {'detected': False, 'version': '4.0.0', 'result': None, 'update': '20190226'}, 'ALYac': {'detected': False, 'version': '1.1.1.5', 'result': None, 'update': '20190226'}, 'MAX': {'detected': False, 'version': '2018.9.12.1', 'result': None, 'update': '20190227'}, 'Zoner': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190227'}, 'Tencent': {'detected': False, 'version': '1.0.0.1', 'result': None, 'update': '20190227'}, 'Yandex': {'detected': False, 'version': '5.5.1.3', 'result': None, 'update': '20190226'}, 'Ikarus': {'detected': False, 'version': '0.1.5.2', 'result': None, 'update': '20190226'}, 'Fortinet': {'detected': False, 'version': '5.4.247.0', 'result': None, 'update': '20190226'}, 'AVG': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190227'}, 'Panda': {'detected': False, 'version': '4.6.4.2', 'result': None, 'update': '20190226'}, 'Qihoo-360': {'detected': False, 'version': '1.0.0.1120', 'result': None, 'update': '20190227'}}, 'scan_id': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348', 'sha1': 'dab0cbe1fad20596a12da14ac2fa50ddd949b965', 'resource': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590', 'response_code': 1, 'scan_date': '2019-02-26 23:55:48', 'permalink': 'https://www.virustotal.com/file/fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590/analysis/1551225348/', 'verbose_msg': 'Scan finished, information embedded', 'total': 56, 'positives': 0, 'sha256': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590', 'md5': 'bd6dcc1d6612d709a664c89bb3941c4a'}"
endTime: 1551265119.2428865
latency: 0.5339148044586182

request: b''
startTime: 1551265176.3027573
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551265222.2790341
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265241.0848453
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551265241.281118
latency: 0.196272611618042

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265241.505521
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551265241.7130618
latency: 0.20754075050354004

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551265245.2325022
response: b"HTTP/1.1 200\r\n\r\n{'scans': {'Bkav': {'detected': False, 'version': '1.3.0.9899', 'result': None, 'update': '20190226'}, 'MicroWorld-eScan': {'detected': False, 'version': '14.0.297.0', 'result': None, 'update': '20190226'}, 'CMC': {'detected': False, 'version': '1.1.0.977', 'result': None, 'update': '20190226'}, 'CAT-QuickHeal': {'detected': False, 'version': '14.00', 'result': None, 'update': '20190225'}, 'McAfee': {'detected': False, 'version': '6.0.6.653', 'result': None, 'update': '20190226'}, 'Malwarebytes': {'detected': False, 'version': '2.1.1.1115', 'result': None, 'update': '20190226'}, 'AegisLab': {'detected': False, 'version': '4.2', 'result': None, 'update': '20190226'}, 'TheHacker': {'detected': False, 'version': '6.8.0.5.4029', 'result': None, 'update': '20190225'}, 'K7GW': {'detected': False, 'version': '11.31.30117', 'result': None, 'update': '20190227'}, 'K7AntiVirus': {'detected': False, 'version': '11.31.30117', 'result': None, 'update': '20190226'}, 'Baidu': {'detected': False, 'version': '1.0.0.2', 'result': None, 'update': '20190215'}, 'Babable': {'detected': False, 'version': '9107201', 'result': None, 'update': '20180918'}, 'F-Prot': {'detected': False, 'version': '4.7.1.166', 'result': None, 'update': '20190226'}, 'Symantec': {'detected': False, 'version': '1.8.0.0', 'result': None, 'update': '20190226'}, 'ESET-NOD32': {'detected': False, 'version': '18940', 'result': None, 'update': '20190226'}, 'TrendMicro-HouseCall': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'Avast': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190227'}, 'ClamAV': {'detected': False, 'version': '0.101.1.0', 'result': None, 'update': '20190226'}, 'Kaspersky': {'detected': False, 'version': '15.0.1.13', 'result': None, 'update': '20190226'}, 'BitDefender': {'detected': False, 'version': '7.2', 'result': None, 'update': '20190226'}, 'NANO-Antivirus': {'detected': False, 'version': '1.0.134.24576', 'result': None, 'update': '20190226'}, 'ViRobot': {'detected': False, 'version': '2014.3.20.0', 'result': None, 'update': '20190226'}, 'Ad-Aware': {'detected': False, 'version': '3.0.5.370', 'result': None, 'update': '20190226'}, 'Sophos': {'detected': False, 'version': '4.98.0', 'result': None, 'update': '20190226'}, 'Comodo': {'detected': False, 'version': '30490', 'result': None, 'update': '20190226'}, 'F-Secure': {'detected': False, 'version': '12.0.86.52', 'result': None, 'update': '20190226'}, 'DrWeb': {'detected': False, 'version': '7.0.34.11020', 'result': None, 'update': '20190227'}, 'Zillya': {'detected': False, 'version': '2.0.0.3762', 'result': None, 'update': '20190226'}, 'TrendMicro': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'McAfee-GW-Edition': {'detected': False, 'version': 'v2017.3010', 'result': None, 'update': '20190226'}, 'Emsisoft': {'detected': False, 'version': '2018.4.0.1029', 'result': None, 'update': '20190226'}, 'Cyren': {'detected': False, 'version': '6.2.0.1', 'result': None, 'update': '20190226'}, 'Jiangmin': {'detected': False, 'version': '16.0.100', 'result': None, 'update': '20190226'}, 'Avira': {'detected': False, 'version': '8.3.3.8', 'result': None, 'update': '20190226'}, 'Antiy-AVL': {'detected': False, 'version': '3.0.0.1', 'result': None, 'update': '20190226'}, 'Kingsoft': {'detected': False, 'version': '2013.8.14.323', 'result': None, 'update': '20190227'}, 'Microsoft': {'detected': False, 'version': '1.1.15700.9', 'result': None, 'update': '20190227'}, 'Arcabit': {'detected': False, 'version': '1.0.0.837', 'result': None, 'update': '20190226'}, 'SUPERAntiSpyware': {'detected': False, 'version': '5.6.0.1032', 'result': None, 'update': '20190220'}, 'AhnLab-V3': {'detected': False, 'version': '3.14.1.22785', 'result': None, 'update': '20190226'}, 'ZoneAlarm': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190226'}, 'Avast-Mobile': {'detected': False, 'version': '190226-00', 'result': None, 'update': '20190226'}, 'GData': {'detected': False, 'version': 'A:25.20851B:25.14478', 'result': None, 'update': '20190226'}, 'TACHYON': {'detected': False, 'version': '2019-02-26.02', 'result': None, 'update': '20190226'}, 'TotalDefense': {'detected': False, 'version': '37.1.62.1', 'result': None, 'update': '20190226'}, 'VBA32': {'detected': False, 'version': '4.0.0', 'result': None, 'update': '20190226'}, 'ALYac': {'detected': False, 'version': '1.1.1.5', 'result': None, 'update': '20190226'}, 'MAX': {'detected': False, 'version': '2018.9.12.1', 'result': None, 'update': '20190227'}, 'Zoner': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190227'}, 'Tencent': {'detected': False, 'version': '1.0.0.1', 'result': None, 'update': '20190227'}, 'Yandex': {'detected': False, 'version': '5.5.1.3', 'result': None, 'update': '20190226'}, 'Ikarus': {'detected': False, 'version': '0.1.5.2', 'result': None, 'update': '20190226'}, 'Fortinet': {'detected': False, 'version': '5.4.247.0', 'result': None, 'update': '20190226'}, 'AVG': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190227'}, 'Panda': {'detected': False, 'version': '4.6.4.2', 'result': None, 'update': '20190226'}, 'Qihoo-360': {'detected': False, 'version': '1.0.0.1120', 'result': None, 'update': '20190227'}}, 'scan_id': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348', 'sha1': 'dab0cbe1fad20596a12da14ac2fa50ddd949b965', 'resource': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590', 'response_code': 1, 'scan_date': '2019-02-26 23:55:48', 'permalink': 'https://www.virustotal.com/file/fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590/analysis/1551225348/', 'verbose_msg': 'Scan finished, information embedded', 'total': 56, 'positives': 0, 'sha256': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590', 'md5': 'bd6dcc1d6612d709a664c89bb3941c4a'}"
endTime: 1551265245.9261427
latency: 0.6936404705047607

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265282.6871834
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551265282.9026113
latency: 0.21542787551879883

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265283.1509488
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551265283.3626845
latency: 0.21173572540283203

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551265285.115308
response: b"HTTP/1.1 200\r\n\r\n{'scans': {'Bkav': {'detected': False, 'version': '1.3.0.9899', 'result': None, 'update': '20190226'}, 'MicroWorld-eScan': {'detected': False, 'version': '14.0.297.0', 'result': None, 'update': '20190226'}, 'CMC': {'detected': False, 'version': '1.1.0.977', 'result': None, 'update': '20190226'}, 'CAT-QuickHeal': {'detected': False, 'version': '14.00', 'result': None, 'update': '20190225'}, 'McAfee': {'detected': False, 'version': '6.0.6.653', 'result': None, 'update': '20190226'}, 'Malwarebytes': {'detected': False, 'version': '2.1.1.1115', 'result': None, 'update': '20190226'}, 'AegisLab': {'detected': False, 'version': '4.2', 'result': None, 'update': '20190226'}, 'TheHacker': {'detected': False, 'version': '6.8.0.5.4029', 'result': None, 'update': '20190225'}, 'K7GW': {'detected': False, 'version': '11.31.30117', 'result': None, 'update': '20190227'}, 'K7AntiVirus': {'detected': False, 'version': '11.31.30117', 'result': None, 'update': '20190226'}, 'Baidu': {'detected': False, 'version': '1.0.0.2', 'result': None, 'update': '20190215'}, 'Babable': {'detected': False, 'version': '9107201', 'result': None, 'update': '20180918'}, 'F-Prot': {'detected': False, 'version': '4.7.1.166', 'result': None, 'update': '20190226'}, 'Symantec': {'detected': False, 'version': '1.8.0.0', 'result': None, 'update': '20190226'}, 'ESET-NOD32': {'detected': False, 'version': '18940', 'result': None, 'update': '20190226'}, 'TrendMicro-HouseCall': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'Avast': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190227'}, 'ClamAV': {'detected': False, 'version': '0.101.1.0', 'result': None, 'update': '20190226'}, 'Kaspersky': {'detected': False, 'version': '15.0.1.13', 'result': None, 'update': '20190226'}, 'BitDefender': {'detected': False, 'version': '7.2', 'result': None, 'update': '20190226'}, 'NANO-Antivirus': {'detected': False, 'version': '1.0.134.24576', 'result': None, 'update': '20190226'}, 'ViRobot': {'detected': False, 'version': '2014.3.20.0', 'result': None, 'update': '20190226'}, 'Ad-Aware': {'detected': False, 'version': '3.0.5.370', 'result': None, 'update': '20190226'}, 'Sophos': {'detected': False, 'version': '4.98.0', 'result': None, 'update': '20190226'}, 'Comodo': {'detected': False, 'version': '30490', 'result': None, 'update': '20190226'}, 'F-Secure': {'detected': False, 'version': '12.0.86.52', 'result': None, 'update': '20190226'}, 'DrWeb': {'detected': False, 'version': '7.0.34.11020', 'result': None, 'update': '20190227'}, 'Zillya': {'detected': False, 'version': '2.0.0.3762', 'result': None, 'update': '20190226'}, 'TrendMicro': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'McAfee-GW-Edition': {'detected': False, 'version': 'v2017.3010', 'result': None, 'update': '20190226'}, 'Emsisoft': {'detected': False, 'version': '2018.4.0.1029', 'result': None, 'update': '20190226'}, 'Cyren': {'detected': False, 'version': '6.2.0.1', 'result': None, 'update': '20190226'}, 'Jiangmin': {'detected': False, 'version': '16.0.100', 'result': None, 'update': '20190226'}, 'Avira': {'detected': False, 'version': '8.3.3.8', 'result': None, 'update': '20190226'}, 'Antiy-AVL': {'detected': False, 'version': '3.0.0.1', 'result': None, 'update': '20190226'}, 'Kingsoft': {'detected': False, 'version': '2013.8.14.323', 'result': None, 'update': '20190227'}, 'Microsoft': {'detected': False, 'version': '1.1.15700.9', 'result': None, 'update': '20190227'}, 'Arcabit': {'detected': False, 'version': '1.0.0.837', 'result': None, 'update': '20190226'}, 'SUPERAntiSpyware': {'detected': False, 'version': '5.6.0.1032', 'result': None, 'update': '20190220'}, 'AhnLab-V3': {'detected': False, 'version': '3.14.1.22785', 'result': None, 'update': '20190226'}, 'ZoneAlarm': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190226'}, 'Avast-Mobile': {'detected': False, 'version': '190226-00', 'result': None, 'update': '20190226'}, 'GData': {'detected': False, 'version': 'A:25.20851B:25.14478', 'result': None, 'update': '20190226'}, 'TACHYON': {'detected': False, 'version': '2019-02-26.02', 'result': None, 'update': '20190226'}, 'TotalDefense': {'detected': False, 'version': '37.1.62.1', 'result': None, 'update': '20190226'}, 'VBA32': {'detected': False, 'version': '4.0.0', 'result': None, 'update': '20190226'}, 'ALYac': {'detected': False, 'version': '1.1.1.5', 'result': None, 'update': '20190226'}, 'MAX': {'detected': False, 'version': '2018.9.12.1', 'result': None, 'update': '20190227'}, 'Zoner': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190227'}, 'Tencent': {'detected': False, 'version': '1.0.0.1', 'result': None, 'update': '20190227'}, 'Yandex': {'detected': False, 'version': '5.5.1.3', 'result': None, 'update': '20190226'}, 'Ikarus': {'detected': False, 'version': '0.1.5.2', 'result': None, 'update': '20190226'}, 'Fortinet': {'detected': False, 'version': '5.4.247.0', 'result': None, 'update': '20190226'}, 'AVG': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190227'}, 'Panda': {'detected': False, 'version': '4.6.4.2', 'result': None, 'update': '20190226'}, 'Qihoo-360': {'detected': False, 'version': '1.0.0.1120', 'result': None, 'update': '20190227'}}, 'scan_id': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348', 'sha1': 'dab0cbe1fad20596a12da14ac2fa50ddd949b965', 'resource': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590', 'response_code': 1, 'scan_date': '2019-02-26 23:55:48', 'permalink': 'https://www.virustotal.com/file/fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590/analysis/1551225348/', 'verbose_msg': 'Scan finished, information embedded', 'total': 56, 'positives': 0, 'sha256': 'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590', 'md5': 'bd6dcc1d6612d709a664c89bb3941c4a'}"
endTime: 1551265285.7216647
latency: 0.6063566207885742

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265376.8917072
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551265377.1061351
latency: 0.21442794799804688

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265377.355268
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551265377.5580566
latency: 0.2027885913848877

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551265379.7272987
response: b"HTTP/1.1 200\r\n\r\n{'Bkav': {'detected': False, 'version': '1.3.0.9899', 'result': None, 'update': '20190226'}, 'MicroWorld-eScan': {'detected': False, 'version': '14.0.297.0', 'result': None, 'update': '20190226'}, 'CMC': {'detected': False, 'version': '1.1.0.977', 'result': None, 'update': '20190226'}, 'CAT-QuickHeal': {'detected': False, 'version': '14.00', 'result': None, 'update': '20190225'}, 'McAfee': {'detected': False, 'version': '6.0.6.653', 'result': None, 'update': '20190226'}, 'Malwarebytes': {'detected': False, 'version': '2.1.1.1115', 'result': None, 'update': '20190226'}, 'AegisLab': {'detected': False, 'version': '4.2', 'result': None, 'update': '20190226'}, 'TheHacker': {'detected': False, 'version': '6.8.0.5.4029', 'result': None, 'update': '20190225'}, 'K7GW': {'detected': False, 'version': '11.31.30117', 'result': None, 'update': '20190227'}, 'K7AntiVirus': {'detected': False, 'version': '11.31.30117', 'result': None, 'update': '20190226'}, 'Baidu': {'detected': False, 'version': '1.0.0.2', 'result': None, 'update': '20190215'}, 'Babable': {'detected': False, 'version': '9107201', 'result': None, 'update': '20180918'}, 'F-Prot': {'detected': False, 'version': '4.7.1.166', 'result': None, 'update': '20190226'}, 'Symantec': {'detected': False, 'version': '1.8.0.0', 'result': None, 'update': '20190226'}, 'ESET-NOD32': {'detected': False, 'version': '18940', 'result': None, 'update': '20190226'}, 'TrendMicro-HouseCall': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'Avast': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190227'}, 'ClamAV': {'detected': False, 'version': '0.101.1.0', 'result': None, 'update': '20190226'}, 'Kaspersky': {'detected': False, 'version': '15.0.1.13', 'result': None, 'update': '20190226'}, 'BitDefender': {'detected': False, 'version': '7.2', 'result': None, 'update': '20190226'}, 'NANO-Antivirus': {'detected': False, 'version': '1.0.134.24576', 'result': None, 'update': '20190226'}, 'ViRobot': {'detected': False, 'version': '2014.3.20.0', 'result': None, 'update': '20190226'}, 'Ad-Aware': {'detected': False, 'version': '3.0.5.370', 'result': None, 'update': '20190226'}, 'Sophos': {'detected': False, 'version': '4.98.0', 'result': None, 'update': '20190226'}, 'Comodo': {'detected': False, 'version': '30490', 'result': None, 'update': '20190226'}, 'F-Secure': {'detected': False, 'version': '12.0.86.52', 'result': None, 'update': '20190226'}, 'DrWeb': {'detected': False, 'version': '7.0.34.11020', 'result': None, 'update': '20190227'}, 'Zillya': {'detected': False, 'version': '2.0.0.3762', 'result': None, 'update': '20190226'}, 'TrendMicro': {'detected': False, 'version': '10.0.0.1040', 'result': None, 'update': '20190226'}, 'McAfee-GW-Edition': {'detected': False, 'version': 'v2017.3010', 'result': None, 'update': '20190226'}, 'Emsisoft': {'detected': False, 'version': '2018.4.0.1029', 'result': None, 'update': '20190226'}, 'Cyren': {'detected': False, 'version': '6.2.0.1', 'result': None, 'update': '20190226'}, 'Jiangmin': {'detected': False, 'version': '16.0.100', 'result': None, 'update': '20190226'}, 'Avira': {'detected': False, 'version': '8.3.3.8', 'result': None, 'update': '20190226'}, 'Antiy-AVL': {'detected': False, 'version': '3.0.0.1', 'result': None, 'update': '20190226'}, 'Kingsoft': {'detected': False, 'version': '2013.8.14.323', 'result': None, 'update': '20190227'}, 'Microsoft': {'detected': False, 'version': '1.1.15700.9', 'result': None, 'update': '20190227'}, 'Arcabit': {'detected': False, 'version': '1.0.0.837', 'result': None, 'update': '20190226'}, 'SUPERAntiSpyware': {'detected': False, 'version': '5.6.0.1032', 'result': None, 'update': '20190220'}, 'AhnLab-V3': {'detected': False, 'version': '3.14.1.22785', 'result': None, 'update': '20190226'}, 'ZoneAlarm': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190226'}, 'Avast-Mobile': {'detected': False, 'version': '190226-00', 'result': None, 'update': '20190226'}, 'GData': {'detected': False, 'version': 'A:25.20851B:25.14478', 'result': None, 'update': '20190226'}, 'TACHYON': {'detected': False, 'version': '2019-02-26.02', 'result': None, 'update': '20190226'}, 'TotalDefense': {'detected': False, 'version': '37.1.62.1', 'result': None, 'update': '20190226'}, 'VBA32': {'detected': False, 'version': '4.0.0', 'result': None, 'update': '20190226'}, 'ALYac': {'detected': False, 'version': '1.1.1.5', 'result': None, 'update': '20190226'}, 'MAX': {'detected': False, 'version': '2018.9.12.1', 'result': None, 'update': '20190227'}, 'Zoner': {'detected': False, 'version': '1.0', 'result': None, 'update': '20190227'}, 'Tencent': {'detected': False, 'version': '1.0.0.1', 'result': None, 'update': '20190227'}, 'Yandex': {'detected': False, 'version': '5.5.1.3', 'result': None, 'update': '20190226'}, 'Ikarus': {'detected': False, 'version': '0.1.5.2', 'result': None, 'update': '20190226'}, 'Fortinet': {'detected': False, 'version': '5.4.247.0', 'result': None, 'update': '20190226'}, 'AVG': {'detected': False, 'version': '18.4.3895.0', 'result': None, 'update': '20190227'}, 'Panda': {'detected': False, 'version': '4.6.4.2', 'result': None, 'update': '20190226'}, 'Qihoo-360': {'detected': False, 'version': '1.0.0.1120', 'result': None, 'update': '20190227'}}"
endTime: 1551265380.4260895
latency: 0.6987907886505127

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551265495.7401059
response: b'HTTP/1.1 200\r\n\r\nBkav'
endTime: 1551265496.7840123
latency: 1.0439064502716064

request: b''
startTime: 1551265520.7696831
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265521.071192
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551265521.280507
latency: 0.20931506156921387

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265521.5248518
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551265521.7452626
latency: 0.22041082382202148

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265658.5168557
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551265658.7302883
latency: 0.21343255043029785

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265658.97663
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551265659.1861603
latency: 0.20953035354614258

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551265662.1648264
request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265684.6848528
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551265684.9102678
latency: 0.22541499137878418

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265709.7747183
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551265710.0001204
latency: 0.2254021167755127

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265710.2614675
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551265710.4892774
latency: 0.22780990600585938

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551265713.6803918
response: b'HTTP/1.1 200\r\n\r\nBkav'
endTime: 1551265714.2853663
latency: 0.6049745082855225

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265728.8256338
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551265729.056363
latency: 0.230729341506958

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265736.9204583
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551265737.1539025
latency: 0.2334442138671875

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265737.393197
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551265737.6306357
latency: 0.23743867874145508

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265737.8731492
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551265738.1164236
latency: 0.24327445030212402

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265738.36085
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551265738.6051192
latency: 0.24426913261413574

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265738.855448
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551265739.0988448
latency: 0.24339675903320312

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265739.3840353
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551265739.6483283
latency: 0.26429295539855957

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551265744.0015116
response: b'HTTP/1.1 200\r\n\r\nBkav'
endTime: 1551265744.7948656
latency: 0.7933540344238281

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265752.21669
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551265752.483105
latency: 0.2664148807525635

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265756.4871864
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551265756.7082071
latency: 0.22102069854736328

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265757.266614
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551265757.526502
latency: 0.2598879337310791

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265835.6904447
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551265835.9712791
latency: 0.280834436416626

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265836.2461967
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551265836.518412
latency: 0.2722153663635254

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265836.7972615
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551265837.0705063
latency: 0.27324485778808594

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265837.3497589
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551265837.6200376
latency: 0.2702786922454834

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265837.9142509
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551265838.195498
latency: 0.2812471389770508

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551265838.4957738
response: b'HTTP/1.1 200\r\n\r\nBkav'
endTime: 1551265839.3209481
latency: 0.8251743316650391

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265839.9259474
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551265840.274332
latency: 0.3483846187591553

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265840.5707877
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551265840.8621092
latency: 0.2913215160369873

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265841.4564226
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551265841.7292933
latency: 0.2728707790374756

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265842.3091805
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551265842.5724769
latency: 0.26329636573791504

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265843.153142
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551265843.4414172
latency: 0.28827524185180664

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265844.0180306
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551265844.2709713
latency: 0.25294065475463867

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265844.8512592
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551265845.110826
latency: 0.2595667839050293

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265845.681311
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551265845.93134
latency: 0.2500290870666504

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265893.168903
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551265893.472058
latency: 0.30315494537353516

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265893.817138
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551265894.1147225
latency: 0.29758453369140625

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265894.636636
response: b'HTTP/1.1 200\r\n\r\n{"id":4774,"url":"https://splashbase.s3.amazonaws.com/snapwiresnaps/regular/tumblr_nyn2vyY8CV1teue7jo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/snapwiresnaps/large/tumblr_nyn2vyY8CV1teue7jo1_1280.jpg","source_id":null,"copyright":"CC0","site":"snapwiresnaps"}'
endTime: 1551265895.7477808
latency: 1.111144781112671

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551265906.7451835
response: b'HTTP/1.1 200\r\n\r\nBkav'
endTime: 1551265907.4370773
latency: 0.6918938159942627

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265912.9803903
response: b'HTTP/1.1 200\r\n\r\n{"id":3933,"url":"https://splashbase.s3.amazonaws.com/mmt/regular/P5160651.jpg","large_url":"https://splashbase.s3.amazonaws.com/mmt/large/P5160651.jpg","source_id":980,"copyright":"CC0","site":"mmt"}'
endTime: 1551265914.0599241
latency: 1.0795338153839111

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551265914.6250844
response: b'HTTP/1.1 200\r\n\r\n{"id":6883,"url":"https://splashbase.s3.amazonaws.com/snapwiresnaps/regular/tumblr_oaw0dpxWc61teue7jo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/snapwiresnaps/large/tumblr_oaw0dpxWc61teue7jo1_1280.jpg","source_id":null,"copyright":"CC0","site":"snapwiresnaps"}'
endTime: 1551265915.6293173
latency: 1.0042328834533691

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273276.8805237
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551273277.2321997
latency: 0.35167598724365234

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273279.623302
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(){\n                console.log("good")\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551273280.0233939
latency: 0.40009188652038574

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273301.9784794
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(){\n                console.log("good")\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551273302.3013935
latency: 0.32291412353515625

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273306.4658883
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(){\n                console.log("good")\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551273306.8116124
latency: 0.34572410583496094

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273319.3927817
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(){\n                console.log("good")\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551273319.733342
latency: 0.3405601978302002

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273442.9344087
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(){\n                console.log("good")\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551273443.2804863
latency: 0.34607768058776855

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273443.6774254
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551273444.0141444
latency: 0.3367190361022949

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273450.4292676
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(){\n                console.log("good")\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551273450.7758808
latency: 0.34661316871643066

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273451.2667043
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(){\n                console.log("good")\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551273451.6473565
latency: 0.38065218925476074

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273452.070342
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551273452.726464
latency: 0.6561219692230225

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273457.0365167
response: b'HTTP/1.1 200\r\n\r\n1'
endTime: 1551273457.8180819
latency: 0.7815651893615723

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273521.17632
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(){\n                console.log("good")\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551273521.5514565
latency: 0.3751363754272461

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273521.9551587
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551273522.2905996
latency: 0.33544087409973145

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273526.3065157
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273675.2731628
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(){\n                console.log("good")\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551273675.6474264
latency: 0.3742635250091553

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273676.0604613
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551273676.409397
latency: 0.348935604095459

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273678.2163732
response: b'HTTP/1.1 200\r\n\r\n3'
endTime: 1551273678.9020214
latency: 0.6856482028961182

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273714.7219598
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(){\n                console.log("good")\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551273715.088432
latency: 0.3664722442626953

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273715.5228176
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551273715.910798
latency: 0.38798046112060547

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273716.8964527
response: b'HTTP/1.1 200\r\n\r\n2'
endTime: 1551273717.633394
latency: 0.7369413375854492

request: b'GET /useService HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273723.887826
response: b'HTTP/1.1 200\r\n\r\n{"number": 4, "src": "https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mnh17lfd9R1st5lhmo1_1280.jpg", "resource": "fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590", "scan_id": "fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551237726"}'
endTime: 1551273727.3476837
latency: 3.459857702255249

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551273739.9907904
response: b'HTTP/1.1 200\r\n\r\nBkav'
endTime: 1551273740.8131335
latency: 0.822343111038208

request: b''
startTime: 1551273805.4705806
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273912.0926466
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551273912.4670763
latency: 0.37442970275878906

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273912.9298198
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551273913.2920191
latency: 0.3621993064880371

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273919.945843
response: b'HTTP/1.1 200\r\n\r\n8'
endTime: 1551273920.650342
latency: 0.7044990062713623

request: b''
startTime: 1551273939.3549445
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273939.7005265
response: b'HTTP/1.1 200\r\n\r\n1'
endTime: 1551273940.403711
latency: 0.7031846046447754

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551273941.7061791
response: b'HTTP/1.1 200\r\n\r\n8'
endTime: 1551273942.4161484
latency: 0.7099692821502686

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551273968.1803381
response: b'HTTP/1.1 200\r\n\r\nBkav'
endTime: 1551273969.1605537
latency: 0.9802155494689941

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274010.0874808
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target                \n                console.log("brute ", responseObj)\n                let result = JSON.parse(responseObj.response[1])\n                console.log("parsed", result)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551274010.4535444
latency: 0.36606359481811523

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274010.872364
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551274011.2304058
latency: 0.35804176330566406

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551274016.7670538
response: b'HTTP/1.1 200\r\n\r\nFalse'
endTime: 1551274017.542792
latency: 0.7757382392883301

request: b''
startTime: 1551274092.6227715
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274093.0180488
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                // \'scan_id\': scanId.innerText,\n                \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                // \'resource\': res.innerText\n                \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551274093.4219167
latency: 0.4038679599761963

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274093.8525538
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551274094.2411397
latency: 0.38858580589294434

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348","resource":"fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590"}'
startTime: 1551274096.0319076
response: b'HTTP/1.1 200\r\n\r\nFalse'
endTime: 1551274096.8867574
latency: 0.8548498153686523

request: b''
startTime: 1551274117.7744803
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274118.1908777
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="/getImage" method="GET">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551274118.6175756
latency: 0.4266979694366455

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274119.0593848
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551274119.4368856
latency: 0.3775007724761963

request: b'GET /useService HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274120.2700548
response: b'HTTP/1.1 200\r\n\r\n{"number": 6, "src": "https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mnh1jdFvHR1st5lhmo1_1280.jpg", "resource": "d1b2ae271687fcd80742024b8106baa04e36e085259c3774faa03a975e86fe70", "scan_id": "d1b2ae271687fcd80742024b8106baa04e36e085259c3774faa03a975e86fe70-1551238122"}'
endTime: 1551274123.8383994
latency: 3.5683445930480957

request: b''
startTime: 1551274130.798836
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"d1b2ae271687fcd80742024b8106baa04e36e085259c3774faa03a975e86fe70-1551238122","resource":"d1b2ae271687fcd80742024b8106baa04e36e085259c3774faa03a975e86fe70"}'
startTime: 1551274131.1806388
response: b'HTTP/1.1 200\r\n\r\nFalse'
endTime: 1551274132.1238184
latency: 0.9431796073913574

request: b''
startTime: 1551274147.9634368
request: b'GET /getImage? HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274170.7566152
response: b'HTTP/1.1 200\r\n\r\n{"id":6606,"url":"https://splashbase.s3.amazonaws.com/snapwiresnaps/regular/tumblr_o6xbocz4dl1teue7jo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/snapwiresnaps/large/tumblr_o6xbocz4dl1teue7jo1_1280.jpg","source_id":null,"copyright":"CC0","site":"snapwiresnaps"}'
endTime: 1551274172.1291149
latency: 1.372499704360962

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/getImage?\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274172.5699363
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551274172.9729457
latency: 0.40300941467285156

request: b'GET /getImage? HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274327.2339435
response: b'HTTP/1.1 200\r\n\r\n{"id":8371,"url":"https://splashbase.s3.amazonaws.com/travelcoffeebook/regular/tumblr_o45aptuwC01ta0hnbo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/travelcoffeebook/large/tumblr_o45aptuwC01ta0hnbo1_1280.jpg","source_id":null,"copyright":"CC0","site":"travelcoffeebook"}'
endTime: 1551274328.4502225
latency: 1.2162790298461914

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/getImage?\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274328.8945796
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551274329.321338
latency: 0.4267582893371582

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274329.756885
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551274330.1639092
latency: 0.4070241451263428

request: b'GET /getImage? HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274331.83769
response: b'HTTP/1.1 200\r\n\r\n{"id":4330,"url":"https://splashbase.s3.amazonaws.com/snapwiresnaps/regular/tumblr_nrg85qpc2e1teue7jo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/snapwiresnaps/large/tumblr_nrg85qpc2e1teue7jo1_1280.jpg","source_id":null,"copyright":"CC0","site":"snapwiresnaps"}'
endTime: 1551274333.2444398
latency: 1.4067497253417969

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/getImage?\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274333.980461
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551274334.3992572
latency: 0.4187963008880615

request: b''
startTime: 1551274382.2717416
request: b'GET /getImage? HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274382.6806474
response: b'HTTP/1.1 200\r\n\r\n{"id":7662,"url":"https://splashbase.s3.amazonaws.com/mazwai/regular/andrew-arthur-breese_boneyard-raw-broll.png%3F1476538479","large_url":"https://splashbase.s3.amazonaws.com/mazwai/large/andrew-arthur-breese_boneyard-raw-broll.mp4%3F1476538479","source_id":1744,"copyright":"CC 3.0","site":"mazwai"}'
endTime: 1551274383.866627
latency: 1.1859796047210693

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/getImage?\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274384.2710729
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551274384.686672
latency: 0.41559910774230957

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274385.085903
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        document.getElementById(\'getByIdForm\').addEventListener("submit", function(event) {\n            event.preventDefault()\n            console.log(event.target)\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let form = document.getElementById("getByIdForm")\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551274385.7757742
latency: 0.6898713111877441

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274386.8270764
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551274387.2609165
latency: 0.4338400363922119

request: b''
startTime: 1551274423.9235737
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274424.3508549
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            console.log(event.target)\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551274424.7942145
latency: 0.4433596134185791

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274425.2586484
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551274425.6666377
latency: 0.4079892635345459

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274464.176949
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        document.getElementById(\'getByIdForm\').addEventListener("submit", function(event) {\n            event.preventDefault()\n            console.log(event.target, this.childNodes)\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        console.log(form)\n    </script>\n</body>\n</html>'
endTime: 1551274464.6243665
latency: 0.4474174976348877

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274465.0838604
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551274465.498267
latency: 0.41440653800964355

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274486.320122
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            console.log(event.target, this.childNodes)\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551274486.7828915
latency: 0.4627695083618164

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274487.2489338
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551274487.6617217
latency: 0.41278791427612305

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274642.9128275
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            console.log(event.target, this.childNodes)\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551274643.373974
latency: 0.46114659309387207

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274643.8427196
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551274644.264499
latency: 0.4217793941497803

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274709.5368726
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querSelector("randomId").value\n            console.log(event, this.childNodes, val)\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551274710.0085402
latency: 0.4716675281524658

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274710.4710586
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551274710.8998532
latency: 0.42879462242126465

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274718.0800536
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("randomId").value\n            console.log(event, this.childNodes, val)\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551274718.5482562
latency: 0.4682025909423828

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274719.0441742
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551274719.4906998
latency: 0.44652557373046875

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274731.985026
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#randomId").value\n            console.log(event, this.childNodes, val)\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551274732.4788413
latency: 0.49381542205810547

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274732.9678802
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551274733.4047098
latency: 0.4368295669555664

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274758.6279037
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            console.log(event, this.childNodes, val)\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551274759.1149669
latency: 0.4870631694793701

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274759.6083028
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551274760.0515587
latency: 0.4432559013366699

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274823.2700758
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            console.log(event.srcElement[0].value, this.childNodes, val)\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551274823.7604625
latency: 0.4903867244720459

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551274824.2502425
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551274824.7071657
latency: 0.456923246383667

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275028.252956
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.response\n                console.log("res: ", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n            })\n            rq.send(`id=${val}`)\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551275028.7461984
latency: 0.4932425022125244

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275029.245898
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551275029.695699
latency: 0.449800968170166

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 6\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\nid=123'
startTime: 1551275031.3004568
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551275031.7491584
latency: 0.4487016201019287

request: b''
startTime: 1551275069.936626
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275070.4203413
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.response\n                console.log("res: ", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n            })\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551275070.9076855
latency: 0.48734426498413086

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275071.4280977
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551275072.0397763
latency: 0.6116786003112793

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 8\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"id=123"'
startTime: 1551275073.011519
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551275074.005192
latency: 0.9936730861663818

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 8\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"id=123"'
startTime: 1551275141.7245557
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551275142.2246943
latency: 0.500138521194458

request: b''
startTime: 1551275168.711579
request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 8\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"id=123"'
startTime: 1551275169.1735575
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551275169.6641421
latency: 0.4905846118927002

request: b''
startTime: 1551275211.6840136
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275212.2069898
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.response\n                console.log("res: ", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n            })\n            rq.send(JSON.stringify(`{\'id\': ${val}}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551275212.7237864
latency: 0.5167965888977051

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275213.2441244
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551275213.7103791
latency: 0.46625471115112305

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 13\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"{\'id\': 333}"'
startTime: 1551275215.9051137
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551275216.383386
latency: 0.4782721996307373

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 13\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"{\'id\': 333}"'
startTime: 1551275353.8738847
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551275354.3606205
latency: 0.48673582077026367

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275545.2215319
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.response\n                console.log("res: ", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n            })\n            rq.send(JSON.stringify(`{\'id\': ${val}}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551275545.7395866
latency: 0.518054723739624

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275546.2851315
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551275546.7681012
latency: 0.4829697608947754

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 13\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"{\'id\': 333}"'
startTime: 1551275547.9853005
response: b'HTTP/1.1 200\r\n\r\nNone'
endTime: 1551275548.4987838
latency: 0.5134832859039307

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275575.8742335
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.response\n                console.log("res: ", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n            })\n            rq.send(JSON.stringify(`{\'id\': ${val}}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551275576.4008899
latency: 0.5266563892364502

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275576.941805
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551275577.450444
latency: 0.5086390972137451

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 13\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"{\'id\': 213}"'
startTime: 1551275578.2800844
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275600.0990505
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.response\n                console.log("res: ", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n            })\n            rq.send(JSON.stringify(`{\'id\': ${val}}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551275600.624047
latency: 0.5249965190887451

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275601.163223
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551275601.6522868
latency: 0.48906373977661133

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 13\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"{\'id\': 213}"'
startTime: 1551275603.3335762
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275654.6448855
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.response\n                console.log("res: ", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n            })\n            rq.send(JSON.stringify(`{\'id\': ${val}}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551275655.1782875
latency: 0.5334019660949707

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275655.7514062
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551275656.2579644
latency: 0.5065581798553467

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 13\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"{\'id\': 213}"'
startTime: 1551275657.30495
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275703.3020532
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.response\n                console.log("res: ", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n            })\n            rq.send(JSON.stringify(`{\'id\': ${val}}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551275703.8251657
latency: 0.5231125354766846

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275704.3751845
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551275704.8858864
latency: 0.5107018947601318

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 14\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"{\'id\': 3213}"'
startTime: 1551275706.6836474
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275789.0183566
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.response\n                console.log("res: ", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n            })\n            rq.send(JSON.stringify(`{\'id\': ${val}}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551275789.569281
latency: 0.55092453956604

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275790.131423
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551275790.6560252
latency: 0.5246021747589111

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 12\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"{\'id\': 32}"'
startTime: 1551275791.7752607
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275882.7415597
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.response\n                console.log("res: ", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n            })\n            rq.send(JSON.stringify(`{\'id\': ${val}}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551275883.3002276
latency: 0.5586678981781006

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275883.9043477
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551275884.4329507
latency: 0.5286030769348145

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 12\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"{\'id\': 32}"'
startTime: 1551275886.6979415
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275920.9444518
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.response\n                console.log("res: ", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n            })\n            rq.send(JSON.stringify(`{\'id\': ${val}}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551275921.5087788
latency: 0.5643270015716553

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275922.0803912
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551275922.638467
latency: 0.5580759048461914

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 12\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"{\'id\': 33}"'
startTime: 1551275923.2663236
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275973.5712664
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.response\n                console.log("res: ", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n            })\n            rq.send(JSON.stringify(`{\'id\': ${val}}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551275974.133361
latency: 0.5620946884155273

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551275974.7143185
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551275975.2530873
latency: 0.5387687683105469

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 12\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"{\'id\': 23}"'
startTime: 1551275976.170465
response: b'HTTP/1.1 200\r\n\r\nNone'
endTime: 1551275977.2834835
latency: 1.11301851272583

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276015.7760077
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.response\n                console.log("res: ", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n            })\n            rq.send(JSON.stringify(`{\'id\': ${val}}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551276016.3538404
latency: 0.5778326988220215

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276016.943876
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551276017.5048385
latency: 0.560962438583374

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 12\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"{\'id\': 31}"'
startTime: 1551276018.274068
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276133.6095912
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.response\n                console.log("res: ", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${id}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551276134.179572
latency: 0.5699808597564697

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276134.7777362
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551276135.3248742
latency: 0.547137975692749

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276152.6345713
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.response\n                console.log("res: ", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${id}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551276153.2384164
latency: 0.6038451194763184

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276153.8502154
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551276154.3994036
latency: 0.5491881370544434

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276184.166494
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.response\n                console.log("res: ", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551276184.76035
latency: 0.5938560962677002

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276185.3623734
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551276185.934217
latency: 0.5718436241149902

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 7\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"id=31"'
startTime: 1551276187.2851784
response: b'HTTP/1.1 200\r\n\r\nNone'
endTime: 1551276187.8715942
latency: 0.5864157676696777

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276236.3634417
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.response\n                console.log("res: ", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551276236.959694
latency: 0.5962522029876709

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276237.576234
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551276238.1627653
latency: 0.5865311622619629

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 7\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"id=31"'
startTime: 1551276238.9265256
response: b'HTTP/1.1 200\r\n\r\nNone'
endTime: 1551276239.5688088
latency: 0.6422832012176514

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276276.583644
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.response\n                console.log("res: ", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551276277.2026083
latency: 0.618964433670044

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276277.8331277
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551276278.414764
latency: 0.5816361904144287

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 7\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"id=31"'
startTime: 1551276279.3305228
response: b'HTTP/1.1 200\r\n\r\nNone'
endTime: 1551276280.58816
latency: 1.2576372623443604

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276364.8473754
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.response\n                console.log("res: ", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551276365.469074
latency: 0.6216986179351807

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276366.099848
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551276366.6813731
latency: 0.5815250873565674

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 7\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"id=31"'
startTime: 1551276367.9633787
response: b'HTTP/1.1 200\r\n\r\nhttps://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mp6scv2xrZ1st5lhmo1_1280.jpg'
endTime: 1551276371.8957481
latency: 3.9323694705963135

request: b''
startTime: 1551276394.653325
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276395.2867076
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.response\n                console.log("res: ", ev)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551276395.9287436
latency: 0.642035961151123

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276396.5720692
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551276397.1888163
latency: 0.6167471408843994

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 7\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"id=31"'
startTime: 1551276398.0028977
response: b'HTTP/1.1 200\r\n\r\nhttps://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mp6scv2xrZ1st5lhmo1_1280.jpg'
endTime: 1551276399.5565972
latency: 1.5536994934082031

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276472.1927276
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.srcElement.response\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551276472.8384361
latency: 0.6457085609436035

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276473.4703908
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551276474.0832226
latency: 0.6128318309783936

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 7\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"id=31"'
startTime: 1551276474.9297714
response: b'HTTP/1.1 200\r\n\r\nhttps://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mp6scv2xrZ1st5lhmo1_1280.jpg'
endTime: 1551276476.536657
latency: 1.6068856716156006

request: b'GET /undefined HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276477.485065
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551276478.097916
latency: 0.6128509044647217

request: b''
startTime: 1551276517.356405
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276518.009215
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                res = ev.srcElement.response\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                console.log(res["src"])\n                img.src = res["src"]\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551276518.643066
latency: 0.6338508129119873

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276519.3063207
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551276520.3691401
latency: 1.062819480895996

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 7\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"id=31"'
startTime: 1551276521.6622572
response: b'HTTP/1.1 200\r\n\r\nhttps://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mp6scv2xrZ1st5lhmo1_1280.jpg'
endTime: 1551276522.713731
latency: 1.05147385597229

request: b'GET /undefined HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276523.6604688
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551276524.2793503
latency: 0.6188814640045166

request: b''
startTime: 1551276550.911466
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276551.5559237
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                console.log(ev.srcElement)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                // console.log(res["src"])\n                // img.src = res["src"]\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551276552.1863172
latency: 0.6303935050964355

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276552.842038
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551276553.9232032
latency: 1.0811653137207031

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 7\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"id=31"'
startTime: 1551276555.2097566
response: b'HTTP/1.1 200\r\n\r\nhttps://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mp6scv2xrZ1st5lhmo1_1280.jpg'
endTime: 1551276556.1875105
latency: 0.9777538776397705

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276588.6177566
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                console.log(ev.srcElement.response, JSON.parse(ev.srcElement.response))\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                // console.log(res["src"])\n                // img.src = res["src"]\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551276589.289442
latency: 0.6716854572296143

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276589.950243
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551276590.574072
latency: 0.6238288879394531

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 7\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"id=31"'
startTime: 1551276591.5520263
response: b'HTTP/1.1 200\r\n\r\nhttps://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mp6scv2xrZ1st5lhmo1_1280.jpg'
endTime: 1551276593.1704676
latency: 1.6184413433074951

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276603.5378926
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                console.log(ev.srcElement.responseText)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                // console.log(res["src"])\n                // img.src = res["src"]\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551276604.2242115
latency: 0.6863188743591309

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276604.876482
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551276605.510701
latency: 0.6342189311981201

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 7\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"id=31"'
startTime: 1551276606.2383718
response: b'HTTP/1.1 200\r\n\r\nhttps://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mp6scv2xrZ1st5lhmo1_1280.jpg'
endTime: 1551276607.8949933
latency: 1.6566214561462402

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276642.4673946
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551276643.1589296
latency: 0.6915349960327148

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276643.827467
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551276644.4414248
latency: 0.6139578819274902

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 7\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"id=31"'
startTime: 1551276645.4799573
response: b'HTTP/1.1 200\r\n\r\nhttps://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mp6scv2xrZ1st5lhmo1_1280.jpg'
endTime: 1551276647.13837
latency: 1.6584126949310303

request: b'GET /useService HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276697.0757644
response: b'HTTP/1.1 200\r\n\r\n{"number": 5, "src": "https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mnh1d7s3UD1st5lhmo1_1280.jpg", "resource": "8bdc44490116714393b8c53634f46048c4f4adb8e4e949f5c7f947c82067d5b1", "scan_id": "8bdc44490116714393b8c53634f46048c4f4adb8e4e949f5c7f947c82067d5b1-1551240699"}'
endTime: 1551276700.9725747
latency: 3.896810293197632

request: b''
startTime: 1551276724.6682086
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"8bdc44490116714393b8c53634f46048c4f4adb8e4e949f5c7f947c82067d5b1-1551240699","resource":"8bdc44490116714393b8c53634f46048c4f4adb8e4e949f5c7f947c82067d5b1"}'
startTime: 1551276725.281636
response: b'HTTP/1.1 200\r\n\r\nFalse'
endTime: 1551276726.451812
latency: 1.1701760292053223

request: b''
startTime: 1551276765.9678533
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276766.648398
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n    </script>\n</body>\n</html>'
endTime: 1551276767.3485963
latency: 0.7001984119415283

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276768.0656927
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551276768.7323766
latency: 0.6666839122772217

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 5\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"id="'
startTime: 1551276772.3452787
request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276820.9215155
response: b'HTTP/1.1 200\r\n\r\n{"id":6767,"url":"https://splashbase.s3.amazonaws.com/splitshire/regular/SplitShire-2316-384x253.jpg","large_url":"https://splashbase.s3.amazonaws.com/splitshire/large/SplitShire-2316-384x253.jpg","source_id":null,"copyright":"CC0","site":"splitshire"}'
endTime: 1551276822.3104372
latency: 1.3889217376708984

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276824.606262
response: b'HTTP/1.1 200\r\n\r\n{"id":8623,"url":"https://splashbase.s3.amazonaws.com/travelcoffeebook/regular/tumblr_ove0ngqWdW1ta0hnbo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/travelcoffeebook/large/tumblr_ove0ngqWdW1ta0hnbo1_1280.jpg","source_id":null,"copyright":"CC0","site":"travelcoffeebook"}'
endTime: 1551276825.9371839
latency: 1.3309218883514404

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276828.1490774
response: b'HTTP/1.1 200\r\n\r\n{"id":3502,"url":"https://splashbase.s3.amazonaws.com/lifeofpix/regular/Life-of-Pix-free-stock-photos-montreal-city-milk-bottle-leeroy-1440x960.jpg","large_url":"https://splashbase.s3.amazonaws.com/lifeofpix/large/Life-of-Pix-free-stock-photos-montreal-city-milk-bottle-leeroy.jpg","source_id":null,"copyright":"CC0","site":"lifeofpix"}'
endTime: 1551276829.4593403
latency: 1.31026291847229

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276830.0966299
response: b'HTTP/1.1 200\r\n\r\n{"id":4491,"url":"https://splashbase.s3.amazonaws.com/unsplash/regular/photo-1438115234772-f94147ca89b7%3Fq%3D80%26fm%3Djpg%26w%3D1080%26fit%3Dmax%26s%3De6cf3b3b27a686920ca05beb64601917","large_url":"https://splashbase.s3.amazonaws.com/unsplash/large/download","source_id":1228,"copyright":"CC0","site":"unsplash"}'
endTime: 1551276831.4279711
latency: 1.33134126663208

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276832.358404
response: b'HTTP/1.1 200\r\n\r\n{"id":937,"url":"https://splashbase.s3.amazonaws.com/getrefe/regular/tumblr_mzx9p7S9ka1slhhf0o1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/getrefe/large/12123197096_60b6d0e727_o.jpg","source_id":315,"copyright":"CC0","site":"getrefe"}'
endTime: 1551276833.7770376
latency: 1.4186336994171143

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276834.419067
response: b'HTTP/1.1 200\r\n\r\n{"id":186,"url":"https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mx3tsop3GI1st5lhmo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/unsplash/large/1j5JuYN","source_id":117,"copyright":"CC0","site":"unsplash"}'
endTime: 1551276835.6957614
latency: 1.2766945362091064

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276836.608024
response: b'HTTP/1.1 200\r\n\r\n{"id":3114,"url":"https://splashbase.s3.amazonaws.com/getrefe/regular/tumblr_niw2rcpisa1slhhf0o1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/getrefe/large/16160395420_aab279cd60_o.jpg","source_id":922,"copyright":"CC0","site":"getrefe"}'
endTime: 1551276838.2766156
latency: 1.6685917377471924

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276839.4066634
response: b'HTTP/1.1 200\r\n\r\n{"id":5722,"url":"https://splashbase.s3.amazonaws.com/splitshire/regular/SplitShire_IMG_8735-1-384x253.jpg","large_url":"https://splashbase.s3.amazonaws.com/splitshire/large/SplitShire_IMG_8735-1-384x253.jpg","source_id":null,"copyright":"CC0","site":"splitshire"}'
endTime: 1551276840.6695964
latency: 1.2629330158233643

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276841.572867
response: b'HTTP/1.1 200\r\n\r\n{"id":169,"url":"https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mwhdeuzus91st5lhmo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/unsplash/large/1dPt02Y","source_id":105,"copyright":"CC0","site":"unsplash"}'
endTime: 1551276843.0587451
latency: 1.4858782291412354

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276843.6588624
response: b'HTTP/1.1 200\r\n\r\n{"id":3235,"url":"https://splashbase.s3.amazonaws.com/splitshire/regular/SplitShire-2164-800x500.jpg","large_url":"https://splashbase.s3.amazonaws.com/splitshire/large/SplitShire-2164.jpg","source_id":null,"copyright":"CC0","site":"splitshire"}'
endTime: 1551276844.9304814
latency: 1.2716190814971924

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276845.841895
response: b'HTTP/1.1 200\r\n\r\n{"id":8481,"url":"https://splashbase.s3.amazonaws.com/jaymantri/regular/tumblr_nsoavu8uyV1qfirfao1_1280.jpg","large_url":null,"source_id":null,"copyright":"CC0","site":"jaymantri"}'
endTime: 1551276847.6780608
latency: 1.8361656665802002

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276848.2778718
response: b'HTTP/1.1 200\r\n\r\n{"id":5559,"url":"https://splashbase.s3.amazonaws.com/snapwiresnaps/regular/tumblr_o1l249LzcK1teue7jo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/snapwiresnaps/large/tumblr_o1l249LzcK1teue7jo1_1280.jpg","source_id":null,"copyright":"CC0","site":"snapwiresnaps"}'
endTime: 1551276849.6565483
latency: 1.378676414489746

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276850.4276283
response: b'HTTP/1.1 200\r\n\r\n{"id":2077,"url":"https://splashbase.s3.amazonaws.com/unsplash/regular/kVEPcWcfSA2tgOpRz9Za__DSC0765.jpg%3Ffit%3Dcrop%26fm%3Djpg%26h%3D625%26q%3D75%26w%3D950","large_url":null,"source_id":687,"copyright":"CC0","site":"unsplash"}'
endTime: 1551276852.2281456
latency: 1.8005173206329346

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276852.8432088
response: b'HTTP/1.1 200\r\n\r\n{"id":8238,"url":"https://splashbase.s3.amazonaws.com/newoldstock/regular/tumblr_oh9rbfypjF1sfie3io1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/newoldstock/large/tumblr_oh9rbfypjF1sfie3io1_1280.jpg","source_id":null,"copyright":"CC0","site":"newoldstock"}'
endTime: 1551276854.1026227
latency: 1.2594139575958252

request: b'GET /metrics HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551276885.1482768
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304212.472344
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            var apiRequest1 = fetch(\'localhost:8888/getImage\').then(function(response){ \n                    return response.json()\n            });\n            var apiRequest2 = fetch(\'localhost:8888/getImage\').then(function(response){\n                    return response.json()\n            });\n            var combinedData = {"apiRequest1":{},"apiRequest2":{}};\n            Promise.all([apiRequest1,apiRequest2]).then(function(values){\n                combinedData["apiRequest1"] = values[0];\n                combinedData["apiRequest2"] = values[1];\n                return combinedData;\n            });\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551304213.133551
latency: 0.6612069606781006

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304213.926404
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551304214.580869
latency: 0.6544649600982666

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304247.8739626
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            var apiRequest1 = fetch(\'http:/localhost:8888/getImage\').then(function(response){ \n                    return response.json()\n            });\n            var apiRequest2 = fetch(\'http:/localhost:8888/getImage\').then(function(response){\n                    return response.json()\n            });\n            var combinedData = {"apiRequest1":{},"apiRequest2":{}};\n            Promise.all([apiRequest1,apiRequest2]).then(function(values){\n                combinedData["apiRequest1"] = values[0];\n                combinedData["apiRequest2"] = values[1];\n                return combinedData;\n            });\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551304248.5481713
latency: 0.6742086410522461

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304249.2423146
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551304249.933859
latency: 0.6915445327758789

request: b'GET /localhost:8888/getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304254.26394
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551304254.8838723
latency: 0.6199321746826172

request: b'GET /localhost:8888/getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304255.5419629
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551304256.4871955
latency: 0.945232629776001

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304313.2056694
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            let apiRequest1 = fetch(\'http:/localhost:8888/getImage\').then(function(response){ \n                return response.json()\n            });\n            let apiRequest2 = fetch(\'http:/localhost:8888/getImage\').then(function(response){\n                return response.json()\n            });\n            let combinedData = {"apiRequest1":{},"apiRequest2":{}};\n            Promise.all([apiRequest1,apiRequest2]).then(function(values){\n                combinedData["apiRequest1"] = values[0];\n                combinedData["apiRequest2"] = values[1];\n                return combinedData;\n            });\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551304313.9288616
latency: 0.7231922149658203

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304315.0371447
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551304315.7183108
latency: 0.6811661720275879

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304528.2435522
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            let apiRequest1 = fetch(\'http:/localhost:8888/getImage\').then(function(response){ \n                return response.json()\n            });\n            let apiRequest2 = fetch(\'http:/localhost:8888/getImage\').then(function(response){\n                return response.json()\n            });\n            let combinedData = {"apiRequest1":{},"apiRequest2":{}};\n            Promise.all([apiRequest1,apiRequest2]).then(function(values){\n                combinedData["apiRequest1"] = values[0];\n                combinedData["apiRequest2"] = values[1];\n                return combinedData;\n            });\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551304528.9500208
latency: 0.7064685821533203

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304529.687439
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551304530.3849525
latency: 0.6975135803222656

request: b'GET /localhost:8888/getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304531.7632837
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551304532.3612068
latency: 0.5979230403900146

request: b'GET /localhost:8888/getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304532.993256
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551304533.6944494
latency: 0.7011933326721191

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304535.3095703
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551304536.01709
latency: 0.7075197696685791

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/favicon.ico\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304536.78007
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551304537.569994
latency: 0.789923906326294

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304565.498584
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            let apiRequest1 = fetch(\'http:/localhost:8888/getImage\').then(function(response){ \n                return response.json()\n            });\n            let apiRequest2 = fetch(\'http:/localhost:8888/getImage\').then(function(response){\n                return response.json()\n            });\n            let combinedData = {"apiRequest1":{},"apiRequest2":{}};\n            Promise.all([apiRequest1,apiRequest2]).then(function(values){\n                combinedData["apiRequest1"] = values[0];\n                combinedData["apiRequest2"] = values[1];\n                return combinedData;\n            });\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551304566.1987112
latency: 0.700127124786377

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304566.9100814
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551304567.5956929
latency: 0.6856114864349365

request: b'GET /localhost:8888/getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304570.4726512
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551304571.1370823
latency: 0.664431095123291

request: b'GET /localhost:8888/getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304571.849933
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551304572.5202038
latency: 0.6702709197998047

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304600.456853
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            let apiRequest1 = fetch(\'http:/localhost:8888/getImage\').then(function(response){ \n                console.log(response)\n                return response.json()\n            });\n            let apiRequest2 = fetch(\'http:/localhost:8888/getImage\').then(function(response){\n                return response.json()\n            });\n            let combinedData = {"apiRequest1":{},"apiRequest2":{}};\n            Promise.all([apiRequest1,apiRequest2]).then(function(values){\n                combinedData["apiRequest1"] = values[0];\n                combinedData["apiRequest2"] = values[1];\n                return combinedData;\n            });\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551304601.147487
latency: 0.69063401222229

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304601.8505592
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551304602.4896781
latency: 0.6391189098358154

request: b'GET /localhost:8888/getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304604.3599527
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551304605.6237612
latency: 1.2638084888458252

request: b'GET /localhost:8888/getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304606.3126533
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551304606.9814267
latency: 0.6687734127044678

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304734.8337944
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            let apiRequest1 = fetch(\'/getImage\').then(function(response){ \n                console.log(response)\n                return response.json()\n            });\n            let apiRequest2 = fetch(\'http:/getImage\').then(function(response){\n                return response.json()\n            });\n            let combinedData = {"apiRequest1":{},"apiRequest2":{}};\n            Promise.all([apiRequest1,apiRequest2]).then(function(values){\n                combinedData["apiRequest1"] = values[0];\n                combinedData["apiRequest2"] = values[1];\n                return combinedData;\n            });\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551304735.5952022
latency: 0.7614078521728516

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304736.379192
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551304737.1182153
latency: 0.7390232086181641

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304738.342901
response: b'HTTP/1.1 200\r\n\r\n{"id":1482,"url":"https://splashbase.s3.amazonaws.com/mazwai/regular/renato_cabral--Raizes_e_Asas.webm%3F1402706273","large_url":"https://splashbase.s3.amazonaws.com/mazwai/large/renato_cabral--Raizes_e_Asas.mp4%3F1402706273","source_id":379,"copyright":"CC 3.0","site":"mazwai"}'
endTime: 1551304740.21781
latency: 1.8749089241027832

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304740.9179404
response: b'HTTP/1.1 200\r\n\r\n{"id":5568,"url":"https://splashbase.s3.amazonaws.com/unsplash/regular/profile-fb-1445264796-5fa8b5c4aed9.jpg%3Fixlib%3Drb-0.3.5%26q%3D80%26fm%3Djpg%26crop%3Dfaces%26fit%3Dcrop%26h%3D32%26w%3D32%26s%3Db4a82665639aa56d57d4d4379ac7162a","large_url":"https://splashbase.s3.amazonaws.com/unsplash/large/leadbt","source_id":1432,"copyright":"CC0","site":"unsplash"}'
endTime: 1551304742.9844701
latency: 2.0665297508239746

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304807.7665474
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            let apiRequest1 = fetch(\'/getImage\').then(function(response){ \n                console.log(response)\n                return response.json()\n            });\n            let apiRequest2 = fetch(\'http:/getImage\').then(function(response){\n                return response.json()\n            });\n            let combinedData = {"apiRequest1":{},"apiRequest2":{}};\n            let all = Promise.all([apiRequest1,apiRequest2]).then(function(values){\n                combinedData["apiRequest1"] = values[0];\n                combinedData["apiRequest2"] = values[1];\n                return combinedData;\n            });\n            console.log(All)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551304808.5297136
latency: 0.7631661891937256

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304809.2388237
response: b'HTTP/1.1 200\r\n\r\n{"id":2982,"url":"https://splashbase.s3.amazonaws.com/snapwiresnaps/regular/tumblr_ni30h2xJpU1teue7jo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/snapwiresnaps/large/tumblr_ni30h2xJpU1teue7jo1_1280.jpg","source_id":null,"copyright":"CC0","site":"snapwiresnaps"}'
endTime: 1551304812.6666527
latency: 3.4278290271759033

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304813.3292484
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551304814.0318167
latency: 0.7025682926177979

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304820.41991
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            let apiRequest1 = fetch(\'/getImage\').then(function(response){ \n                console.log(response)\n                return response.json()\n            });\n            let apiRequest2 = fetch(\'http:/getImage\').then(function(response){\n                return response.json()\n            });\n            let combinedData = {"apiRequest1":{},"apiRequest2":{}};\n            let all = Promise.all([apiRequest1,apiRequest2]).then(function(values){\n                combinedData["apiRequest1"] = values[0];\n                combinedData["apiRequest2"] = values[1];\n                return combinedData;\n            });\n            console.log(All)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551304821.1637595
latency: 0.743849515914917

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304821.9426806
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551304822.6469455
latency: 0.7042648792266846

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304833.1354175
response: b'HTTP/1.1 200\r\n\r\n{"id":2845,"url":"https://splashbase.s3.amazonaws.com/unsplash/regular/photo-1418227165283-1595d13726cd%3Fq%3D75%26w%3D1080%26h%3D1080%26fit%3Dmax%26fm%3Djpg%26s%3D4a52f1854342eddcb31662ffbb0fb77e","large_url":"https://splashbase.s3.amazonaws.com/unsplash/large/download","source_id":877,"copyright":"CC0","site":"unsplash"}'
endTime: 1551304836.5630622
latency: 3.427644729614258

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304837.2198212
response: b'HTTP/1.1 200\r\n\r\n{"id":3562,"url":"https://splashbase.s3.amazonaws.com/lifeofpix/regular/Life-of-Pix-free-stock-photos-sunset-wood-lake-trees-escoveries-1440x2160.jpg","large_url":"https://splashbase.s3.amazonaws.com/lifeofpix/large/Life-of-Pix-free-stock-photos-sunset-wood-lake-trees-escoveries.jpg","source_id":null,"copyright":"CC0","site":"lifeofpix"}'
endTime: 1551304844.2864144
latency: 7.066593170166016

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304853.639826
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            let apiRequest1 = fetch(\'/getImage\').then(function(response){ \n                console.log(response)\n                return response.json()\n            });\n            let apiRequest2 = fetch(\'http:/getImage\').then(function(response){\n                return response.json()\n            });\n            let combinedData = {"apiRequest1":{},"apiRequest2":{}};\n            let all = Promise.all([apiRequest1,apiRequest2]).then(function(values){\n                combinedData["apiRequest1"] = values[0];\n                combinedData["apiRequest2"] = values[1];\n                console.log(combinedData);\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551304854.3972087
latency: 0.7573826313018799

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304855.1438837
response: b'HTTP/1.1 200\r\n\r\n{"id":7670,"url":"https://splashbase.s3.amazonaws.com/lifeofpix/regular/Life-of-Pix-free-stock-landscape-lake-mountains-LEEROY-1440x960.jpg","large_url":"https://splashbase.s3.amazonaws.com/lifeofpix/large/Life-of-Pix-free-stock-landscape-lake-mountains-LEEROY.jpg","source_id":null,"copyright":"CC0","site":"lifeofpix"}'
endTime: 1551304886.0159142
latency: 30.87203049659729

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304886.6431127
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551304887.3331695
latency: 0.6900568008422852

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304953.065692
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            let apiRequest1 = fetch(\'/getImage\').then(function(response){ \n                console.log(response)\n                return response.json()\n            });\n            let apiRequest2 = fetch(\'http:/getImage\').then(function(response){\n                return response.json()\n            });\n            let combinedData = {"apiRequest1":{},"apiRequest2":{}};\n            let all = Promise.all([apiRequest1,apiRequest2]).then(function(values){\n                combinedData["apiRequest1"] = values[0];\n                combinedData["apiRequest2"] = values[1];\n                console.log(combinedData);\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551304953.8194325
latency: 0.7537405490875244

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304954.560981
response: b'HTTP/1.1 200\r\n\r\n{"id":5653,"url":"https://splashbase.s3.amazonaws.com/splitshire/regular/SplitShire_IMG_3344-384x253.jpg","large_url":"https://splashbase.s3.amazonaws.com/splitshire/large/SplitShire_IMG_3344-384x253.jpg","source_id":null,"copyright":"CC0","site":"splitshire"}'
endTime: 1551304962.2658105
latency: 7.704829454421997

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551304962.936539
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551304963.6294036
latency: 0.6928646564483643

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305232.2031307
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            let apiRequest1 = fetch(\'/getImage\').then(function(response){ \n                console.log(response)\n                return response.json()\n            });\n            let apiRequest2 = fetch(\'http:/getImage\').then(function(response){\n                return response.json()\n            });\n            let combinedData = {"apiRequest1":{},"apiRequest2":{}};\n            let all = Promise.all([apiRequest1,apiRequest2]).then(function(values){\n                combinedData["apiRequest1"] = values[0];\n                combinedData["apiRequest2"] = values[1];\n                console.log(combinedData);\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551305232.9286628
latency: 0.725532054901123

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305233.7235575
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551305234.4530895
latency: 0.72953200340271

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305244.5479782
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            let apiRequest1 = fetch(\'/getImage\').then(function(response){ \n                console.log(response)\n                return response.json()\n            });\n            let apiRequest2 = fetch(\'http:/getImage\').then(function(response){\n                return response.json()\n            });\n            let combinedData = {"apiRequest1":{},"apiRequest2":{}};\n            let all = Promise.all([apiRequest1,apiRequest2]).then(function(values){\n                combinedData["apiRequest1"] = values[0];\n                combinedData["apiRequest2"] = values[1];\n                console.log(combinedData);\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551305245.3279877
latency: 0.7800095081329346

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305246.1059127
response: b'HTTP/1.1 200\r\n\r\n{"id":2011,"url":"https://splashbase.s3.amazonaws.com/unsplash/regular/winter-view.jpeg%3Ffit%3Dcrop%26fm%3Djpg%26h%3D725%26q%3D75%26w%3D950","large_url":null,"source_id":658,"copyright":"CC0","site":"unsplash"}'
endTime: 1551305259.3225687
latency: 13.216655969619751

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305260.0914333
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551305260.795976
latency: 0.7045426368713379

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305296.4378102
response: b'HTTP/1.1 200\r\n\r\n2'
endTime: 1551305297.570829
latency: 1.1330187320709229

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305303.758327
response: b'HTTP/1.1 200\r\n\r\n10'
endTime: 1551305304.8152888
latency: 1.0569617748260498

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305305.6274018
response: b'HTTP/1.1 200\r\n\r\n{"id":4718,"url":"https://splashbase.s3.amazonaws.com/moveast/regular/tumblr_nu5xa5tKlU1tomxvuo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/moveast/large/tumblr_nu5xa5tKlU1tomxvuo1_1280.jpg","source_id":null,"copyright":"CC0","site":"moveast"}'
endTime: 1551305307.6318455
latency: 2.004443645477295

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305399.0919843
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            let apiRequest1 = fetch(\'/getImage\').then(function(response){ \n                console.log(response)\n                return response.json()\n            });\n            let apiRequest2 = fetch(\'http:/getImage\').then(function(response){\n                return response.json()\n            });\n            let combinedData = {"apiRequest1":{},"apiRequest2":{}};\n            let all = Promise.all([apiRequest1,apiRequest2]).then(function(values){\n                combinedData["apiRequest1"] = values[0];\n                combinedData["apiRequest2"] = values[1];\n                console.log(combinedData);\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551305399.8819828
latency: 0.7899985313415527

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305400.692708
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551305401.4160311
latency: 0.7233231067657471

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305402.119766
response: b'HTTP/1.1 200\r\n\r\n{"id":5327,"url":"https://splashbase.s3.amazonaws.com/snapwiresnaps/regular/tumblr_o184lj9KZP1teue7jo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/snapwiresnaps/large/tumblr_o184lj9KZP1teue7jo1_1280.jpg","source_id":null,"copyright":"CC0","site":"snapwiresnaps"}'
endTime: 1551305405.114564
latency: 2.994797945022583

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305406.1659176
response: b'HTTP/1.1 200\r\n\r\n{"id":1257,"url":"https://splashbase.s3.amazonaws.com/superfamous/regular/DSC_0613_900.JPG","large_url":"https://splashbase.s3.amazonaws.com/superfamous/large/DSC_0613_900.JPG","source_id":340,"copyright":"CC 3.0","site":"superfamous"}'
endTime: 1551305407.9757264
latency: 1.8098087310791016

request: b''
startTime: 1551305708.4515562
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305709.246469
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getImage\').then(function(response){ \n                    return response.json()\n                });\n                batches.append(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551305710.0303347
latency: 0.7838656902313232

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305710.7823224
response: b'HTTP/1.1 200\r\n\r\n{"id":5301,"url":"https://splashbase.s3.amazonaws.com/splitshire/regular/SplitShire_36-e1450364218494-768x506.jpg","large_url":"https://splashbase.s3.amazonaws.com/splitshire/large/SplitShire_36-e1450364218494-768x506.jpg","source_id":null,"copyright":"CC0","site":"splitshire"}'
endTime: 1551305712.8512022
latency: 2.0688798427581787

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305713.5841956
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551305714.3071392
latency: 0.7229435443878174

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305714.999754
response: b'HTTP/1.1 200\r\n\r\n{"id":1156,"url":"https://splashbase.s3.amazonaws.com/jaymantri/regular/tumblr_n9yaajig541qfirfao1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/jaymantri/large/1pEASeK","source_id":null,"copyright":"CC0","site":"jaymantri"}'
endTime: 1551305719.7431912
latency: 4.74343729019165

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305732.092463
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getImage\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551305732.8957586
latency: 0.8032956123352051

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305733.6497464
response: b'HTTP/1.1 200\r\n\r\n{"id":8182,"url":"https://splashbase.s3.amazonaws.com/moveast/regular/tumblr_og2psdFWXX1tomxvuo6_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/moveast/large/tumblr_og2psdFWXX1tomxvuo6_1280.jpg","source_id":null,"copyright":"CC0","site":"moveast"}'
endTime: 1551305736.6985555
latency: 3.048809051513672

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305737.4185286
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551305738.114952
latency: 0.6964235305786133

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305738.8146043
response: b'HTTP/1.1 200\r\n\r\n{"id":8437,"url":"https://splashbase.s3.amazonaws.com/travelcoffeebook/regular/tumblr_os0iqdC3Bd1ta0hnbo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/travelcoffeebook/large/tumblr_os0iqdC3Bd1ta0hnbo1_1280.jpg","source_id":null,"copyright":"CC0","site":"travelcoffeebook"}'
endTime: 1551305741.6115558
latency: 2.7969515323638916

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305742.3101618
response: b'HTTP/1.1 200\r\n\r\n{"id":3503,"url":"https://splashbase.s3.amazonaws.com/lifeofpix/regular/Life-of-Pix-free-stock-photos-desktop-laptop-plant-window-leeroy-1440x960.jpg","large_url":"https://splashbase.s3.amazonaws.com/lifeofpix/large/Life-of-Pix-free-stock-photos-desktop-laptop-plant-window-leeroy.jpg","source_id":null,"copyright":"CC0","site":"lifeofpix"}'
endTime: 1551305745.7423859
latency: 3.4322240352630615

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305746.4500444
response: b'HTTP/1.1 200\r\n\r\n{"id":4786,"url":"https://splashbase.s3.amazonaws.com/newoldstock/regular/tumblr_nzgoh28slT1sfie3io1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/newoldstock/large/tumblr_nzgoh28slT1sfie3io1_1280.jpg","source_id":null,"copyright":"CC0","site":"newoldstock"}'
endTime: 1551305748.3676143
latency: 1.917569875717163

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305779.8308098
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getImage\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551305780.6421616
latency: 0.8113517761230469

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305781.4973133
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551305782.2835536
latency: 0.7862403392791748

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305789.915792
response: b'HTTP/1.1 200\r\n\r\n{"id":6625,"url":"https://splashbase.s3.amazonaws.com/newoldstock/regular/tumblr_o7bw5rh8ec1sfie3io1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/newoldstock/large/tumblr_o7bw5rh8ec1sfie3io1_1280.jpg","source_id":null,"copyright":"CC0","site":"newoldstock"}'
endTime: 1551305792.000892
latency: 2.085099935531616

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305792.6994128
response: b'HTTP/1.1 200\r\n\r\n{"id":3122,"url":"https://splashbase.s3.amazonaws.com/snapwiresnaps/regular/tumblr_nisxkjOha11teue7jo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/snapwiresnaps/large/tumblr_nisxkjOha11teue7jo1_1280.jpg","source_id":null,"copyright":"CC0","site":"snapwiresnaps"}'
endTime: 1551305795.0493786
latency: 2.349965810775757

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305796.0496914
response: b'HTTP/1.1 200\r\n\r\n{"id":5458,"url":"https://splashbase.s3.amazonaws.com/splitshire/regular/SplitShire-9898-384x253.jpg","large_url":"https://splashbase.s3.amazonaws.com/splitshire/large/SplitShire-9898-384x253.jpg","source_id":null,"copyright":"CC0","site":"splitshire"}'
endTime: 1551305798.2030494
latency: 2.153357982635498

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305798.9287052
response: b'HTTP/1.1 200\r\n\r\n{"id":7378,"url":"https://splashbase.s3.amazonaws.com/lifeofpix/regular/Life-of-Pix-free-stock-cliff-sea-water-LEEROY-1440x960.jpg","large_url":"https://splashbase.s3.amazonaws.com/lifeofpix/large/Life-of-Pix-free-stock-cliff-sea-water-LEEROY.jpg","source_id":null,"copyright":"CC0","site":"lifeofpix"}'
endTime: 1551305800.9622083
latency: 2.0335030555725098

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305802.040236
response: b'HTTP/1.1 200\r\n\r\n{"id":6376,"url":"https://splashbase.s3.amazonaws.com/moveast/regular/tumblr_o5xzdd02Po1tomxvuo2_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/moveast/large/tumblr_o5xzdd02Po1tomxvuo2_1280.jpg","source_id":null,"copyright":"CC0","site":"moveast"}'
endTime: 1551305804.151594
latency: 2.1113579273223877

request: b''
startTime: 1551305867.3224282
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305868.1462233
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551305868.9486117
latency: 0.8023884296417236

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305869.7125874
response: b'HTTP/1.1 200\r\n\r\n{"id":653,"url":"https://splashbase.s3.amazonaws.com/travelcoffeebook/regular/tumblr_n8v2ebBwQ91ta0hnbo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/travelcoffeebook/large/tumblr_n8v2ebBwQ91ta0hnbo1_1280.jpg","source_id":null,"copyright":"CC0","site":"travelcoffeebook"}'
endTime: 1551305872.563096
latency: 2.850508689880371

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305873.3028412
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551305874.0566318
latency: 0.7537906169891357

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305874.7677233
response: b'HTTP/1.1 200\r\n\r\n10'
endTime: 1551305875.8967798
latency: 1.129056453704834

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305877.3638525
response: b'HTTP/1.1 200\r\n\r\n1'
endTime: 1551305878.443139
latency: 1.0792865753173828

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305879.202585
response: b'HTTP/1.1 200\r\n\r\n8'
endTime: 1551305880.2528512
latency: 1.0502662658691406

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305882.118684
response: b'HTTP/1.1 200\r\n\r\n10'
endTime: 1551305883.1959553
latency: 1.0772712230682373

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305883.9257193
response: b'HTTP/1.1 200\r\n\r\n3'
endTime: 1551305884.9875383
latency: 1.061819076538086

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305957.3315327
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551305958.1716337
latency: 0.8401010036468506

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305958.9632437
response: b'HTTP/1.1 200\r\n\r\n7'
endTime: 1551305960.0924125
latency: 1.1291687488555908

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305960.836221
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551305961.8754926
latency: 1.039271593093872

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305962.9871268
response: b'HTTP/1.1 200\r\n\r\n3'
endTime: 1551305964.0385332
latency: 1.0514063835144043

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305965.1302848
response: b'HTTP/1.1 200\r\n\r\n9'
endTime: 1551305967.1131244
latency: 1.982839584350586

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305967.8820436
response: b'HTTP/1.1 200\r\n\r\n5'
endTime: 1551305968.9973583
latency: 1.1153147220611572

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305970.0676608
response: b'HTTP/1.1 200\r\n\r\n5'
endTime: 1551305971.786174
latency: 1.7185132503509521

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551305972.7106125
response: b'HTTP/1.1 200\r\n\r\n7'
endTime: 1551305973.840032
latency: 1.1294195652008057

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306033.102575
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551306033.9194498
latency: 0.8168747425079346

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306034.7781577
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551306035.6588032
latency: 0.8806455135345459

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306047.557518
response: not shown
endTime: 1551306048.3827121
latency: 0.8251941204071045

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306049.1781843
response: not shown
endTime: 1551306050.8415837
latency: 1.6633994579315186

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306052.1222131
response: not shown
endTime: 1551306052.8501937
latency: 0.7279806137084961

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306062.1820376
response: not shown
endTime: 1551306063.2797017
latency: 1.0976641178131104

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306064.0395193
response: not shown
endTime: 1551306065.101347
latency: 1.0618276596069336

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306066.6600294
response: not shown
endTime: 1551306068.305456
latency: 1.6454265117645264

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306069.0598285
response: not shown
endTime: 1551306070.1204631
latency: 1.0606346130371094

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306071.2132545
response: not shown
endTime: 1551306072.819861
latency: 1.6066064834594727

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306073.5166988
response: not shown
endTime: 1551306074.6301064
latency: 1.1134076118469238

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306075.7475474
response: not shown
endTime: 1551306077.3571725
latency: 1.6096251010894775

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306078.1459458
response: not shown
endTime: 1551306079.4453173
latency: 1.2993714809417725

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306081.3862193
response: not shown
endTime: 1551306082.5603034
latency: 1.174084186553955

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306083.3238027
response: not shown
endTime: 1551306085.1282074
latency: 1.8044047355651855

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306086.2009904
response: not shown
endTime: 1551306087.3311102
latency: 1.130119800567627

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306088.0401473
response: not shown
endTime: 1551306089.1664138
latency: 1.1262664794921875

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306090.7159426
response: not shown
endTime: 1551306092.174269
latency: 1.4583263397216797

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306144.5823886
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551306145.422885
latency: 0.840496301651001

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306146.2965548
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551306147.0714984
latency: 0.7749435901641846

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306148.2150145
response: b'HTTP/1.1 200\r\n\r\n9'
endTime: 1551306150.1183386
latency: 1.9033241271972656

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306151.207019
response: b'HTTP/1.1 200\r\n\r\n6'
endTime: 1551306152.306158
latency: 1.0991389751434326

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306153.0779886
response: b'HTTP/1.1 200\r\n\r\n5'
endTime: 1551306154.8740764
latency: 1.7960877418518066

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306156.281689
response: b'HTTP/1.1 200\r\n\r\n8'
endTime: 1551306157.4985833
latency: 1.2168943881988525

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306158.3280268
response: b'HTTP/1.1 200\r\n\r\n7'
endTime: 1551306159.7334201
latency: 1.405393362045288

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306161.5353572
response: b'HTTP/1.1 200\r\n\r\n6'
endTime: 1551306162.634054
latency: 1.0986967086791992

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306163.3894637
response: b'HTTP/1.1 200\r\n\r\n6'
endTime: 1551306165.4267056
latency: 2.0372419357299805

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306166.5928988
response: b'HTTP/1.1 200\r\n\r\n2'
endTime: 1551306167.6953528
latency: 1.1024539470672607

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306168.4422069
response: b'HTTP/1.1 200\r\n\r\n6'
endTime: 1551306169.7758589
latency: 1.3336520195007324

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306171.6527505
response: b'HTTP/1.1 200\r\n\r\n2'
endTime: 1551306172.753657
latency: 1.1009066104888916

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306173.5057116
response: b'HTTP/1.1 200\r\n\r\n6'
endTime: 1551306175.32443
latency: 1.818718433380127

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306176.3139465
response: b'HTTP/1.1 200\r\n\r\n4'
endTime: 1551306177.3922796
latency: 1.0783331394195557

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306178.2192812
response: b'HTTP/1.1 200\r\n\r\n10'
endTime: 1551306180.1492937
latency: 1.9300124645233154

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306181.0461416
response: b'HTTP/1.1 200\r\n\r\n10'
endTime: 1551306182.1480067
latency: 1.1018650531768799

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306182.990464
response: b'HTTP/1.1 200\r\n\r\n4'
endTime: 1551306184.1139183
latency: 1.1234543323516846

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306815.8123076
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551306816.6095936
latency: 0.7972860336303711

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306850.0935755
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551306850.9574661
latency: 0.8638906478881836

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306890.3046484
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551306891.1646357
latency: 0.8599872589111328

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306892.0938659
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551306892.9268284
latency: 0.8329625129699707

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306894.1245391
response: b'HTTP/1.1 200\r\n\r\n1'
endTime: 1551306896.2223604
latency: 2.0978212356567383

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306897.4525926
response: b'HTTP/1.1 200\r\n\r\n8'
endTime: 1551306898.7126415
latency: 1.2600488662719727

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306899.8814363
response: b'HTTP/1.1 200\r\n\r\n3'
endTime: 1551306901.8660195
latency: 1.9845831394195557

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306902.983763
response: b'HTTP/1.1 200\r\n\r\n7'
endTime: 1551306904.2803035
latency: 1.2965404987335205

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306905.9515815
response: b'HTTP/1.1 200\r\n\r\n9'
endTime: 1551306907.086288
latency: 1.1347064971923828

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306912.0296676
response: b'HTTP/1.1 200\r\n\r\n5'
endTime: 1551306913.1115584
latency: 1.0818908214569092

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306913.9539137
response: b'HTTP/1.1 200\r\n\r\n1'
endTime: 1551306915.9618206
latency: 2.007906913757324

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306917.130211
response: b'HTTP/1.1 200\r\n\r\n7'
endTime: 1551306918.2826593
latency: 1.1524481773376465

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306919.1602488
response: b'HTTP/1.1 200\r\n\r\n5'
endTime: 1551306920.3833601
latency: 1.2231113910675049

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306921.5062363
response: b'HTTP/1.1 200\r\n\r\n10'
endTime: 1551306923.2656112
latency: 1.7593748569488525

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306924.142952
response: b'HTTP/1.1 200\r\n\r\n8'
endTime: 1551306925.3245273
latency: 1.1815752983093262

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306926.5583565
response: b'HTTP/1.1 200\r\n\r\n3'
endTime: 1551306928.555403
latency: 1.9970464706420898

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306929.387133
response: b'HTTP/1.1 200\r\n\r\n10'
endTime: 1551306930.491986
latency: 1.1048531532287598

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306931.6816392
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306931.948061
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306932.236166
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306932.4392462
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306932.4392462
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306932.4392462
response: b'HTTP/1.1 200\r\n\r\n2'
endTime: 1551306933.3229845
latency: 0.8837382793426514

response: b'HTTP/1.1 200\r\n\r\n7'
endTime: 1551306933.338149
latency: 0.8989028930664062

response: b'HTTP/1.1 200\r\n\r\n5'
endTime: 1551306933.3538055
latency: 0.9145593643188477

response: b'HTTP/1.1 200\r\n\r\n4'
endTime: 1551306933.3538055
latency: 1.1176395416259766

response: b'HTTP/1.1 200\r\n\r\n8'
endTime: 1551306933.369391
latency: 1.6877517700195312

response: b'HTTP/1.1 200\r\n\r\n1'
endTime: 1551306933.4006708
latency: 1.4526097774505615

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306934.871727
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306934.871727
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306934.871727
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306934.871727
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306934.871727
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306934.9022572
response: b'HTTP/1.1 200\r\n\r\n8'
endTime: 1551306935.9105449
latency: 1.0388178825378418

response: b'HTTP/1.1 200\r\n\r\n4'
endTime: 1551306935.9105449
latency: 1.0388178825378418

response: b'HTTP/1.1 200\r\n\r\n1'
endTime: 1551306935.9411774
latency: 1.0694503784179688

response: b'HTTP/1.1 200\r\n\r\n10'
endTime: 1551306935.9567602
latency: 1.0545029640197754

response: b'HTTP/1.1 200\r\n\r\n5'
endTime: 1551306935.9567602
latency: 1.0850331783294678

response: b'HTTP/1.1 200\r\n\r\n8'
endTime: 1551306935.9567602
latency: 1.0850331783294678

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306936.967289
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306936.967289
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306936.967289
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306936.967289
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306936.967289
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306936.9682863
response: b'HTTP/1.1 200\r\n\r\n4'
endTime: 1551306938.1585555
latency: 1.1912665367126465

response: b'HTTP/1.1 200\r\n\r\n7'
endTime: 1551306938.173727
latency: 1.2064380645751953

response: b'HTTP/1.1 200\r\n\r\n7'
endTime: 1551306938.189349
latency: 1.2210626602172852

response: b'HTTP/1.1 200\r\n\r\n4'
endTime: 1551306938.189349
latency: 1.222059965133667

response: b'HTTP/1.1 200\r\n\r\n7'
endTime: 1551306938.2049732
latency: 1.2376842498779297

response: b'HTTP/1.1 200\r\n\r\n3'
endTime: 1551306938.2049732
latency: 1.2376842498779297

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306940.113195
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306940.113195
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306940.113195
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551306940.113195
response: b'HTTP/1.1 200\r\n\r\n1'
endTime: 1551306941.1781237
latency: 1.0649287700653076

response: b'HTTP/1.1 200\r\n\r\n4'
endTime: 1551306941.1781237
latency: 1.0649287700653076

response: b'HTTP/1.1 200\r\n\r\n7'
endTime: 1551306941.1781237
latency: 1.0649287700653076

response: b'HTTP/1.1 200\r\n\r\n2'
endTime: 1551306941.1781237
latency: 1.0649287700653076

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551307221.6845725
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551307222.5476124
latency: 0.8630399703979492

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551307223.4319022
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551307224.2490118
latency: 0.8171095848083496

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551307230.7245312
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551307231.5812864
latency: 0.856755256652832

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551307233.0369234
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551307233.909217
latency: 0.8722934722900391

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 28\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"","resource":""}'
startTime: 1551307235.35689
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551307236.1797824
response: b'HTTP/1.1 200\r\n\r\n1'
endTime: 1551307237.4579096
latency: 1.2781271934509277

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551307238.577867
response: b'HTTP/1.1 200\r\n\r\n7'
endTime: 1551307239.9247437
latency: 1.346876621246338

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551307240.801368
response: b'HTTP/1.1 200\r\n\r\n4'
endTime: 1551307242.5308764
latency: 1.729508399963379

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551307243.7189705
response: b'HTTP/1.1 200\r\n\r\n1'
endTime: 1551307244.9027264
latency: 1.183755874633789

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551307246.273455
response: b'HTTP/1.1 200\r\n\r\n6'
endTime: 1551307248.1739995
latency: 1.9005446434020996

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551307249.342756
response: b'HTTP/1.1 200\r\n\r\n1'
endTime: 1551307250.566804
latency: 1.2240478992462158

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551307251.9752052
response: b'HTTP/1.1 200\r\n\r\n4'
endTime: 1551307253.7579858
latency: 1.782780647277832

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551307261.0942407
response: b'HTTP/1.1 200\r\n\r\n{"id":4354,"url":"https://splashbase.s3.amazonaws.com/snapwiresnaps/regular/tumblr_nrt6732vkb1teue7jo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/snapwiresnaps/large/tumblr_nrt6732vkb1teue7jo1_1280.jpg","source_id":null,"copyright":"CC0","site":"snapwiresnaps"}'
endTime: 1551307263.2050345
latency: 2.1107938289642334

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551307265.9068742
response: b'HTTP/1.1 200\r\n\r\n5'
endTime: 1551307267.0908449
latency: 1.1839706897735596

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551307268.6743178
response: b'HTTP/1.1 200\r\n\r\n{"id":4860,"url":"https://splashbase.s3.amazonaws.com/splitshire/regular/768x506xPhotoDune-6256-768x506.jpg.pagespeed.ic.ppf6MSt9cS.jpg","large_url":"https://splashbase.s3.amazonaws.com/splitshire/large/768x506xPhotoDune-6256-768x506.jpg.pagespeed.ic.ppf6MSt9cS.jpg","source_id":null,"copyright":"CC0","site":"splitshire"}'
endTime: 1551307271.0266745
latency: 2.3523566722869873

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551307271.8834805
response: b'HTTP/1.1 200\r\n\r\n{"id":2338,"url":"https://splashbase.s3.amazonaws.com/jaymantri/regular/tumblr_ng37kbjFNO1qfirfao1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/jaymantri/large/1vTma7V","source_id":null,"copyright":"CC0","site":"jaymantri"}'
endTime: 1551307273.7631068
latency: 1.8796262741088867

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551307670.2393682
response: b'HTTP/1.1 200\r\n\r\n9'
endTime: 1551307671.4396906
latency: 1.2003223896026611

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551307672.273574
response: b'HTTP/1.1 200\r\n\r\n10'
endTime: 1551307673.4089234
latency: 1.1353492736816406

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551307674.5195434
response: b'HTTP/1.1 200\r\n\r\n9'
endTime: 1551307675.628872
latency: 1.1093285083770752

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551307676.4252367
response: b'HTTP/1.1 200\r\n\r\n9'
endTime: 1551307677.5694551
latency: 1.1442184448242188

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551307678.9633715
response: b'HTTP/1.1 200\r\n\r\n2'
endTime: 1551307680.245052
latency: 1.2816805839538574

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311547.0969694
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551311548.942037
latency: 1.8450677394866943

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311550.651467
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551311552.5473979
latency: 1.8959307670593262

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311563.4724405
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551311564.3333151
latency: 0.8608746528625488

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311565.3603983
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551311566.774278
latency: 1.413879632949829

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311614.5233512
request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311616.228016
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551311617.1086617
latency: 0.880645751953125

response: b'HTTP/1.1 200\r\n\r\n{"id":8502,"url":"https://splashbase.s3.amazonaws.com/moveast/regular/tumblr_oel30o5E351tomxvuo3_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/moveast/large/tumblr_oel30o5E351tomxvuo3_1280.jpg","source_id":null,"copyright":"CC0","site":"moveast"}'
endTime: 1551311619.2010067
latency: 4.677655458450317

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311625.0611968
response: b'HTTP/1.1 200\r\n\r\n{"id":6315,"url":"https://splashbase.s3.amazonaws.com/moveast/regular/tumblr_o5xzdd02Po1tomxvuo4_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/moveast/large/tumblr_o5xzdd02Po1tomxvuo4_1280.jpg","source_id":null,"copyright":"CC0","site":"moveast"}'
endTime: 1551311626.8238258
latency: 1.7626290321350098

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311627.602963
response: b'HTTP/1.1 200\r\n\r\n{"id":2609,"url":"https://splashbase.s3.amazonaws.com/moveast/regular/tumblr_ng9pglOwz01tomxvuo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/moveast/large/tumblr_ng9pglOwz01tomxvuo1_1280.jpg","source_id":null,"copyright":"CC0","site":"moveast"}'
endTime: 1551311629.905513
latency: 2.3025500774383545

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311631.0115
response: b'HTTP/1.1 200\r\n\r\n{"id":5527,"url":"https://splashbase.s3.amazonaws.com/splitshire/regular/SplitShire_IMG_5544preview-384x253.jpg","large_url":"https://splashbase.s3.amazonaws.com/splitshire/large/SplitShire_IMG_5544preview-384x253.jpg","source_id":null,"copyright":"CC0","site":"splitshire"}'
endTime: 1551311632.8226693
latency: 1.8111693859100342

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311634.511896
response: b'HTTP/1.1 200\r\n\r\n{"id":1294,"url":"https://splashbase.s3.amazonaws.com/mazwai/regular/kelly_kerr--the_land_of_enchantment.mp4%3F1402540330","large_url":"https://splashbase.s3.amazonaws.com/mazwai/large/kelly_kerr--the_land_of_enchantment.mp4%3F1402540330","source_id":366,"copyright":"CC 3.0","site":"mazwai"}'
endTime: 1551311636.6660914
latency: 2.154195547103882

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311637.8545895
response: b'HTTP/1.1 200\r\n\r\n{"id":8434,"url":"https://splashbase.s3.amazonaws.com/travelcoffeebook/regular/tumblr_oqft68B1K21ta0hnbo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/travelcoffeebook/large/tumblr_oqft68B1K21ta0hnbo1_1280.jpg","source_id":null,"copyright":"CC0","site":"travelcoffeebook"}'
endTime: 1551311640.3222888
latency: 2.4676992893218994

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311641.1813571
response: b'HTTP/1.1 200\r\n\r\n{"id":4925,"url":"https://splashbase.s3.amazonaws.com/splitshire/regular/768x506xSplitShire_IMG_6845-e1450310167208-768x506.jpg.pagespeed.ic.keizNTYLCm.jpg","large_url":"https://splashbase.s3.amazonaws.com/splitshire/large/768x506xSplitShire_IMG_6845-e1450310167208-768x506.jpg.pagespeed.ic.keizNTYLCm.jpg","source_id":null,"copyright":"CC0","site":"splitshire"}'
endTime: 1551311642.806388
latency: 1.625030755996704

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311643.8886356
response: b'HTTP/1.1 200\r\n\r\n{"id":1018,"url":"https://splashbase.s3.amazonaws.com/getrefe/regular/tumblr_na5imjT8Vy1slhhf0o1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/getrefe/large/14887502515_5b56a4565a_o.jpg","source_id":314,"copyright":"CC0","site":"getrefe"}'
endTime: 1551311645.6660116
latency: 1.7773759365081787

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311646.4293313
response: b'HTTP/1.1 200\r\n\r\n{"id":8045,"url":"https://splashbase.s3.amazonaws.com/splitshire/regular/SplitShire-1087-384x253.jpg","large_url":"https://splashbase.s3.amazonaws.com/splitshire/large/SplitShire-1087-384x253.jpg","source_id":null,"copyright":"CC0","site":"splitshire"}'
endTime: 1551311648.3857014
latency: 1.9563701152801514

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311698.0752997
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551311698.9124227
latency: 0.837122917175293

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311701.0423987
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311701.7630699
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551311701.9823368
latency: 0.2192668914794922

response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551311701.9823368
latency: 0.9399380683898926

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311703.3380344
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551311704.1770885
latency: 0.8390541076660156

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311809.0288148
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551311809.9158862
latency: 0.8870713710784912

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311810.8290482
request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311811.3386862
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551311812.0119216
latency: 1.1828734874725342

response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551311812.0119216
latency: 0.6732354164123535

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311814.4088676
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551311815.2308946
latency: 0.8220269680023193

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311842.459225
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="tryItBtn">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let tryItBtn = document.getElementById("tryItBtn")\n        tryItBtn.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551311843.3617966
latency: 0.9025716781616211

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311844.2504203
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551311845.1570885
latency: 0.9066681861877441

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311849.630004
response: b'HTTP/1.1 200\r\n\r\n{"id":1970,"url":"https://splashbase.s3.amazonaws.com/unsplash/regular/fall-in-to-the-gap.JPG%3Ffit%3Dcrop%26fm%3Djpg%26h%3D650%26q%3D75%26w%3D950","large_url":null,"source_id":630,"copyright":"CC0","site":"unsplash"}'
endTime: 1551311851.7597136
latency: 2.1297097206115723

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311855.7089975
response: b'HTTP/1.1 200\r\n\r\n{"id":3798,"url":"https://splashbase.s3.amazonaws.com/lifeofpix/regular/Life-of-Pix-free-stock-photos-seagull-harbour-sea-boats-beachmuser.jpg","large_url":"https://splashbase.s3.amazonaws.com/lifeofpix/large/Life-of-Pix-free-stock-photos-seagull-harbour-sea-boats-beachmuser.jpg","source_id":null,"copyright":"CC0","site":"lifeofpix"}'
endTime: 1551311857.417827
latency: 1.708829402923584

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311858.6052938
response: b'HTTP/1.1 200\r\n\r\n{"id":2631,"url":"https://splashbase.s3.amazonaws.com/moveast/regular/tumblr_ngy6e7dT7y1tomxvuo6_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/moveast/large/tumblr_ngy6e7dT7y1tomxvuo6_1280.jpg","source_id":null,"copyright":"CC0","site":"moveast"}'
endTime: 1551311860.3884492
latency: 1.7831554412841797

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311861.9946642
response: b'HTTP/1.1 200\r\n\r\n{"id":6966,"url":"https://splashbase.s3.amazonaws.com/splitshire/regular/splitshire-london-collection-200031-768x506.jpg","large_url":"https://splashbase.s3.amazonaws.com/splitshire/large/splitshire-london-collection-200031-768x506.jpg","source_id":null,"copyright":"CC0","site":"splitshire"}'
endTime: 1551311864.3302703
latency: 2.335606098175049

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551311865.5827916
response: b'HTTP/1.1 200\r\n\r\n{"id":4777,"url":"https://splashbase.s3.amazonaws.com/snapwiresnaps/regular/tumblr_nyn2jw8fzB1teue7jo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/snapwiresnaps/large/tumblr_nyn2jw8fzB1teue7jo1_1280.jpg","source_id":null,"copyright":"CC0","site":"snapwiresnaps"}'
endTime: 1551311867.3926818
latency: 1.8098902702331543

request: b''
startTime: 1551312001.3531373
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312001.6543946
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551312002.2896216
latency: 0.6352269649505615

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312003.2081683
request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312003.6874099
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551312004.922591
latency: 1.7144227027893066

response: b'HTTP/1.1 200\r\n\r\n{"id":1419,"url":"https://splashbase.s3.amazonaws.com/jaymantri/regular/tumblr_nc4ls7PYcV1qfirfao1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/jaymantri/large/XPhL84","source_id":null,"copyright":"CC0","site":"jaymantri"}'
endTime: 1551312006.8622944
latency: 3.174884557723999

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 7\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"id=31"'
startTime: 1551312086.6360745
response: b'HTTP/1.1 200\r\n\r\nhttps://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mp6scv2xrZ1st5lhmo1_1280.jpg'
endTime: 1551312088.0377803
latency: 1.4017057418823242

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 9\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"id=3131"'
startTime: 1551312194.0350308
response: b'HTTP/1.1 200\r\n\r\nhttps://splashbase.s3.amazonaws.com/jaymantri/regular/tumblr_niyki1GD161qfirfao1_1280.jpg'
endTime: 1551312195.2084494
latency: 1.1734185218811035

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312241.9453323
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551312242.8688605
latency: 0.9235281944274902

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312243.8103454
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551312244.6914785
latency: 0.8811330795288086

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 7\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"id=12"'
startTime: 1551312246.0914958
response: b'HTTP/1.1 200\r\n\r\nhttps://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mo2wz2LTCs1st5lhmo1_1280.jpg'
endTime: 1551312248.0976205
latency: 2.00612473487854

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312312.9493542
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551312313.8788693
latency: 0.9295151233673096

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312314.825338
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551312315.7256842
latency: 0.9003462791442871

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 7\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"id=31"'
startTime: 1551312317.64862
response: b'HTTP/1.1 200\r\n\r\nhttps://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mp6scv2xrZ1st5lhmo1_1280.jpg'
endTime: 1551312319.4414506
latency: 1.7928307056427002

request: b''
startTime: 1551312337.308567
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312354.111799
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551312355.1070976
latency: 0.9952986240386963

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312356.1273696
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551312357.014
latency: 0.8866302967071533

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312363.3333719
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log("duration: ", duration)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551312364.2658787
latency: 0.932506799697876

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312365.196455
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551312366.9466867
latency: 1.7502317428588867

request: b'POST /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 7\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n"id=31"'
startTime: 1551312367.4934685
response: b'HTTP/1.1 200\r\n\r\nhttps://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mp6scv2xrZ1st5lhmo1_1280.jpg'
endTime: 1551312368.726614
latency: 1.2331454753875732

request: b'\x16\x03\x01\x02\x00\x01\x00\x01\xfc\x03\x03\xb9\x17e\x99\x1a\xec\\c\xba\xc8\x82g\xfe\xdd\xa1\x882\xd2\xa8\x95G\x94\xb4\xb1~\xe4\x1c\x18\x1c\xdc\x94\xf3 \x019\xd5K\' m~\x14\xca\x88\xac\xc7(\xac6\x9d\x03\xb6\x18\x04>\x03\xd2\x8f\x03\x02\x8eLw\x9b\xe4\x00"\x1a\x1a\x13\x01\x13\x02\x13\x03\xc0+\xc0/\xc0,\xc00\xcc\xa9\xcc\xa8\xc0\x13\xc0\x14\x00\x9c\x00\x9d\x00/\x005\x00\n\x01\x00\x01\x91\x9a\x9a\x00\x00\x00\x00\x00\x0e\x00\x0c\x00\x00\tlocalhost\x00\x17\x00\x00\xff\x01\x00\x01\x00\x00\n\x00\n\x00\x08\xca\xca\x00\x1d\x00\x17\x00\x18\x00\x0b\x00\x02\x01\x00\x00#\x00\x00\x00\x10\x00\x0e\x00\x0c\x02h2\x08http/1.1\x00\x05\x00\x05\x01\x00\x00\x00\x00\x00\r\x00\x14\x00\x12\x04\x03\x08\x04\x04\x01\x05\x03\x08\x05\x05\x01\x08\x06\x06\x01\x02\x01\x00\x12\x00\x00\x003\x00+\x00)\xca\xca\x00\x01\x00\x00\x1d\x00 \xe2\xdc\x99\xdbW\xeb\xe8p\xe6mz\x99\x8d\xe8\xb0\x9bl\x83]\xea\xc5\xa7\x0fz\xd2\xb9>(\xd9\t\xf2\x1d\x00-\x00\x02\x01\x01\x00+\x00\x0b\nzz\x03\x04\x03\x03\x03\x02\x03\x01\x00\x1b\x00\x03\x02\x00\x02JJ\x00\x01\x00\x00\x15\x00\xcf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
startTime: 1551312496.3102572
request: b'\x16\x03\x01\x00\xc3\x01\x00\x00\xbf\x03\x03\xce\x12\x19\xceZE\x86\xa0oc\x0e\x9f\x16q\xb81\xe1\xc3\x8e\x94\xb8\xd0\x8574aXH\xd6\xe7\xa9\xfd\x00\x00\x1c\xba\xba\xc0+\xc0/\xc0,\xc00\xcc\xa9\xcc\xa8\xc0\x13\xc0\x14\x00\x9c\x00\x9d\x00/\x005\x00\n\x01\x00\x00zJJ\x00\x00\x00\x00\x00\x0e\x00\x0c\x00\x00\tlocalhost\x00\x17\x00\x00\xff\x01\x00\x01\x00\x00\n\x00\n\x00\x08::\x00\x1d\x00\x17\x00\x18\x00\x0b\x00\x02\x01\x00\x00#\x00\x00\x00\x10\x00\x0e\x00\x0c\x02h2\x08http/1.1\x00\x05\x00\x05\x01\x00\x00\x00\x00\x00\r\x00\x14\x00\x12\x04\x03\x08\x04\x04\x01\x05\x03\x08\x05\x05\x01\x08\x06\x06\x01\x02\x01\x00\x12\x00\x00\x00\x1b\x00\x03\x02\x00\x02\x9a\x9a\x00\x01\x00'
startTime: 1551312497.516138
request: b'\x16\x03\x01\x02\x00\x01\x00\x01\xfc\x03\x03L)\xa6\x8b69\xee5\xdbX\xc8\xb5$\x15P\x8a\xa2\xcf\x84G\xb8f\tG\xa67<\x867\xea\x1a\n \xd2k\xf1\xe2[j\x1aaF\xf7\xd7Wo\x99@9\xa7\x99\x87\x06"\xeb\xb9\xfaA4\xa9\xf5\x1d\xea\xef\xec\x00"\x1a\x1a\x13\x01\x13\x02\x13\x03\xc0+\xc0/\xc0,\xc00\xcc\xa9\xcc\xa8\xc0\x13\xc0\x14\x00\x9c\x00\x9d\x00/\x005\x00\n\x01\x00\x01\x91\xba\xba\x00\x00\x00\x00\x00\x0e\x00\x0c\x00\x00\tlocalhost\x00\x17\x00\x00\xff\x01\x00\x01\x00\x00\n\x00\n\x00\x08jj\x00\x1d\x00\x17\x00\x18\x00\x0b\x00\x02\x01\x00\x00#\x00\x00\x00\x10\x00\x0e\x00\x0c\x02h2\x08http/1.1\x00\x05\x00\x05\x01\x00\x00\x00\x00\x00\r\x00\x14\x00\x12\x04\x03\x08\x04\x04\x01\x05\x03\x08\x05\x05\x01\x08\x06\x06\x01\x02\x01\x00\x12\x00\x00\x003\x00+\x00)jj\x00\x01\x00\x00\x1d\x00 \xce\xc1l\xe7\x8bW\x97U\xcd\x07\xb2\x96\x8b~I~\xb9\x1d\x80V\xc4\xe8\x85Ob\x1b\xaek\x9e+\x13%\x00-\x00\x02\x01\x01\x00+\x00\x0b\n\x8a\x8a\x03\x04\x03\x03\x03\x02\x03\x01\x00\x1b\x00\x03\x02\x00\x02\xaa\xaa\x00\x01\x00\x00\x15\x00\xcf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
startTime: 1551312498.6421294
request: b"\x16\x03\x01\x00\xc3\x01\x00\x00\xbf\x03\x03i\x00\xac{\xb8'\xf6\xc4:l@\x96#g`/\xe3d_O\x8a\xed8\xe6\x1e\xf7C{%!\x1e\xd8\x00\x00\x1c\x8a\x8a\xc0+\xc0/\xc0,\xc00\xcc\xa9\xcc\xa8\xc0\x13\xc0\x14\x00\x9c\x00\x9d\x00/\x005\x00\n\x01\x00\x00z\xea\xea\x00\x00\x00\x00\x00\x0e\x00\x0c\x00\x00\tlocalhost\x00\x17\x00\x00\xff\x01\x00\x01\x00\x00\n\x00\n\x00\x08\xea\xea\x00\x1d\x00\x17\x00\x18\x00\x0b\x00\x02\x01\x00\x00#\x00\x00\x00\x10\x00\x0e\x00\x0c\x02h2\x08http/1.1\x00\x05\x00\x05\x01\x00\x00\x00\x00\x00\r\x00\x14\x00\x12\x04\x03\x08\x04\x04\x01\x05\x03\x08\x05\x05\x01\x08\x06\x06\x01\x02\x01\x00\x12\x00\x00\x00\x1b\x00\x03\x02\x00\x02::\x00\x01\x00"
startTime: 1551312500.282742
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312562.9904609
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log(requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`duration: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551312563.9927716
latency: 1.0023107528686523

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312564.92827
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551312565.7743063
latency: 0.8460361957550049

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312566.7305207
response: b'HTTP/1.1 200\r\n\r\n{"id":7748,"url":"https://splashbase.s3.amazonaws.com/splitshire/regular/SplitShire-04326-384x253.jpg","large_url":"https://splashbase.s3.amazonaws.com/splitshire/large/SplitShire-04326-384x253.jpg","source_id":null,"copyright":"CC0","site":"splitshire"}'
endTime: 1551312570.0588958
latency: 3.3283751010894775

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312595.3151944
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551312596.2786193
latency: 0.9634249210357666

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312597.1891851
request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312597.5307572
response: b'HTTP/1.1 200\r\n\r\n{"id":750,"url":"https://splashbase.s3.amazonaws.com/littlevisuals/regular/tumblr_mu64p2yVeF1sdyj9lo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/littlevisuals/large/18YZhE6","source_id":null,"copyright":"CC0","site":"littlevisuals"}'
endTime: 1551312598.7325568
latency: 1.5433716773986816

response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551312599.0068245
latency: 1.476067304611206

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312602.567293
response: b'HTTP/1.1 200\r\n\r\n{"id":7057,"url":"https://splashbase.s3.amazonaws.com/getrefe/regular/tumblr_oc8ydhEq9v1slhhf0o1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/getrefe/large/rRre3VMD","source_id":1652,"copyright":"CC0","site":"getrefe"}'
endTime: 1551312606.132181
latency: 3.5648880004882812

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 28\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"","resource":""}'
startTime: 1551312628.4624143
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312706.8149855
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551312707.7445023
latency: 0.9295167922973633

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312708.7068377
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551312709.5847204
latency: 0.877882719039917

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 28\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"","resource":""}'
startTime: 1551312731.7296286
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312767.0285237
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551312768.060763
latency: 1.0322391986846924

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312769.057101
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 28\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"","resource":""}'
startTime: 1551312769.524301
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551312770.44481
latency: 1.3877089023590088

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312836.3287916
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551312837.2934833
latency: 0.9646916389465332

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312838.244929
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551312839.121884
latency: 0.8769550323486328

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 28\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"","resource":""}'
startTime: 1551312839.5123653
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551312841.3096986
latency: 1.7973332405090332

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 28\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"","resource":""}'
startTime: 1551312872.8426673
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551312874.167536
latency: 1.3248686790466309

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312892.4820423
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551312893.648958
latency: 1.1669156551361084

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312895.002469
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551312896.3185997
latency: 1.3161306381225586

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 28\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"","resource":""}'
startTime: 1551312896.5373032
response: b'HTTP/1.1 200\r\n\r\n'
endTime: 1551312898.96967
latency: 2.4323668479919434

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312917.2489746
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.target\n                console.log("brute ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.target.response\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551312918.2413208
latency: 0.9923462867736816

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551312919.2197077
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 28\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"","resource":""}'
startTime: 1551312920.1228306
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551312920.7511332
latency: 1.5314254760742188

response: b'HTTP/1.1 200\r\n\r\nno file selected'
endTime: 1551312921.2574105
latency: 1.1345798969268799

request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 28\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"","resource":""}'
startTime: 1551312927.0052307
response: b'HTTP/1.1 200\r\n\r\nno file selected'
endTime: 1551312928.2368784
latency: 1.2316477298736572

request: b''
startTime: 1551313085.7792852
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313086.0805361
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.srcElement\n                console.log("res ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n                \n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.srcElement.response\n                let requestEndTime = Date.now()\n                let duration = requestEndTime - requestStartTime\n                console.log(`latency: ${duration}ms`)\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551313086.7986374
latency: 0.7181012630462646

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313086.9232275
request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313088.1306636
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551313089.5804503
latency: 1.44978666305542

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313091.9255257
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313112.8752947
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313113.0817547
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313113.2767963
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313113.4389746
response: b'HTTP/1.1 200\r\n\r\n10'
endTime: 1551313130.1418958
latency: 43.21866822242737

response: b'HTTP/1.1 200\r\n\r\n8'
endTime: 1551313135.258223
latency: 43.33269739151001

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313136.4898157
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313147.4815438
response: b'HTTP/1.1 200\r\n\r\n8'
endTime: 1551313156.1773756
latency: 43.09562087059021

response: b'HTTP/1.1 200\r\n\r\n7'
endTime: 1551313156.1893454
latency: 43.31405067443848

response: b'HTTP/1.1 200\r\n\r\n3'
endTime: 1551313156.229238
latency: 42.952441692352295

response: b'HTTP/1.1 200\r\n\r\n4'
endTime: 1551313156.238213
latency: 42.799238443374634

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313157.4832325
response: b'HTTP/1.1 200\r\n\r\n3'
endTime: 1551313179.8351717
latency: 43.34535598754883

response: b'HTTP/1.1 200\r\n\r\n9'
endTime: 1551313190.716155
latency: 43.23461127281189

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313200.3996894
response: b'HTTP/1.1 200\r\n\r\n2'
endTime: 1551313200.8395545
latency: 43.356322050094604

response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.srcElement\n                console.log("res ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n                \n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("randomBtn").innerText = event.tar.response\n                let requestEndTime = Date.now()\n                let duration = requestEndTime - requestStartTime\n                console.log(`latency: ${duration}ms`)\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551313201.4708245
latency: 1.0711350440979004

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313202.766441
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551313203.918388
latency: 1.151946783065796

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313205.1282408
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313240.5897012
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.srcElement\n                console.log("res ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n                \n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("randomBtn").innerText = event.scrElement.response\n                let requestEndTime = Date.now()\n                let duration = requestEndTime - requestStartTime\n                console.log(`latency: ${duration}ms`)\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551313241.6408882
latency: 1.0511870384216309

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313242.9613938
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551313244.6111155
latency: 1.649721622467041

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313246.0230167
response: b'HTTP/1.1 200\r\n\r\n1'
endTime: 1551313248.1471076
latency: 43.018866777420044

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313271.4349144
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313275.0120695
response: b'HTTP/1.1 200\r\n\r\n9'
endTime: 1551313288.4550846
latency: 42.43206787109375

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313289.7014914
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313300.9645948
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313302.1524553
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313314.085472
response: b'HTTP/1.1 200\r\n\r\n9'
endTime: 1551313314.771634
latency: 43.33671975135803

response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.srcElement\n                console.log("res ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n                \n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("randomBtn").innerText = event.srcElement.response\n                let requestEndTime = Date.now()\n                let duration = requestEndTime - requestStartTime\n                console.log(`latency: ${duration}ms`)\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551313315.1655831
latency: 1.080111026763916

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313316.4464462
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313316.9014237
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551313317.7245636
latency: 1.2781174182891846

response: b'HTTP/1.1 200\r\n\r\n1'
endTime: 1551313318.4017131
latency: 43.38964366912842

response: b'HTTP/1.1 200\r\n\r\n9'
endTime: 1551313332.920955
latency: 43.21946358680725

response: b'HTTP/1.1 200\r\n\r\n6'
endTime: 1551313344.1499858
latency: 43.18539094924927

response: b'HTTP/1.1 200\r\n\r\n2'
endTime: 1551313345.4166877
latency: 43.26423239707947

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313349.3917222
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313356.8622732
response: b'HTTP/1.1 200\r\n\r\n4'
endTime: 1551313360.090334
latency: 43.188910245895386

response: b'HTTP/1.1 200\r\n\r\n5'
endTime: 1551313392.8053436
latency: 43.41362142562866

response: b'HTTP/1.1 200\r\n\r\n5'
endTime: 1551313400.2300062
latency: 43.367733001708984

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313420.967721
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.srcElement\n                console.log("res ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n                \n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.srcElement.response\n                let requestEndTime = Date.now()\n                let duration = requestEndTime - requestStartTime\n                console.log(`latency: ${duration}ms`)\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551313422.0668004
latency: 1.0990793704986572

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313423.1838183
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551313424.5942605
latency: 1.4104421138763428

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313426.4306412
response: b'HTTP/1.1 200\r\n\r\n6'
endTime: 1551313469.814218
latency: 43.3835768699646

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313701.115242
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.srcElement\n                console.log("res ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n                \n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.srcElement.response\n                let requestEndTime = Date.now()\n                let duration = requestEndTime - requestStartTime\n                console.log(`latency: ${duration}ms`)\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551313702.20238
latency: 1.0871379375457764

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551313703.389141
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551313705.4586432
latency: 2.069502115249634

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314222.0774457
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.srcElement\n                console.log("res ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n                \n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.srcElement.response\n                let requestEndTime = Date.now()\n                let duration = requestEndTime - requestStartTime\n                console.log(`latency: ${duration}ms`)\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551314223.124602
latency: 1.0471563339233398

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314223.5182269
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.srcElement\n                console.log("res ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n                \n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.srcElement.response\n                let requestEndTime = Date.now()\n                let duration = requestEndTime - requestStartTime\n                console.log(`latency: ${duration}ms`)\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551314224.3141344
latency: 0.7959074974060059

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314226.8541062
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.srcElement\n                console.log("res ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n                \n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.srcElement.response\n                let requestEndTime = Date.now()\n                let duration = requestEndTime - requestStartTime\n                console.log(`latency: ${duration}ms`)\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551314227.9541652
latency: 1.1000590324401855

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314229.6980057
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551314232.1683276
latency: 2.4703218936920166

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314479.8931131
response: b'HTTP/1.1 200\r\n\r\n{"id":8000,"url":"https://splashbase.s3.amazonaws.com/splitshire/regular/SplitShire-3693-384x253.jpg","large_url":"https://splashbase.s3.amazonaws.com/splitshire/large/SplitShire-3693-384x253.jpg","source_id":null,"copyright":"CC0","site":"splitshire"}'
endTime: 1551314482.1476886
latency: 2.254575490951538

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314556.4109132
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.srcElement\n                console.log("res ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n                \n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.srcElement.response\n                let requestEndTime = Date.now()\n                let duration = requestEndTime - requestStartTime\n                console.log(`latency: ${duration}ms`)\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551314557.5648751
latency: 1.1539618968963623

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314558.5988808
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551314560.2955368
latency: 1.6966559886932373

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314565.4743505
response: b'HTTP/1.1 200\r\n\r\n{"id":6329,"url":"https://splashbase.s3.amazonaws.com/moveast/regular/tumblr_o5y039e0vg1tomxvuo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/moveast/large/tumblr_o5y039e0vg1tomxvuo1_1280.jpg","source_id":null,"copyright":"CC0","site":"moveast"}'
endTime: 1551314568.0625029
latency: 2.5881524085998535

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314600.0894735
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.srcElement\n                console.log("res ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n                \n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.srcElement.response\n                let requestEndTime = Date.now()\n                let duration = requestEndTime - requestStartTime\n                console.log(`latency: ${duration}ms`)\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551314601.2135148
latency: 1.1240413188934326

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314602.3025575
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551314603.263629
latency: 0.9610714912414551

request: b'GET /getImage HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314605.0817006
response: b'HTTP/1.1 200\r\n\r\n{"id":8221,"url":"https://splashbase.s3.amazonaws.com/splitshire/regular/SplitShire-9300-384x253.jpg","large_url":"https://splashbase.s3.amazonaws.com/splitshire/large/SplitShire-9300-384x253.jpg","source_id":null,"copyright":"CC0","site":"splitshire"}'
endTime: 1551314606.9358473
latency: 1.8541467189788818

request: b'GET /metrics HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314624.53179
request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314646.2413075
request: b'GET /metrics HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314646.9454272
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.srcElement\n                console.log("res ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n                \n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.srcElement.response\n                let requestEndTime = Date.now()\n                let duration = requestEndTime - requestStartTime\n                console.log(`latency: ${duration}ms`)\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551314647.2905781
latency: 1.0492706298828125

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314648.7141035
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551314651.091444
latency: 2.37734055519104

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314712.3545148
request: b'GET /metrics HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314713.223194
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.srcElement\n                console.log("res ", responseObj.response)\n                let res = JSON.parse(responseObj.response)\n                console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n                \n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.srcElement.response\n                let requestEndTime = Date.now()\n                let duration = requestEndTime - requestStartTime\n                console.log(`latency: ${duration}ms`)\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551314713.4117646
latency: 1.0572497844696045

response: b'HTTP/1.1 200\r\n\r\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: \'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551255154.2681794endTime: 1551255196.6737728\nresponse: \'{"jsonrpc":"2.0","result":{"random":{"data":[7],"completionTime":"2019-02-26 22:13:15Z"},"bitsUsed":3,"bitsLeft":249901,"requestsLeft":967,"advisoryDelay":680},"id":13}\'\nlatency: 42.405593395233154serviceUrl: http://www.splashbase.co/api/v1/images/{id}\ndata: \'\'\nstartTime: 1551255196.6737728endTime: 1551255197.0816076\nresponse: \'{"jsonrpc":"2.0","result":{"random":{"data":[7],"completionTime":"2019-02-26 22:13:15Z"},"bitsUsed":3,"bitsLeft":249901,"requestsLeft":967,"advisoryDelay":680},"id":13}\'\nlatency: 0.4078347682952881serviceUrl: https://www.virustotal.com/vtapi/v2/file/scan\ndata: \'\'\nstartTime: 1551255198.2565494endTime: 1551255199.4865198\nresponse: <Response [200]>\nlatency: 1.2299704551696777serviceUrl: https://api.random.org/json-rpc/2/invoke'
endTime: 1551314713.4126873
latency: 0.18949341773986816

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314715.4678314
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551314717.041404
latency: 1.5735726356506348

request: b'GET /metrics HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314723.6942832
response: b'HTTP/1.1 200\r\n\r\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: \'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551255154.2681794endTime: 1551255196.6737728\nresponse: \'{"jsonrpc":"2.0","result":{"random":{"data":[7],"completionTime":"2019-02-26 22:13:15Z"},"bitsUsed":3,"bitsLeft":249901,"requestsLeft":967,"advisoryDelay":680},"id":13}\'\nlatency: 42.405593395233154serviceUrl: http://www.splashbase.co/api/v1/images/{id}\ndata: \'\'\nstartTime: 1551255196.6737728endTime: 1551255197.0816076\nresponse: \'{"jsonrpc":"2.0","result":{"random":{"data":[7],"completionTime":"2019-02-26 22:13:15Z"},"bitsUsed":3,"bitsLeft":249901,"requestsLeft":967,"advisoryDelay":680},"id":13}\'\nlatency: 0.4078347682952881serviceUrl: https://www.virustotal.com/vtapi/v2/file/scan\ndata: \'\'\nstartTime: 1551255198.2565494endTime: 1551255199.4865198\nresponse: <Response [200]>\nlatency: 1.2299704551696777serviceUrl: https://api.random.org/json-rpc/2/invoke'
endTime: 1551314724.7747102
latency: 1.0804269313812256

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314758.0317326
request: b'GET /metrics HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314758.8924334
response: b'HTTP/1.1 200\r\n\r\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: \'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551255154.2681794endTime: 1551255196.6737728\nresponse: \'{"jsonrpc":"2.0","result":{"random":{"data":[7],"completionTime":"2019-02-26 22:13:15Z"},"bitsUsed":3,"bitsLeft":249901,"requestsLeft":967,"advisoryDelay":680},"id":13}\'\nlatency: 42.405593395233154serviceUrl: http://www.splashbase.co/api/v1/images/{id}\ndata: \'\'\nstartTime: 1551255196.6737728endTime: 1551255197.0816076\nresponse: \'{"jsonrpc":"2.0","result":{"random":{"data":[7],"completionTime":"2019-02-26 22:13:15Z"},"bitsUsed":3,"bitsLeft":249901,"requestsLeft":967,"advisoryDelay":680},"id":13}\'\nlatency: 0.4078347682952881serviceUrl: https://www.virustotal.com/vtapi/v2/file/scan\ndata: \'\'\nstartTime: 1551255198.2565494endTime: 1551255199.4865198\nresponse: <Response [200]>\nlatency: 1.2299704551696777serviceUrl: https://api.random.org/json-rpc/2/invoke'
endTime: 1551314759.127802
latency: 0.2353684902191162

response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.srcElement\n                console.log("res ", responseObj.response)\n                // let res = JSON.parse(responseObj.response)\n                // console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n                \n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.srcElement.response\n                let requestEndTime = Date.now()\n                let duration = requestEndTime - requestStartTime\n                console.log(`latency: ${duration}ms`)\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551314759.1288025
latency: 1.0970699787139893

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314760.5873773
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551314761.6559453
latency: 1.0685679912567139

request: b'GET /metrics HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314763.0446086
response: b'HTTP/1.1 200\r\n\r\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: \'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551255154.2681794endTime: 1551255196.6737728\nresponse: \'{"jsonrpc":"2.0","result":{"random":{"data":[7],"completionTime":"2019-02-26 22:13:15Z"},"bitsUsed":3,"bitsLeft":249901,"requestsLeft":967,"advisoryDelay":680},"id":13}\'\nlatency: 42.405593395233154serviceUrl: http://www.splashbase.co/api/v1/images/{id}\ndata: \'\'\nstartTime: 1551255196.6737728endTime: 1551255197.0816076\nresponse: \'{"jsonrpc":"2.0","result":{"random":{"data":[7],"completionTime":"2019-02-26 22:13:15Z"},"bitsUsed":3,"bitsLeft":249901,"requestsLeft":967,"advisoryDelay":680},"id":13}\'\nlatency: 0.4078347682952881serviceUrl: https://www.virustotal.com/vtapi/v2/file/scan\ndata: \'\'\nstartTime: 1551255198.2565494endTime: 1551255199.4865198\nresponse: <Response [200]>\nlatency: 1.2299704551696777serviceUrl: https://api.random.org/json-rpc/2/invoke'
endTime: 1551314763.8524508
latency: 0.8078422546386719

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nCache-Control: max-age=0\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314824.8070269
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.srcElement\n                console.log("response:", responseObj.response)\n                // let res = JSON.parse(responseObj.response)\n                // console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n                \n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.srcElement.response\n                let requestEndTime = Date.now()\n                let duration = requestEndTime - requestStartTime\n                console.log(`latency: ${duration}ms`)\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551314825.9120274
latency: 1.1050004959106445

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314826.9937532
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551314828.5654879
latency: 1.5717346668243408

request: b'GET /metrics HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551314828.7692676
response: b'HTTP/1.1 200\r\n\r\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306149.828609\n\nendTime: 1551306150.1150022\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[9],"completionTime":"2019-02-27 12:22:29Z"},"bitsUsed":3,"bitsLeft":249886,"requestsLeft":962,"advisoryDelay":1070},"id":13}\'\nlatency: 0.2863931655883789\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306152.0023475\n\nendTime: 1551306152.3021655\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[6],"completionTime":"2019-02-27 12:22:31Z"},"bitsUsed":3,"bitsLeft":249883,"requestsLeft":961,"advisoryDelay":1070},"id":13}\'\nlatency: 0.2998180389404297\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306154.519495\n\nendTime: 1551306154.8740764\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[5],"completionTime":"2019-02-27 12:22:33Z"},"bitsUsed":3,"bitsLeft":249880,"requestsLeft":960,"advisoryDelay":1140},"id":13}\'\nlatency: 0.354581356048584\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306156.9985178\n\nendTime: 1551306157.4945853\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[8],"completionTime":"2019-02-27 12:22:36Z"},"bitsUsed":3,"bitsLeft":249877,"requestsLeft":959,"advisoryDelay":1140},"id":13}\'\nlatency: 0.49606752395629883\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306159.3764746\n\nendTime: 1551306159.7264416\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[7],"completionTime":"2019-02-27 12:22:38Z"},"bitsUsed":3,"bitsLeft":249874,"requestsLeft":958,"advisoryDelay":1410},"id":13}\'\nlatency: 0.34996700286865234\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306162.2566235\n\nendTime: 1551306162.6300204\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[6],"completionTime":"2019-02-27 12:22:41Z"},"bitsUsed":3,"bitsLeft":249871,"requestsLeft":957,"advisoryDelay":1300},"id":13}\'\nlatency: 0.3733968734741211\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306165.0319903\n\nendTime: 1551306165.4197254\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[6],"completionTime":"2019-02-27 12:22:44Z"},"bitsUsed":3,"bitsLeft":249868,"requestsLeft":956,"advisoryDelay":1050},"id":13}\'\nlatency: 0.38773512840270996\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306167.358087\n\nendTime: 1551306167.6923234\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[2],"completionTime":"2019-02-27 12:22:46Z"},"bitsUsed":3,"bitsLeft":249865,"requestsLeft":955,"advisoryDelay":1050},"id":13}\'\nlatency: 0.33423638343811035\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306169.380646\n\nendTime: 1551306169.7678812\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[6],"completionTime":"2019-02-27 12:22:48Z"},"bitsUsed":3,"bitsLeft":249862,"requestsLeft":954,"advisoryDelay":1270},"id":13}\'\nlatency: 0.387235164642334\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306172.3791506\n\nendTime: 1551306172.7387512\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[2],"completionTime":"2019-02-27 12:22:51Z"},"bitsUsed":3,"bitsLeft":249859,"requestsLeft":953,"advisoryDelay":1250},"id":13}\'\nlatency: 0.3596005439758301\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306175.0140886\n\nendTime: 1551306175.3154533\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[6],"completionTime":"2019-02-27 12:22:54Z"},"bitsUsed":3,"bitsLeft":249856,"requestsLeft":952,"advisoryDelay":1310},"id":13}\'\nlatency: 0.3013646602630615\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306177.0240715\n\nendTime: 1551306177.3882906\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[4],"completionTime":"2019-02-27 12:22:56Z"},"bitsUsed":3,"bitsLeft":249853,"requestsLeft":951,"advisoryDelay":1310},"id":13}\'\nlatency: 0.36421918869018555\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306179.8428197\n\nendTime: 1551306180.1432774\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[10],"completionTime":"2019-02-27 12:22:59Z"},"bitsUsed":3,"bitsLeft":249850,"requestsLeft":950,"advisoryDelay":1310},"id":13}\'\nlatency: 0.3004577159881592\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306181.8400266\n\nendTime: 1551306182.1439703\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[10],"completionTime":"2019-02-27 12:23:01Z"},"bitsUsed":3,"bitsLeft":249847,"requestsLeft":949,"advisoryDelay":1450},"id":13}\'\nlatency: 0.3039436340332031\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306183.7773852\n\nendTime: 1551306184.1069028\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[4],"completionTime":"2019-02-27 12:23:03Z"},"bitsUsed":3,"bitsLeft":249844,"requestsLeft":948,"advisoryDelay":1450},"id":13}\'\nlatency: 0.3295176029205322\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306895.796925\n\nendTime: 1551306896.2223604\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[1],"completionTime":"2019-02-27 12:34:55Z"},"bitsUsed":3,"bitsLeft":249841,"requestsLeft":947,"advisoryDelay":560},"id":13}\'\nlatency: 0.42543530464172363\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306898.3100495\n\nendTime: 1551306898.7086105\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[8],"completionTime":"2019-02-27 12:34:57Z"},"bitsUsed":3,"bitsLeft":249838,"requestsLeft":946,"advisoryDelay":1100},"id":13}\'\nlatency: 0.3985610008239746\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306901.510292\n\nendTime: 1551306901.8620908\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[3],"completionTime":"2019-02-27 12:35:00Z"},"bitsUsed":3,"bitsLeft":249835,"requestsLeft":945,"advisoryDelay":1090},"id":13}\'\nlatency: 0.35179877281188965\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306903.9180725\n\nendTime: 1551306904.273325\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[7],"completionTime":"2019-02-27 12:35:03Z"},"bitsUsed":3,"bitsLeft":249832,"requestsLeft":944,"advisoryDelay":1090},"id":13}\'\nlatency: 0.3552525043487549\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306906.735054\n\nendTime: 1551306907.082299\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[9],"completionTime":"2019-02-27 12:35:06Z"},"bitsUsed":3,"bitsLeft":249829,"requestsLeft":943,"advisoryDelay":1000},"id":13}\'\nlatency: 0.3472449779510498\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306912.820617\n\nendTime: 1551306913.1065555\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[5],"completionTime":"2019-02-27 12:35:12Z"},"bitsUsed":3,"bitsLeft":249826,"requestsLeft":942,"advisoryDelay":920},"id":13}\'\nlatency: 0.2859385013580322\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306915.600587\n\nendTime: 1551306915.9538455\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[1],"completionTime":"2019-02-27 12:35:15Z"},"bitsUsed":3,"bitsLeft":249823,"requestsLeft":941,"advisoryDelay":1010},"id":13}\'\nlatency: 0.3532586097717285\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306917.991816\n\nendTime: 1551306918.2786002\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[7],"completionTime":"2019-02-27 12:35:17Z"},"bitsUsed":3,"bitsLeft":249820,"requestsLeft":940,"advisoryDelay":840},"id":13}\'\nlatency: 0.28678417205810547\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306919.9764776\n\nendTime: 1551306920.3793714\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[5],"completionTime":"2019-02-27 12:35:19Z"},"bitsUsed":3,"bitsLeft":249817,"requestsLeft":939,"advisoryDelay":770},"id":13}\'\nlatency: 0.4028937816619873\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306922.9348936\n\nendTime: 1551306923.261776\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[10],"completionTime":"2019-02-27 12:35:22Z"},"bitsUsed":3,"bitsLeft":249814,"requestsLeft":938,"advisoryDelay":770},"id":13}\'\nlatency: 0.32688236236572266\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306924.9862413\n\nendTime: 1551306925.3199008\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[8],"completionTime":"2019-02-27 12:35:24Z"},"bitsUsed":3,"bitsLeft":249811,"requestsLeft":937,"advisoryDelay":1250},"id":13}\'\nlatency: 0.33365941047668457\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306928.2483644\n\nendTime: 1551306928.540204\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[3],"completionTime":"2019-02-27 12:35:27Z"},"bitsUsed":3,"bitsLeft":249808,"requestsLeft":936,"advisoryDelay":1310},"id":13}\'\nlatency: 0.291839599609375\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306930.1763756\n\nendTime: 1551306930.487013\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[10],"completionTime":"2019-02-27 12:35:29Z"},"bitsUsed":3,"bitsLeft":249805,"requestsLeft":935,"advisoryDelay":1310},"id":13}\'\nlatency: 0.3106374740600586\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306932.9713058\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306932.9713058\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306932.9713058\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306932.9713058\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306932.9713058\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306933.0025437\n\nendTime: 1551306933.3229845\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[2],"completionTime":"2019-02-27 12:35:32Z"},"bitsUsed":3,"bitsLeft":249802,"requestsLeft":934,"advisoryDelay":660},"id":13}\'\nlatency: 0.35167860984802246\n\nendTime: 1551306933.338149\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[7],"completionTime":"2019-02-27 12:35:32Z"},"bitsUsed":3,"bitsLeft":249799,"requestsLeft":933,"advisoryDelay":660},"id":13}\'\nlatency: 0.36684322357177734\n\nendTime: 1551306933.3538055\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[5],"completionTime":"2019-02-27 12:35:32Z"},"bitsUsed":3,"bitsLeft":249796,"requestsLeft":932,"advisoryDelay":1680},"id":13}\'\nlatency: 0.35126185417175293\n\nendTime: 1551306933.3538055\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[4],"completionTime":"2019-02-27 12:35:32Z"},"bitsUsed":3,"bitsLeft":249793,"requestsLeft":931,"advisoryDelay":1680},"id":13}\'\nlatency: 0.38249969482421875\n\nendTime: 1551306933.369391\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[8],"completionTime":"2019-02-27 12:35:32Z"},"bitsUsed":3,"bitsLeft":249790,"requestsLeft":930,"advisoryDelay":1680},"id":13}\'\nlatency: 0.3980851173400879\n\nendTime: 1551306933.4006708\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[1],"completionTime":"2019-02-27 12:35:32Z"},"bitsUsed":3,"bitsLeft":249787,"requestsLeft":929,"advisoryDelay":1680},"id":13}\'\nlatency: 0.4293649196624756\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306935.589284\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306935.589284\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306935.589284\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306935.589284\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306935.589284\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306935.604872\n\nendTime: 1551306935.9105449\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[8],"completionTime":"2019-02-27 12:35:34Z"},"bitsUsed":3,"bitsLeft":249784,"requestsLeft":928,"advisoryDelay":680},"id":13}\'\nlatency: 0.30567288398742676\n\nendTime: 1551306935.9105449\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[4],"completionTime":"2019-02-27 12:35:34Z"},"bitsUsed":3,"bitsLeft":249781,"requestsLeft":927,"advisoryDelay":680},"id":13}\'\nlatency: 0.321260929107666\n\nendTime: 1551306935.9411774\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[1],"completionTime":"2019-02-27 12:35:35Z"},"bitsUsed":3,"bitsLeft":249778,"requestsLeft":926,"advisoryDelay":1630},"id":13}\'\nlatency: 0.35189342498779297\n\nendTime: 1551306935.9411774\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[5],"completionTime":"2019-02-27 12:35:35Z"},"bitsUsed":3,"bitsLeft":249775,"requestsLeft":925,"advisoryDelay":1630},"id":13}\'\nlatency: 0.35189342498779297\n\nendTime: 1551306935.9567602\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[10],"completionTime":"2019-02-27 12:35:35Z"},"bitsUsed":3,"bitsLeft":249769,"requestsLeft":923,"advisoryDelay":1630},"id":13}\'\nlatency: 0.367476224899292\n\nendTime: 1551306935.9567602\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[8],"completionTime":"2019-02-27 12:35:35Z"},"bitsUsed":3,"bitsLeft":249772,"requestsLeft":924,"advisoryDelay":1630},"id":13}\'\nlatency: 0.367476224899292\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306937.8284006\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306937.8284006\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306937.827405\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306937.827405\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306937.8293986\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306937.8293986\n\nendTime: 1551306938.1585555\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[4],"completionTime":"2019-02-27 12:35:37Z"},"bitsUsed":3,"bitsLeft":249766,"requestsLeft":922,"advisoryDelay":1630},"id":13}\'\nlatency: 0.3301548957824707\n\nendTime: 1551306938.173727\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[7],"completionTime":"2019-02-27 12:35:37Z"},"bitsUsed":3,"bitsLeft":249763,"requestsLeft":921,"advisoryDelay":1630},"id":13}\'\nlatency: 0.34532642364501953\n\nendTime: 1551306938.173727\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[4],"completionTime":"2019-02-27 12:35:37Z"},"bitsUsed":3,"bitsLeft":249760,"requestsLeft":920,"advisoryDelay":680},"id":13}\'\nlatency: 0.34632205963134766\n\nendTime: 1551306938.189349\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[7],"completionTime":"2019-02-27 12:35:37Z"},"bitsUsed":3,"bitsLeft":249757,"requestsLeft":919,"advisoryDelay":1630},"id":13}\'\nlatency: 0.35995030403137207\n\nendTime: 1551306938.2049732\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[3],"completionTime":"2019-02-27 12:35:37Z"},"bitsUsed":3,"bitsLeft":249754,"requestsLeft":918,"advisoryDelay":1630},"id":13}\'\nlatency: 0.37756824493408203\n\nendTime: 1551306938.2049732\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[7],"completionTime":"2019-02-27 12:35:37Z"},"bitsUsed":3,"bitsLeft":249751,"requestsLeft":917,"advisoryDelay":1630},"id":13}\'\nlatency: 0.37557458877563477\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306940.8380637\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306940.8380637\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306940.8380637\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551306940.8380637\n\nendTime: 1551306941.1631796\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[1],"completionTime":"2019-02-27 12:35:40Z"},"bitsUsed":3,"bitsLeft":249748,"requestsLeft":916,"advisoryDelay":1580},"id":13}\'\nlatency: 0.3251159191131592\n\nendTime: 1551306941.1781237\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[4],"completionTime":"2019-02-27 12:35:40Z"},"bitsUsed":3,"bitsLeft":249745,"requestsLeft":915,"advisoryDelay":630},"id":13}\'\nlatency: 0.3400599956512451\n\nendTime: 1551306941.1781237\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[2],"completionTime":"2019-02-27 12:35:40Z"},"bitsUsed":3,"bitsLeft":249742,"requestsLeft":914,"advisoryDelay":1580},"id":13}\'\nlatency: 0.3400599956512451\n\nendTime: 1551306941.1781237\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[7],"completionTime":"2019-02-27 12:35:40Z"},"bitsUsed":3,"bitsLeft":249739,"requestsLeft":913,"advisoryDelay":1580},"id":13}\'\nlatency: 0.3400599956512451\n\nserviceUrl: https://www.virustotal.com/vtapi/v2/file/report\ndata: {\'apikey\': \'ad44a5735ba6bd73d281ba95cc6203dba9224d748b1da8d5be9fb80d77bff0fb\', \'resource\': \'\', \'scan_id\': \'\'}\nstartTime: 1551307236.1416218\n\nendTime: 1551307236.7653742\nresponse: []\nlatency: 0.6237523555755615\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551307237.0114188\n\nendTime: 1551307237.453949\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[1],"completionTime":"2019-02-27 12:40:36Z"},"bitsUsed":3,"bitsLeft":249736,"requestsLeft":912,"advisoryDelay":800},"id":13}\'\nlatency: 0.44253015518188477\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551307239.536305\n\nendTime: 1551307239.9207888\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[7],"completionTime":"2019-02-27 12:40:38Z"},"bitsUsed":3,"bitsLeft":249733,"requestsLeft":911,"advisoryDelay":830},"id":13}\'\nlatency: 0.38448381423950195\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551307242.1921518\n\nendTime: 1551307242.5308764\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[4],"completionTime":"2019-02-27 12:40:41Z"},"bitsUsed":3,"bitsLeft":249730,"requestsLeft":910,"advisoryDelay":820},"id":13}\'\nlatency: 0.33872461318969727\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551307244.5425332\n\nendTime: 1551307244.898737\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[1],"completionTime":"2019-02-27 12:40:43Z"},"bitsUsed":3,"bitsLeft":249727,"requestsLeft":909,"advisoryDelay":920},"id":13}\'\nlatency: 0.3562037944793701\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551307247.8106282\n\nendTime: 1551307248.1700087\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[6],"completionTime":"2019-02-27 12:40:47Z"},"bitsUsed":3,"bitsLeft":249724,"requestsLeft":908,"advisoryDelay":750},"id":13}\'\nlatency: 0.35938048362731934\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551307250.204456\n\nendTime: 1551307250.5627663\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[1],"completionTime":"2019-02-27 12:40:49Z"},"bitsUsed":3,"bitsLeft":249721,"requestsLeft":907,"advisoryDelay":690},"id":13}\'\nlatency: 0.3583102226257324\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551307253.451017\n\nendTime: 1551307253.7579858\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[4],"completionTime":"2019-02-27 12:40:52Z"},"bitsUsed":3,"bitsLeft":249718,"requestsLeft":906,"advisoryDelay":690},"id":13}\'\nlatency: 0.30696892738342285\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551307266.7831504\n\nendTime: 1551307267.0858228\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[5],"completionTime":"2019-02-27 12:41:06Z"},"bitsUsed":3,"bitsLeft":249715,"requestsLeft":905,"advisoryDelay":540},"id":13}\'\nlatency: 0.3026723861694336\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551307671.0593545\n\nendTime: 1551307671.4357016\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[9],"completionTime":"2019-02-27 12:47:50Z"},"bitsUsed":3,"bitsLeft":249712,"requestsLeft":904,"advisoryDelay":1040},"id":13}\'\nlatency: 0.37634706497192383\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551307673.078821\n\nendTime: 1551307673.4048936\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[10],"completionTime":"2019-02-27 12:47:52Z"},"bitsUsed":3,"bitsLeft":249709,"requestsLeft":903,"advisoryDelay":580},"id":13}\'\nlatency: 0.32607269287109375\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551307675.3194861\n\nendTime: 1551307675.628872\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[9],"completionTime":"2019-02-27 12:47:54Z"},"bitsUsed":3,"bitsLeft":249706,"requestsLeft":902,"advisoryDelay":530},"id":13}\'\nlatency: 0.3093857765197754\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551307677.229563\n\nendTime: 1551307677.5654209\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[9],"completionTime":"2019-02-27 12:47:56Z"},"bitsUsed":3,"bitsLeft":249703,"requestsLeft":901,"advisoryDelay":960},"id":13}\'\nlatency: 0.3358578681945801\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551307679.874632\n\nendTime: 1551307680.245052\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[2],"completionTime":"2019-02-27 12:47:59Z"},"bitsUsed":3,"bitsLeft":249700,"requestsLeft":900,"advisoryDelay":960},"id":13}\'\nlatency: 0.3704202175140381\n\nserviceUrl: http://www.splashbase.co/api/v1/images/{id}\ndata: b\'\'\nstartTime: 1551312087.4249547\n\nendTime: 1551312088.0228496\nresponse: b\'{"id":31,"url":"https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mp6scv2xrZ1st5lhmo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/unsplash/large/13HKXsI","source_id":9,"copyright":"CC0","site":"unsplash"}\'\nlatency: 0.5978949069976807\n\nserviceUrl: http://www.splashbase.co/api/v1/images/{id}\ndata: b\'\'\nstartTime: 1551312194.8250997\n\nendTime: 1551312195.2034647\nresponse: b\'{"id":3131,"url":"https://splashbase.s3.amazonaws.com/jaymantri/regular/tumblr_niyki1GD161qfirfao1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/jaymantri/large/1BvDIWm","source_id":null,"copyright":"CC0","site":"jaymantri"}\'\nlatency: 0.37836503982543945\n\nserviceUrl: http://www.splashbase.co/api/v1/images/{id}\ndata: b\'\'\nstartTime: 1551312247.751812\n\nendTime: 1551312248.0926187\nresponse: b\'{"id":12,"url":"https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mo2wz2LTCs1st5lhmo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/unsplash/large/11xJets","source_id":3,"copyright":"CC0","site":"unsplash"}\'\nlatency: 0.3408067226409912\n\nserviceUrl: http://www.splashbase.co/api/v1/images/{id}\ndata: b\'\'\nstartTime: 1551312319.0108447\n\nendTime: 1551312319.440284\nresponse: b\'{"id":31,"url":"https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mp6scv2xrZ1st5lhmo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/unsplash/large/13HKXsI","source_id":9,"copyright":"CC0","site":"unsplash"}\'\nlatency: 0.4294393062591553\n\nserviceUrl: http://www.splashbase.co/api/v1/images/{id}\ndata: b\'\'\nstartTime: 1551312368.3022676\n\nendTime: 1551312368.7226222\nresponse: b\'{"id":31,"url":"https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mp6scv2xrZ1st5lhmo1_1280.jpg","large_url":"https://splashbase.s3.amazonaws.com/unsplash/large/13HKXsI","source_id":9,"copyright":"CC0","site":"unsplash"}\'\nlatency: 0.42035460472106934\n\nserviceUrl: https://www.virustotal.com/vtapi/v2/file/report\ndata: {\'apikey\': \'ad44a5735ba6bd73d281ba95cc6203dba9224d748b1da8d5be9fb80d77bff0fb\', \'resource\': \'\', \'scan_id\': \'\'}\nstartTime: 1551312629.3011868\n\nendTime: 1551312629.8700287\nresponse: []\nlatency: 0.5688419342041016\n\nserviceUrl: https://www.virustotal.com/vtapi/v2/file/report\ndata: {\'apikey\': \'ad44a5735ba6bd73d281ba95cc6203dba9224d748b1da8d5be9fb80d77bff0fb\', \'resource\': \'\', \'scan_id\': \'\'}\nstartTime: 1551312732.6826499\n\nendTime: 1551312733.0531533\nresponse: []\nlatency: 0.37050342559814453\n\nserviceUrl: https://www.virustotal.com/vtapi/v2/file/report\ndata: {\'apikey\': \'ad44a5735ba6bd73d281ba95cc6203dba9224d748b1da8d5be9fb80d77bff0fb\', \'resource\': \'\', \'scan_id\': \'\'}\nstartTime: 1551312770.443847\n\nendTime: 1551312770.8646889\nresponse: []\nlatency: 0.42084193229675293\n\nserviceUrl: https://www.virustotal.com/vtapi/v2/file/report\ndata: {\'apikey\': \'ad44a5735ba6bd73d281ba95cc6203dba9224d748b1da8d5be9fb80d77bff0fb\', \'resource\': \'\', \'scan_id\': \'\'}\nstartTime: 1551312840.7370687\n\nendTime: 1551312841.3016863\nresponse: []\nlatency: 0.5646176338195801\n\nserviceUrl: https://www.virustotal.com/vtapi/v2/file/report\ndata: {\'apikey\': \'ad44a5735ba6bd73d281ba95cc6203dba9224d748b1da8d5be9fb80d77bff0fb\', \'resource\': \'\', \'scan_id\': \'\'}\nstartTime: 1551312873.835007\n\nendTime: 1551312874.167536\nresponse: []\nlatency: 0.33252906799316406\n\nserviceUrl: https://www.virustotal.com/vtapi/v2/file/report\ndata: {\'apikey\': \'ad44a5735ba6bd73d281ba95cc6203dba9224d748b1da8d5be9fb80d77bff0fb\', \'resource\': \'\', \'scan_id\': \'\'}\nstartTime: 1551312898.3088691\n\nendTime: 1551312898.9542716\nresponse: []\nlatency: 0.6454024314880371\n\nserviceUrl: https://www.virustotal.com/vtapi/v2/file/report\ndata: {\'apikey\': \'ad44a5735ba6bd73d281ba95cc6203dba9224d748b1da8d5be9fb80d77bff0fb\', \'resource\': \'\', \'scan_id\': \'\'}\nstartTime: 1551312920.7511332\n\nendTime: 1551312921.2494714\nresponse: []\nlatency: 0.4983382225036621\n\nserviceUrl: https://www.virustotal.com/vtapi/v2/file/report\ndata: {\'apikey\': \'ad44a5735ba6bd73d281ba95cc6203dba9224d748b1da8d5be9fb80d77bff0fb\', \'resource\': \'\', \'scan_id\': \'\'}\nstartTime: 1551312927.8997805\n\nendTime: 1551312928.2368784\nresponse: []\nlatency: 0.3370978832244873\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551313087.800976\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551313092.823614\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551313113.80244\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551313113.80244\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551313113.80244\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551313113.80244\n\nendTime: 1551313130.1379058\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[10],"completionTime":"2019-02-27 14:18:49Z"},"bitsUsed":3,"bitsLeft":249697,"requestsLeft":899,"advisoryDelay":1160},"id":13}\'\nlatency: 42.33692979812622\n\nendTime: 1551313135.2541933\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[8],"completionTime":"2019-02-27 14:18:54Z"},"bitsUsed":3,"bitsLeft":249694,"requestsLeft":898,"advisoryDelay":1230},"id":13}\'\nlatency: 42.43057942390442\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551313137.4762378\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551313148.3738456\n\nendTime: 1551313156.1733868\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[8],"completionTime":"2019-02-27 14:19:15Z"},"bitsUsed":3,"bitsLeft":249691,"requestsLeft":897,"advisoryDelay":1200},"id":13}\'\nlatency: 42.37094688415527\n\nendTime: 1551313156.185355\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[7],"completionTime":"2019-02-27 14:19:15Z"},"bitsUsed":3,"bitsLeft":249688,"requestsLeft":896,"advisoryDelay":1350},"id":13}\'\nlatency: 42.382915019989014\n\nendTime: 1551313156.2262468\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[3],"completionTime":"2019-02-27 14:19:15Z"},"bitsUsed":3,"bitsLeft":249685,"requestsLeft":895,"advisoryDelay":1350},"id":13}\'\nlatency: 42.42380690574646\n\nendTime: 1551313156.2342248\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[4],"completionTime":"2019-02-27 14:19:15Z"},"bitsUsed":3,"bitsLeft":249682,"requestsLeft":894,"advisoryDelay":1350},"id":13}\'\nlatency: 42.431784868240356\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551313158.4336793\n\nendTime: 1551313179.820262\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[3],"completionTime":"2019-02-27 14:19:38Z"},"bitsUsed":3,"bitsLeft":249679,"requestsLeft":893,"advisoryDelay":1310},"id":13}\'\nlatency: 42.34402418136597\n\nendTime: 1551313190.716155\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[9],"completionTime":"2019-02-27 14:19:49Z"},"bitsUsed":3,"bitsLeft":249676,"requestsLeft":892,"advisoryDelay":1570},"id":13}\'\nlatency: 42.34230947494507\n\nendTime: 1551313200.8355339\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[2],"completionTime":"2019-02-27 14:19:59Z"},"bitsUsed":3,"bitsLeft":249673,"requestsLeft":891,"advisoryDelay":1630},"id":13}\'\nlatency: 42.401854515075684\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551313205.8311565\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551313246.1001074\n\nendTime: 1551313248.1431153\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[1],"completionTime":"2019-02-27 14:20:47Z"},"bitsUsed":3,"bitsLeft":249670,"requestsLeft":890,"advisoryDelay":1440},"id":13}\'\nlatency: 42.31195878982544\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551313272.401832\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551313276.0340583\n\nendTime: 1551313288.4510925\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[9],"completionTime":"2019-02-27 14:21:27Z"},"bitsUsed":3,"bitsLeft":249667,"requestsLeft":889,"advisoryDelay":1470},"id":13}\'\nlatency: 42.350985050201416\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551313290.5894527\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551313301.8389628\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551313303.0248559\n\nendTime: 1551313314.7676446\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[9],"completionTime":"2019-02-27 14:21:53Z"},"bitsUsed":3,"bitsLeft":249664,"requestsLeft":888,"advisoryDelay":1610},"id":13}\'\nlatency: 42.36581254005432\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551313317.7245636\n\nendTime: 1551313318.386091\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[1],"completionTime":"2019-02-27 14:21:57Z"},"bitsUsed":3,"bitsLeft":249661,"requestsLeft":887,"advisoryDelay":1480},"id":13}\'\nlatency: 42.35203266143799\n\nendTime: 1551313332.9162114\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[9],"completionTime":"2019-02-27 14:22:11Z"},"bitsUsed":3,"bitsLeft":249658,"requestsLeft":886,"advisoryDelay":1230},"id":13}\'\nlatency: 42.32675862312317\n\nendTime: 1551313344.1459544\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[6],"completionTime":"2019-02-27 14:22:23Z"},"bitsUsed":3,"bitsLeft":249655,"requestsLeft":885,"advisoryDelay":1110},"id":13}\'\nlatency: 42.30699157714844\n\nendTime: 1551313345.409707\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[2],"completionTime":"2019-02-27 14:22:24Z"},"bitsUsed":3,"bitsLeft":249652,"requestsLeft":884,"advisoryDelay":1420},"id":13}\'\nlatency: 42.3848512172699\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551313350.40575\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551313357.8559368\n\nendTime: 1551313360.090334\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[4],"completionTime":"2019-02-27 14:22:39Z"},"bitsUsed":3,"bitsLeft":249649,"requestsLeft":883,"advisoryDelay":860},"id":13}\'\nlatency: 42.36577033996582\n\nendTime: 1551313392.801318\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[5],"completionTime":"2019-02-27 14:23:11Z"},"bitsUsed":3,"bitsLeft":249646,"requestsLeft":882,"advisoryDelay":1130},"id":13}\'\nlatency: 42.395567893981934\n\nendTime: 1551313400.2260132\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[5],"completionTime":"2019-02-27 14:23:19Z"},"bitsUsed":3,"bitsLeft":249643,"requestsLeft":881,"advisoryDelay":1040},"id":13}\'\nlatency: 42.370076417922974\n\nserviceUrl: https://api.random.org/json-rpc/2/invoke\ndata: b\'{"jsonrpc": "2.0", "method": "generateIntegers", "params": {"apiKey": "3635cafe-f195-4206-8852-dd80ce4b4ce6", "n": 1, "min": 1, "max": 10}, "id": 13}\'\nstartTime: 1551313427.346342\n\nendTime: 1551313469.799306\nresponse: b\'{"jsonrpc":"2.0","result":{"random":{"data":[6],"completionTime":"2019-02-27 14:24:28Z"},"bitsUsed":3,"bitsLeft":249640,"requestsLeft":880,"advisoryDelay":1080},"id":13}\'\nlatency: 42.45296382904053\n\n'
endTime: 1551314830.2851
latency: 1.5158324241638184

request: b'GET / HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUpgrade-Insecure-Requests: 1\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551316126.7532318
response: b'HTTP/1.1 200\r\n\r\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n    <form id="getByIdForm" action="" method="">\n        <label for="addImgLbl">Get image by id\n            <input id="numberId" type="text">\n        </label>\n        <input type="submit" value="GET">\n    </form>\n    <button id="randomBtn">Random.org (1,10)</button>\n    <button id="getRandomImg">Get Image</button>\n    <button id="useServiceBtn">Send Request</button>\n    <button id="checkMetricsBtn">Check history</button>\n    <button id="checkScanResultBtn">Check Scan Result</button>\n    <button id="killBtn">Kill it</button>\n    <p>Random number: <span id="random"></span></p>\n    <div id="serviceResults">\n        <p>Your number is: <span id="randomNumber"></span></p>\n        <img id="img1"/>\n        <p>Scan id:  <span id="scanId"></span></p>\n        <p>Resource: <span id="res"></span></p>\n    </div>\n    <p>Scan result: <span id="scanResult"></span></p>\n\n    \n    <script>\n        function getImage(){\n            let requestStartTime = Date.now()\n            console.log("start time: ", requestStartTime)\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getImage")\n            req.onreadystatechange = function (ev){\n                responseObj = ev.target\n                \n                switch(responseObj.readyState){\n                    case 4: // all good\n                        let res = JSON.parse(responseObj.response)\n                        console.log("responseParsed : ", res)\n                        let responseTime = Date.now()\n                        console.log("end time", responseTime)\n                        let duration = responseTime - requestStartTime\n                        console.log(`latency: ${duration}ms`)\n                        let img = document.getElementById("img1")\n                        img.style.width = "200px";\n                        img.style.height = "200px";\n                        img.src = res["url"]\n                        break;\n                    default:\n                        break;\n                }\n            }\n            req.send()\n        }\n        function consumeApi(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/useService")\n            req.addEventListener("load", function(event){\n                console.log("respo ", event.target.response)\n                let res = JSON.parse(event.target.response)\n                console.log("parsed", res)\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = res["src"]\n                document.getElementById("randomNumber").textContent = res["number"]\n                document.getElementById("scanId").textContent = res["scan_id"]\n                document.getElementById("res").textContent = res["resource"]\n            })\n            req.addEventListener("error", function(event){\n                console.log("error", event)\n            })\n            req.send()\n        }\n        function checkMetrics(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/metrics")\n            req.addEventListener("load", function (ev){\n                responseObj = ev.srcElement\n                console.log("response:", responseObj.response)\n                // let res = JSON.parse(responseObj.response)\n                // console.log("parsed", res)\n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            req.send()\n        }\n\n        function checkScanResult(){\n            let scanId = document.getElementById("scanId")\n            let res = document.getElementById("res")\n            console.log("Scan id", scanId.innerText);\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("POST", "/checkScanResult")\n            req.addEventListener("load", function (ev){\n                response = ev.target.response                \n                document.getElementById("scanResult").innerText = response\n                \n            })\n            req.addEventListener("error", function(ev){\n                console.log("error", ev)\n            })\n            // req.send(JSON.stringify({))\n            let data = {\n                \'scan_id\': scanId.innerText,\n                // \'scan_id\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590-1551225348\',\n                \'resource\': res.innerText\n                // \'resource\': \'fb9740b788d86c6156ab4076b23fd5f8425c29155062af4d187a87f03b7f2590\'\n            }\n            req.send(JSON.stringify(data))\n        }\n        function getRandom(){\n            let requestStartTime = Date.now()\n            let req = new XMLHttpRequest()\n            req.open("GET", "/getRandom")\n            req.addEventListener("load", function(event){\n                console.log(event)\n                document.getElementById("random").innerText = event.srcElement.response\n                let requestEndTime = Date.now()\n                let duration = requestEndTime - requestStartTime\n                console.log(`latency: ${duration}ms`)\n            })\n            req.addEventListener("error", function(){\n                console.log("error")\n            })\n            req.send()\n        }\n        function killAll(){\n            batches = []\n            for(let i=0; i<5;i++){\n                let apiRequest = fetch(\'/getRandom\').then(function(response){ \n                    return response.json()\n                });\n                batches.push(apiRequest)\n            }\n            \n\n            let batchResult = {};\n            let all = Promise.all(batches).then(function(values){\n                for(let i=0; i<5; i++){\n                    batchResult[`x${i}`]=values[i]\n                }\n            }).then(function(response){\n                console.log(response)\n            });\n            console.log(all)\n\n        }\n        let form = document.getElementById(\'getByIdForm\')\n        form.addEventListener("submit", function(event) {\n            event.preventDefault()\n            let val = document.querySelector("#numberId").value\n            //let val = event.srcElement[0].value\n            let rq = new XMLHttpRequest()\n            rq.open("POST", "/getImage")\n            rq.addEventListener("load", function(ev){\n                let img = document.getElementById("img1")\n                img.style.width = "200px";\n                img.style.height = "200px";\n                img.src = ev.srcElement.responseText\n            })\n            // rq.send(JSON.stringify(`{\'id\': ${val}}`))\n            rq.send(JSON.stringify(`id=${val}`))\n        }, false);\n\n        let randomBtn = document.getElementById("randomBtn")\n        randomBtn.addEventListener("click", getRandom)\n\n        let getRandomImg = document.getElementById("getRandomImg")\n        getRandomImg.addEventListener("click", getImage)\n\n        let useServiceBtn = document.getElementById("useServiceBtn")\n        useServiceBtn.addEventListener("click", consumeApi)\n\n        let checkMetricsBtn = document.getElementById("checkMetricsBtn")\n        checkMetricsBtn.addEventListener("click", checkMetrics)\n\n        let checkResponseBtn = document.getElementById("checkScanResultBtn")\n        checkResponseBtn.addEventListener("click", checkScanResult)\n        \n        let killBtn = document.getElementById("killBtn")\n        killBtn.addEventListener("click", killAll)\n    </script>\n</body>\n</html>'
endTime: 1551316127.908131
latency: 1.1548991203308105

request: b'GET /favicon.ico HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551316129.1158712
response: b'HTTP/1.1 200\r\n\r\nb\'\\x00\\x00\\x01\\x00\\x01\\x00\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x00\\x16\\x00\\x00\\x00(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00s\\x00\\xff\\x00\\xff\\x84\\x00\\x00\\x00\\xff\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x01\\x13\\x00\\x00\\x03\\x01 \\x02\\x00\\x13\\x00\\x00\\x03\\x00\\x00\\x003!\\x00\\x00\\x03\\x00\\x00\\x002#1\\x00\\x10\\x00\\x00\\x03\\x03\\x022\\x03\\x0303320\\x01!3\\x03\\x033 2\\x03 \\x10\\x003\\x00\\x00#3\\x00\\x03\\x00\\x00\\x00\\x00\\x12#0\\x01\\x00\\x00 \\x12"\\x0200\\x10\\x00 #\\x00 \\x03\\x00\\x01\\x00!"\\x02\\x00\\x03\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x000\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfb\\x00\\x00\\xf8\\xfa\\x00\\x00l\\xfb\\x00\\x00\\xf0\\xfb\\x00\\x00\\xf07\\x00\\x00\\xea)\\x00\\x00\\x01\\x82\\x00\\x00\\x84\\x97\\x00\\x00<;\\x00\\x00\\xfc\\x1b\\x00\\x00\\xd0\\x95\\x00\\x00\\xd3n\\x00\\x00\\xc2\\xef\\x00\\x00\\xbb\\xf7\\x00\\x00\\xbf\\xff\\x00\\x00\\xff\\xff\\x00\\x00\''
endTime: 1551316130.242858
latency: 1.1269867420196533

request: b'GET /useService HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551316132.6025472
response: b'HTTP/1.1 200\r\n\r\n{"number": 9, "src": "https://splashbase.s3.amazonaws.com/unsplash/regular/tumblr_mnh29fxz111st5lhmo1_1280.jpg", "resource": "8a5f7ebb1857352f2351d031f02a4f03db62b7676ef6fb5a2802632d901657b8", "scan_id": "8a5f7ebb1857352f2351d031f02a4f03db62b7676ef6fb5a2802632d901657b8-1551280177"}'
endTime: 1551316178.5432205
latency: 45.94067335128784

request: b''
startTime: 1551316179.5329244
request: b'POST /checkScanResult HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nContent-Length: 167\r\nOrigin: http://localhost:8888\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nContent-Type: text/plain;charset=UTF-8\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n{"scan_id":"8a5f7ebb1857352f2351d031f02a4f03db62b7676ef6fb5a2802632d901657b8-1551280177","resource":"8a5f7ebb1857352f2351d031f02a4f03db62b7676ef6fb5a2802632d901657b8"}'
startTime: 1551316209.9239402
response: b'HTTP/1.1 200\r\n\r\nFalse'
endTime: 1551316211.4080064
latency: 1.4840662479400635

request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551316215.8117807
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551316236.128767
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551316236.1317575
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551316236.1327553
request: b'GET /getRandom HTTP/1.1\r\nHost: localhost:8888\r\nConnection: keep-alive\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nAccept: */*\r\nReferer: http://localhost:8888/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9,ro;q=0.8,de;q=0.7\r\n\r\n'
startTime: 1551316236.1327553
response: b'HTTP/1.1 200\r\n\r\n4'
endTime: 1551316259.1135006
latency: 43.30171990394592

response: b'HTTP/1.1 200\r\n\r\n5'
endTime: 1551316279.3956542
latency: 43.26289892196655

response: b'HTTP/1.1 200\r\n\r\n7'
endTime: 1551316279.457497
latency: 43.32872986793518

response: b'HTTP/1.1 200\r\n\r\n7'
endTime: 1551316279.4887428
latency: 43.355987548828125

response: b'HTTP/1.1 200\r\n\r\n8'
endTime: 1551316279.520022
latency: 43.388264417648315

